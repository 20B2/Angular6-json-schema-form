{"version":3,"sources":["null","ng://angular6-json-schema-form/lib/shared/validator.functions.ts","ng://angular6-json-schema-form/lib/shared/utility.functions.ts","ng://angular6-json-schema-form/lib/shared/jsonpointer.functions.ts","ng://angular6-json-schema-form/lib/shared/merge-schemas.function.ts","ng://angular6-json-schema-form/lib/shared/json-schema.functions.ts","ng://angular6-json-schema-form/lib/shared/format-regex.constants.ts","ng://angular6-json-schema-form/lib/shared/json.validators.ts","ng://angular6-json-schema-form/lib/shared/form-group.functions.ts","ng://angular6-json-schema-form/lib/shared/layout.functions.ts","ng://angular6-json-schema-form/lib/locale/en-validation-messages.ts","ng://angular6-json-schema-form/lib/locale/fr-validation-messages.ts","ng://angular6-json-schema-form/lib/json-schema-form.service.ts","ng://angular6-json-schema-form/lib/widget-library/add-reference.component.ts","ng://angular6-json-schema-form/lib/widget-library/one-of.component.ts","ng://angular6-json-schema-form/lib/widget-library/button.component.ts","ng://angular6-json-schema-form/lib/widget-library/checkbox.component.ts","ng://angular6-json-schema-form/lib/shared/convert-schema-to-draft6.function.ts","ng://angular6-json-schema-form/lib/shared/date.functions.ts","ng://angular6-json-schema-form/lib/widget-library/checkboxes.component.ts","ng://angular6-json-schema-form/lib/widget-library/file.component.ts","ng://angular6-json-schema-form/lib/widget-library/input.component.ts","ng://angular6-json-schema-form/lib/widget-library/message.component.ts","ng://angular6-json-schema-form/lib/widget-library/none.component.ts","ng://angular6-json-schema-form/lib/widget-library/number.component.ts","ng://angular6-json-schema-form/lib/widget-library/radios.component.ts","ng://angular6-json-schema-form/lib/widget-library/root.component.ts","ng://angular6-json-schema-form/lib/widget-library/section.component.ts","ng://angular6-json-schema-form/lib/widget-library/select.component.ts","ng://angular6-json-schema-form/lib/widget-library/select-framework.component.ts","ng://angular6-json-schema-form/lib/widget-library/select-widget.component.ts","ng://angular6-json-schema-form/lib/widget-library/submit.component.ts","ng://angular6-json-schema-form/lib/widget-library/tabs.component.ts","ng://angular6-json-schema-form/lib/widget-library/template.component.ts","ng://angular6-json-schema-form/lib/widget-library/textarea.component.ts","ng://angular6-json-schema-form/lib/widget-library/widget-library.service.ts","ng://angular6-json-schema-form/lib/framework-library/framework.ts","ng://angular6-json-schema-form/lib/framework-library/framework-library.service.ts","ng://angular6-json-schema-form/lib/json-schema-form.component.ts","ng://angular6-json-schema-form/lib/framework-library/no-framework/no-framework.component.ts","ng://angular6-json-schema-form/lib/framework-library/no-framework/no.framework.ts","ng://angular6-json-schema-form/lib/widget-library/hidden.component.ts","ng://angular6-json-schema-form/lib/widget-library/tab.component.ts","ng://angular6-json-schema-form/lib/widget-library/orderable.directive.ts","ng://angular6-json-schema-form/lib/widget-library/index.ts","ng://angular6-json-schema-form/lib/widget-library/widget-library.module.ts","ng://angular6-json-schema-form/lib/framework-library/no-framework/no-framework.module.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/flex-layout-root.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/flex-layout-section.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-add-reference.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-one-of.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-button.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-button-group.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-checkbox.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-checkboxes.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-chip-list.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-datepicker.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-file.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-input.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-number.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-radios.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-select.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-slider.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-stepper.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-tabs.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-textarea.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-design-framework.component.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-design.framework.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/index.ts","ng://angular6-json-schema-form/lib/json-schema-form.module.ts","ng://angular6-json-schema-form/lib/framework-library/material-design-framework/material-design-framework.module.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-3-framework/bootstrap-3-framework.component.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-3-framework/bootstrap-3.framework.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-3-framework/bootstrap-3-framework.module.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-4-framework/bootstrap-4-framework.component.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-4-framework/bootstrap-4.framework.ts","ng://angular6-json-schema-form/lib/framework-library/bootstrap-4-framework/bootstrap-4-framework.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","_executeValidators","control","validators","invert","map","validator","_executeAsyncValidators","_mergeObjects","objects","_i","mergedObject","objects_1","tslib_1.__values","objects_1_1","currentObject","isObject","_a","keys","_b","currentValue","mergedValue","isDefined","isBoolean","xor","getType","_mergeErrors","arrayOfErrors","mergedErrors","isEmpty","undefined","hasValue","isArray","isString","isNumber","strict","isNaN","isInteger","option","item","toString","isDate","isMap","isSet","isType","type","console","isPrimitive","toJavaScriptType","types","strictIntegers","inArray","parseInt","parseFloat","toISOString","slice","getTime","toSchemaType","includes","testValue","isPromise","object","then","isObservable","subscribe","toObservable","observable","from","Observable","array","allIn","subItem","value1","value2","addClasses","oldClasses","newClasses","badType","toSet","Set","split","combinedSet","forEach","add","join","copy","errors","Map","fn","recurse","rootObject","forEachCopy","newObject","hasOwn","property","has","mergeFilteredObject","targetObject","sourceObject","excludeKeys","keyFn","valFn","val","uniqueItems","items","returnItems","items_1","items_1_1","commonItems","arrays","filter","arrays_1","arrays_1_1","fixTitle","name","toTitleCase","replace","input","forceWords","forceArray","forceArrayLower","w","toLowerCase","noInitialCase","toUpperCase","prevLastChar","trim","word","idx","search","newWord","forceWord","indexOf","JsonPointer","get","pointer","startSlice","endSlice","getBoolean","keyArray","parse","subObject","keyArray_1","keyArray_1_1","getCopy","objectToCopy","forEachDeepCopy","getFirst","defaultValue","items_2","items_2_1","isJsonPointer","getFirstCopy","set","insert","match","lastKey","splice","setCopy","insertCopy","remove","pop","parentObject","dict","results","forEachDeep","bottomUp","v","newPointer","escape","unescape","compile","_this","toKey","every","test","isSubPointer","shortPointer","longPointer","trueIfMatching","invalid","toIndexedPointer","genericPointer","indexArray","arrayMap","indexedPointer_1","arrayIndex_1","stringIndex","indexArray_1","indexArray_1_1","pointerIndex","toGenericPointer","indexedPointer","pointerArray","subPointer","toControlPointer","dataPointer","formGroup","controlMustExist","dataPointerArray","controlPointerArray","subGroup","dataPointerArray_1","dataPointerArray_1_1","controls","toSchemaPointer","schema","firstKey","shift","properties","additionalProperties","arrayItem","additionalItems","toDataPointer","schemaPointer","pointerSuffix","secondKey","parseObjectPath","path","index","parts","nextDot","nextOB","quote","charAt","nextCB","RegExp","Injectable","mergeSchemas","schemas","some","combinedSchema","schemas_1","schemas_1_1","x","y","combinedValue","schemaValue","_.isEqual","allOf","item1","findIndex","item2","combinedObject","subKey","definitions","_d","_e","required","combinedDependency","schemaDependency","dependencies","gcd_1","multipleOf","Math","min","max","notAnyOf","reduce","notAnyOfArray","notSchema","anyOf","not","_g","_h","patternProperties","combinedObject_1","combinedKey","nonMatchingKey","_k","_l","combinedTypes","buildSchemaFromLayout","layout","buildSchemaFromData","data","requireAllFields","isRoot","newSchema","getFieldType","fieldType","integer","null","buildSubSchema","$schema","size","a","minItems","getFromSchema","returnType","subSchema","subSchemaFound","removeRecursiveReferences","recursiveRefMap","possibleReferences","toPointer","fromPointer","getInputType","layoutNode","controlType","checkInlineType","schemaType","maxItems","getTitleMapFromOneOf","color","date","date-time","email","uri","format","oneOf","isInputRequired","listPointerArray","keyName","nextToLastKey","parentSchema","updateInputOptions","jsf","options","newOptions","fixUiKeys","formOptions","defautWidgetOptions","newTitleMap","flatList","titleMap","enum","enumNames","typeahead","autocomplete","tagsinput","validateOnly","title","const","newTitleMap_1","group","getControlValidators","prop","ucLimit","eLimit","limit","exclusive","resolveSchemaReferences","schemaRefLibrary","schemaRecursiveRefMap","dataRecursiveRefMap","refLinks","refMapSet","refMap","refLibrary","subSchemaPointer","refPointer","ref","getSubSchema","checkRefLinks","fromRef1","toRef1","fromRef2","toRef2","refLink","fromRef","toRef","compiledSchema","$ref","fromDataRef","toDataRef","tupleItems","usedPointers","_.cloneDeep","refPointer_1","ptr","refSchema","extraKeys","combineAllOf","fixRequiredArrayProperties","mergedSchema","itemsObject_1","jsonSchemaFormatTests","time","hostname","ipv4","ipv6","uri-reference","uri-template","url","uuid","json-pointer","relative-json-pointer","regex","str","JsonValidators","nullValidator","requiredType","allowedValues","isEqual","enumValue","inputValue","requiredValue","constValue","minLength","minimumLength","currentLength","maxLength","maximumLength","pattern","wholeString","requiredPattern","requiredFormat","isValid","formatTest","minimum","minimumValue","exclusiveMinimum","exclusiveMinimumValue","maximum","maximumValue","exclusiveMaximum","exclusiveMaximumValue","multipleOfValue","minProperties","minimumProperties","currentProperties","maxProperties","maximumProperties","allErrors","requiringField","requiredFields","requiringFieldErrors","requiredFields_1","requiredFields_1_1","requiredField","requirements","requiredFieldErrors","requirement","parameter","minimumItems","currentItems","maximumItems","unique","sorted","sort","duplicateItems","contains","requiredItem","composeAnyOf","presentValidators","composeOneOf","arrayOfValids","composeAllOf","combinedErrors","composeNot","compose","composeAsync","observables","forkJoin","actual","requiredTrue","buildFormGroupTemplate","nodeValue","setValues","templatePointer","setSchemaDefaults","formValues","shortDataPointer","dataMap","nodeOptions","propertyKeys_1","unnamedKeys","fieldsRequired","setRequiredFields","additionalItemsPointer","schemaRefPointer","itemRecursive","itemRefPointer","templateRefLibrary","itemOptions","arrayLength","schemaRef","newTemplate","disabled","buildFormGroup","template","validatorFns","validatorFn","parameters","groupControls_1","newControl","FormGroup","FormArray","_.filter","_.map","FormControl","formControlTemplate","requiredArray","formatFormData","formData","returnEmptyFields","fixErrors","formattedData","genericPointer_1","newValue","keySchemaType","getControl","returnGroup","formControl","buildLayout","widgetLibrary","hasSubmitButton","formLayout","mapLayout","layoutItem","layoutPointer","newNode","_id","_.uniqueId","widget","legend","validationMessages","errorMessages","validationMessage","code","newKey","nodeSchema","findDataPointer_1","searchItem","childDataPointer","lastIndexOf","buildLayoutFromSchema","LastKey","recursive_1","nodeDataMap","hasWidget","oldWidgetType","dataType","listItems","copyValueTo","getWidget","itemRefPointer_1","arrayItemGroup","unshift","arrayItemType","removable","orderable","arrayListItems","layoutRefLibrary","recursiveReference","getLayoutNode","addable","buttonText","fieldStyle","style","parentType","hasRootReference","fullLayout","forRefLibrary","dataPointerPrefix","newNodeType","lastDataKey","newSection_1","keySchemaPointer","innerItem","additionalItemsSchemaPointer","newItem","itemSchemaPointer","prefix","dataRef","newLayout","rootLayout","indexPad","realIndex","newLayoutPointer","itemsArray","tabs","refNode","newLayoutNode","subNode","buildTitleMap","enumList","fieldRequired","hasEmptyValue","name_1","name_2","name_3","name_4","name_5","groupTitleMap","enValidationMessages","log10","frValidationMessages","JsonSchemaFormService","JsonFormCompatibility","ReactJsonSchemaFormCompatibility","AngularSchemaFormCompatibility","tpldata","ajvOptions","jsonPointers","unknownFormats","ajv","Ajv","validateFormData","formGroupTemplate","framework","validData","ajvErrors","validationErrors","dataErrors","formValueSubscription","dataChanges","Subject","isValidChanges","validationErrorChanges","","language","defaultFormOptions","addSubmit","debug","disableInvalidSubmit","formDisabled","formReadonly","loadExternalAssets","pristine","success","supressPropertyTitles","setLayoutDefaults","validateOnRender","widgets","enableErrorState","enableSuccessState","feedback","feedbackOnRender","notitle","readonly","setLanguage","getData","getSchema","getLayout","resetAllValues","buildRemoteError","value_1","value_1_1","err","setErrors","emitEvent","validateData","updateSubscriptions","compiledErrors","dataPath","message","compileAjvSchema","unsubscribe","valueChanges","formValue","setOptions","addOptions","defaultOptions","globalDefaults_1","suffix","removeSchema","setTpldata","newTpldata","parseText","text","values","parseExpression","expression","delim","all","term","setArrayItemTitle","parentCtx","childNode","parentNode","parentValues","getFormControlValue","isArrayItem","childValue","setItemTitle","ctx","getFormControlGroup","dataIndex","evaluateCondition","arrayIndex","result","condition","model","functionBody","Function","dynFn","initializeControl","bind","getFormControl","boundControl","controlName","getFormControlName","controlValue","controlDisabled","errorMessage","status","formatErrors","showErrors","statusChanges","getDataPointer","addSpaces","string","formatError","errorKey","errorProperty","updateValue","setValue","markAsDirty","targetControl","updateArrayCheckboxList","checkboxList","formArray","removeAt","checkboxList_1","checkboxList_1_1","checkboxItem","checked","newFormControl","getLayoutArray","getLayoutPointer","getParentNode","layoutIndex","isControlBound","controlGroup","addItem","newFormGroup","addControl","moveArrayItem","oldIndex","newIndex","at","updateValueAndValidity","layoutArray","removeItem","removeControl","AddReferenceComponent","ngOnInit","event","preventDefault","parent","itemCount","tslib_1.__decorate","Input","Component","selector","changeDetection","ChangeDetectionStrategy","Default","OneOfComponent","ButtonComponent","onClick","CheckboxComponent","trueValue","falseValue","draft","changed","convertSchemaToDraft6","simpleTypes","contentEncoding","media","binaryEncoding","extends","disallow","maxDecimal","pow","divisibleBy","minimumCanEqual","maximumCanEqual","properties_1","requiredKeys_1","optional","requires","dependencies_1","id","$id","addToDescription","description","arrayKeys","numberKeys","objectKeys","stringKeys","filterKeys_1","number","newType","tslib_1.__spread","default","typeSchema","newKey_1","dateToString","dateFormat","stringToDate","getFullYear","getMonth","getDay","getDate","last","1","2","3","ordinal","dateString","findDate","dateParts","part","thisYear","Date","year","foundDate","CheckboxesComponent","layoutOrientation","formArray_1","FileComponent","InputComponent","autoCompleteList","MessageComponent","help","helpvalue","msg","NoneComponent","NumberComponent","allowNegative","allowDecimal","allowExponents","lastValidNumber","RadiosComponent","radiosList","RootComponent","isFlexItem","isDraggable","node","isOrderable","getFlexAttribute","attribute","flex","showWidget","styles","SectionComponent","expanded","expandable","containerType","toggleExpanded","flexActive","displayFlex","display","SelectComponent","selectList","SelectFrameworkComponent","componentFactory","newComponent","updateComponent","ngOnChanges","widgetContainer","createComponent","resolveComponentFactory","instance","ViewChild","read","ViewContainerRef","ComponentFactoryResolver","SelectWidgetComponent","SubmitComponent","TabsComponent","selectedItem","showAddTab","updateControl","select","lastItem","setTabTitle","TemplateComponent","TextareaComponent","WidgetLibraryService","defaultWidget","none","root","select-framework","select-widget","password","tel","datetime","datetime-local","month","range","week","checkbox","file","hidden","image","radio","reset","submit","button","textarea","checkboxes","checkboxes-inline","checkboxbuttons","radios","radios-inline","radiobuttons","section","div","fieldset","one-of","tabarray","tab","html","advancedfieldset","authfieldset","optionfieldset","selectfieldset","conditional","actions","updown","alt-datetime","alt-date","wizard","textline","registeredWidgets","frameworkWidgets","activeWidgets","setActiveWidgets","widgetName","usedAliases","setDefaultWidget","widgetSet","hasDefaultWidget","registerWidget","unRegisterWidget","unRegisterAllWidgets","unRegisterFrameworkWidgets","registerFrameworkWidgets","getAllWidgets","Framework","stylesheets","scripts","FrameworkLibraryService","frameworks","activeFramework","frameworkLibrary","defaultFramework","setFramework","setLoadExternalAssets","hasFramework","getFramework","getFrameworkWidgets","getFrameworkStylesheets","load","getFrameworkScripts","tslib_1.__param","Inject","JSON_SCHEMA_FORM_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","JsonSchemaFormComponent","multi","changeDetector","sanitizer","formInitialized","objectWrap","previousInputs","form","JSONSchema","UISchema","onChanges","EventEmitter","onSubmit","formSchema","dataChange","modelChange","formDataChange","ngModelChange","setFormValues","bypassSecurityTrustResourceUrl","stylesheet","script","updateForm","writeValue","formValuesInput","registerOnChange","onChange","registerOnTouched","onTouched","setDisabledState","isDisabled","initializeForm","changedInput","resetFirst","startsWith","newFormValues","activateForm","patchValue","submitForm","emit","ngModel","initializeOptions","initializeSchema","initializeLayout","initializeData","debugOutput","JSON","stringify","fixJsonFormOptions","alternateLayout","uiSchema","customFormItems","groupPointer","itemPointer","markForCheck","validateOnRender_1","touchAll_1","markAsTouched","Output","OnPush","providers","ChangeDetectorRef","DomSanitizer","NoFrameworkComponent","NoFramework","_super","tslib_1.__extends","HiddenComponent","TabComponent","OrderableDirective","elementRef","ngZone","overParentElement","overChildElement","element","nativeElement","draggable","arrayLayoutIndex","runOutsideAngular","addEventListener","dataTransfer","effectAllowed","sourceArrayIndex","sessionStorage","setItem","dropEffect","getItem","classList","destArrayIndex","Directive","ElementRef","NgZone","BASIC_WIDGETS","WidgetLibraryModule","forRoot","ngModule","WidgetLibraryModule_1","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","declarations","exports","entryComponents","NoFrameworkModule","useClass","FlexLayoutRootComponent","FlexLayoutSectionComponent","fxLayout","fxLayoutWrap","MaterialAddReferenceComponent","MaterialOneOfComponent","MaterialButtonComponent","MaterialButtonGroupComponent","vertical","MaterialCheckboxComponent","showSlideToggle","MaterialCheckboxesComponent","horizontalList","checkedItems","updateAllValues","MaterialChipListComponent","MaterialDatepickerComponent","setControlDate","placeholder","dateValue","MaterialFileComponent","MaterialInputComponent","MaterialNumberComponent","MaterialRadiosComponent","flexDirection","MaterialSelectComponent","MaterialSliderComponent","MaterialStepperComponent","MaterialTabsComponent","MaterialTextareaComponent","MaterialDesignFrameworkComponent","frameworkInitialized","parentArray","dynamicTitle","widgetOptions","initializeFramework","updateTitle","widgetLayoutNode","MaterialDesignFramework","button-group","chip-list","slider","stepper","any-of","card","expansion-panel","MATERIAL_FRAMEWORK_COMPONENTS","JsonSchemaFormModule","ANGULAR_MATERIAL_MODULES","MatAutocompleteModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatExpansionModule","MatFormFieldModule","MatIconModule","MatInputModule","MatNativeDateModule","MatRadioModule","MatSelectModule","MatSliderModule","MatSlideToggleModule","MatStepperModule","MatTabsModule","MatTooltipModule","MaterialDesignFrameworkModule","FlexLayoutModule","Bootstrap3FrameworkComponent","isInputWidget","setTitle","htmlClass","labelHtmlClass","activeClass","fieldAddonLeft","prepend","fieldAddonRight","append","itemLabelHtmlClass","fieldHtmlClass","messageLocation","icon","updateHelpBlock","thisVar","helpBlock","dirty","Bootstrap3Framework","Bootstrap3FrameworkModule","Bootstrap4FrameworkComponent","Bootstrap4Framework","Bootstrap4FrameworkModule","toPromise"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { Observable, from } from 'rxjs';\n\n/**\n * Validator utility function library:\n *\n * Validator and error utilities:\n *   _executeValidators, _executeAsyncValidators, _mergeObjects, _mergeErrors\n *\n * Individual value checking:\n *   isDefined, hasValue, isEmpty\n *\n * Individual type checking:\n *   isString, isNumber, isInteger, isBoolean, isFunction, isObject, isArray,\n *   isMap, isSet, isPromise, isObservable\n *\n * Multiple type checking and fixing:\n *   getType, isType, isPrimitive, toJavaScriptType, toSchemaType,\n *   _toPromise, toObservable\n *\n * Utility functions:\n *   inArray, xor\n *\n * Typescript types and interfaces:\n *   SchemaPrimitiveType, SchemaType, JavaScriptPrimitiveType, JavaScriptType,\n *   PrimitiveValue, PlainObject, IValidatorFn, AsyncIValidatorFn\n *\n * Note: 'IValidatorFn' is short for 'invertable validator function',\n *   which is a validator functions that accepts an optional second\n *   argument which, if set to TRUE, causes the validator to perform\n *   the opposite of its original function.\n */\n\nexport type SchemaPrimitiveType =\n  'string' | 'number' | 'integer' | 'boolean' | 'null';\nexport type SchemaType =\n  'string' | 'number' | 'integer' | 'boolean' | 'null' | 'object' | 'array';\nexport type JavaScriptPrimitiveType =\n  'string' | 'number' | 'boolean' | 'null' | 'undefined';\nexport type JavaScriptType =\n  'string' | 'number' | 'boolean' | 'null' | 'undefined' | 'object' | 'array' |\n  'map' | 'set' | 'arguments' | 'date' | 'error' | 'function' | 'json' |\n  'math' | 'regexp'; // Note: this list is incomplete\nexport type PrimitiveValue = string | number | boolean | null | undefined;\nexport interface PlainObject { [k: string]: any; }\n\nexport type IValidatorFn = (c: AbstractControl, i?: boolean) => PlainObject;\nexport type AsyncIValidatorFn = (c: AbstractControl, i?: boolean) => any;\n\n/**\n * '_executeValidators' utility function\n *\n * Validates a control against an array of validators, and returns\n * an array of the same length containing a combination of error messages\n * (from invalid validators) and null values (from valid validators)\n *\n * //  { AbstractControl } control - control to validate\n * //  { IValidatorFn[] } validators - array of validators\n * //  { boolean } invert - invert?\n * // { PlainObject[] } - array of nulls and error message\n */\nexport function _executeValidators(control, validators, invert = false) {\n  return validators.map(validator => validator(control, invert));\n}\n\n/**\n * '_executeAsyncValidators' utility function\n *\n * Validates a control against an array of async validators, and returns\n * an array of observabe results of the same length containing a combination of\n * error messages (from invalid validators) and null values (from valid ones)\n *\n * //  { AbstractControl } control - control to validate\n * //  { AsyncIValidatorFn[] } validators - array of async validators\n * //  { boolean } invert - invert?\n * //  - array of observable nulls and error message\n */\nexport function _executeAsyncValidators(control, validators, invert = false) {\n  return validators.map(validator => validator(control, invert));\n}\n\n/**\n * '_mergeObjects' utility function\n *\n * Recursively Merges one or more objects into a single object with combined keys.\n * Automatically detects and ignores null and undefined inputs.\n * Also detects duplicated boolean 'not' keys and XORs their values.\n *\n * //  { PlainObject[] } objects - one or more objects to merge\n * // { PlainObject } - merged object\n */\nexport function _mergeObjects(...objects) {\n  const mergedObject: PlainObject = { };\n  for (const currentObject of objects) {\n    if (isObject(currentObject)) {\n      for (const key of Object.keys(currentObject)) {\n        const currentValue = currentObject[key];\n        const mergedValue = mergedObject[key];\n        mergedObject[key] = !isDefined(mergedValue) ? currentValue :\n          key === 'not' && isBoolean(mergedValue, 'strict') &&\n            isBoolean(currentValue, 'strict') ? xor(mergedValue, currentValue) :\n          getType(mergedValue) === 'object' && getType(currentValue) === 'object' ?\n            _mergeObjects(mergedValue, currentValue) :\n            currentValue;\n      }\n    }\n  }\n  return mergedObject;\n}\n\n/**\n * '_mergeErrors' utility function\n *\n * Merges an array of objects.\n * Used for combining the validator errors returned from 'executeValidators'\n *\n * //  { PlainObject[] } arrayOfErrors - array of objects\n * // { PlainObject } - merged object, or null if no usable input objectcs\n */\nexport function _mergeErrors(arrayOfErrors) {\n  const mergedErrors = _mergeObjects(...arrayOfErrors);\n  return isEmpty(mergedErrors) ? null : mergedErrors;\n}\n\n/**\n * 'isDefined' utility function\n *\n * Checks if a variable contains a value of any type.\n * Returns true even for otherwise 'falsey' values of 0, '', and false.\n *\n * //   value - the value to check\n * // { boolean } - false if undefined or null, otherwise true\n */\nexport function isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\n/**\n * 'hasValue' utility function\n *\n * Checks if a variable contains a value.\n * Returs false for null, undefined, or a zero-length strng, '',\n * otherwise returns true.\n * (Stricter than 'isDefined' because it also returns false for '',\n * though it stil returns true for otherwise 'falsey' values 0 and false.)\n *\n * //   value - the value to check\n * // { boolean } - false if undefined, null, or '', otherwise true\n */\nexport function hasValue(value) {\n  return value !== undefined && value !== null && value !== '';\n}\n\n/**\n * 'isEmpty' utility function\n *\n * Similar to !hasValue, but also returns true for empty arrays and objects.\n *\n * //   value - the value to check\n * // { boolean } - false if undefined, null, or '', otherwise true\n */\nexport function isEmpty(value) {\n  if (isArray(value)) { return !value.length; }\n  if (isObject(value)) { return !Object.keys(value).length; }\n  return value === undefined || value === null || value === '';\n}\n\n/**\n * 'isString' utility function\n *\n * Checks if a value is a string.\n *\n * //   value - the value to check\n * // { boolean } - true if string, false if not\n */\nexport function isString(value) {\n  return typeof value === 'string';\n}\n\n/**\n * 'isNumber' utility function\n *\n * Checks if a value is a regular number, numeric string, or JavaScript Date.\n *\n * //   value - the value to check\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\n * // { boolean } - true if number, false if not\n */\nexport function isNumber(value, strict: any = false) {\n  if (strict && typeof value !== 'number') { return false; }\n  return !isNaN(value) && value !== value / 0;\n}\n\n/**\n * 'isInteger' utility function\n *\n * Checks if a value is an integer.\n *\n * //   value - the value to check\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\n * // {boolean } - true if number, false if not\n */\nexport function isInteger(value, strict: any = false) {\n  if (strict && typeof value !== 'number') { return false; }\n  return !isNaN(value) &&  value !== value / 0 && value % 1 === 0;\n}\n\n/**\n * 'isBoolean' utility function\n *\n * Checks if a value is a boolean.\n *\n * //   value - the value to check\n * //  { any = null } option - if 'strict', also checks JavaScript type\n *                              if TRUE or FALSE, checks only for that value\n * // { boolean } - true if boolean, false if not\n */\nexport function isBoolean(value, option: any = null) {\n  if (option === 'strict') { return value === true || value === false; }\n  if (option === true) {\n    return value === true || value === 1 || value === 'true' || value === '1';\n  }\n  if (option === false) {\n    return value === false || value === 0 || value === 'false' || value === '0';\n  }\n  return value === true || value === 1 || value === 'true' || value === '1' ||\n    value === false || value === 0 || value === 'false' || value === '0';\n}\n\nexport function isFunction(item: any): boolean {\n  return typeof item === 'function';\n}\n\nexport function isObject(item: any): boolean {\n  return item !== null && typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Object]';\n}\n\nexport function isArray(item: any): boolean {\n  return Array.isArray(item) ||\n    Object.prototype.toString.call(item) === '[object Array]';\n}\n\nexport function isDate(item: any): boolean {\n  return typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Date]';\n}\n\nexport function isMap(item: any): boolean {\n  return typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Map]';\n}\n\nexport function isSet(item: any): boolean {\n  return typeof item === 'object' &&\n    Object.prototype.toString.call(item) === '[object Set]';\n}\n\nexport function isSymbol(item: any): boolean {\n  return typeof item === 'symbol';\n}\n\n/**\n * 'getType' function\n *\n * Detects the JSON Schema Type of a value.\n * By default, detects numbers and integers even if formatted as strings.\n * (So all integers are also numbers, and any number may also be a string.)\n * However, it only detects true boolean values (to detect boolean values\n * in non-boolean formats, use isBoolean() instead).\n *\n * If passed a second optional parameter of 'strict', it will only detect\n * numbers and integers if they are formatted as JavaScript numbers.\n *\n * Examples:\n * getType('10.5') = 'number'\n * getType(10.5) = 'number'\n * getType('10') = 'integer'\n * getType(10) = 'integer'\n * getType('true') = 'string'\n * getType(true) = 'boolean'\n * getType(null) = 'null'\n * getType({ }) = 'object'\n * getType([]) = 'array'\n *\n * getType('10.5', 'strict') = 'string'\n * getType(10.5, 'strict') = 'number'\n * getType('10', 'strict') = 'string'\n * getType(10, 'strict') = 'integer'\n * getType('true', 'strict') = 'string'\n * getType(true, 'strict') = 'boolean'\n *\n * //   value - value to check\n * //  { any = false } strict - if truthy, also checks JavaScript tyoe\n * // { SchemaType }\n */\nexport function getType(value, strict: any = false) {\n  if (!isDefined(value)) { return 'null'; }\n  if (isArray(value)) { return 'array'; }\n  if (isObject(value)) { return 'object'; }\n  if (isBoolean(value, 'strict')) { return 'boolean'; }\n  if (isInteger(value, strict)) { return 'integer'; }\n  if (isNumber(value, strict)) { return 'number'; }\n  if (isString(value) || (!strict && isDate(value))) { return 'string'; }\n  return null;\n}\n\n/**\n * 'isType' function\n *\n * Checks wether an input (probably string) value contains data of\n * a specified JSON Schema type\n *\n * //  { PrimitiveValue } value - value to check\n * //  { SchemaPrimitiveType } type - type to check\n * // { boolean }\n */\nexport function isType(value, type) {\n  switch (type) {\n    case 'string':\n      return isString(value) || isDate(value);\n    case 'number':\n      return isNumber(value);\n    case 'integer':\n      return isInteger(value);\n    case 'boolean':\n      return isBoolean(value);\n    case 'null':\n      return !hasValue(value);\n    default:\n      console.error(`isType error: \"${type}\" is not a recognized type.`);\n      return null;\n  }\n}\n\n/**\n * 'isPrimitive' function\n *\n * Checks wether an input value is a JavaScript primitive type:\n * string, number, boolean, or null.\n *\n * //   value - value to check\n * // { boolean }\n */\nexport function isPrimitive(value) {\n  return (isString(value) || isNumber(value) ||\n    isBoolean(value, 'strict') || value === null);\n}\n\n/**\n * 'toJavaScriptType' function\n *\n * Converts an input (probably string) value to a JavaScript primitive type -\n * 'string', 'number', 'boolean', or 'null' - before storing in a JSON object.\n *\n * Does not coerce values (other than null), and only converts the types\n * of values that would otherwise be valid.\n *\n * If the optional third parameter 'strictIntegers' is TRUE, and the\n * JSON Schema type 'integer' is specified, it also verifies the input value\n * is an integer and, if it is, returns it as a JaveScript number.\n * If 'strictIntegers' is FALSE (or not set) the type 'integer' is treated\n * exactly the same as 'number', and allows decimals.\n *\n * Valid Examples:\n * toJavaScriptType('10',   'number' ) = 10   // '10'   is a number\n * toJavaScriptType('10',   'integer') = 10   // '10'   is also an integer\n * toJavaScriptType( 10,    'integer') = 10   //  10    is still an integer\n * toJavaScriptType( 10,    'string' ) = '10' //  10    can be made into a string\n * toJavaScriptType('10.5', 'number' ) = 10.5 // '10.5' is a number\n *\n * Invalid Examples:\n * toJavaScriptType('10.5', 'integer') = null // '10.5' is not an integer\n * toJavaScriptType( 10.5,  'integer') = null //  10.5  is still not an integer\n *\n * //  { PrimitiveValue } value - value to convert\n * //  { SchemaPrimitiveType | SchemaPrimitiveType[] } types - types to convert to\n * //  { boolean = false } strictIntegers - if FALSE, treat integers as numbers\n * // { PrimitiveValue }\n */\nexport function toJavaScriptType(value, types, strictIntegers = true)  {\n  if (!isDefined(value)) { return null; }\n  if (isString(types)) { types = [types]; }\n  if (strictIntegers && inArray('integer', types)) {\n    if (isInteger(value, 'strict')) { return value; }\n    if (isInteger(value)) { return parseInt(value, 10); }\n  }\n  if (inArray('number', types) || (!strictIntegers && inArray('integer', types))) {\n    if (isNumber(value, 'strict')) { return value; }\n    if (isNumber(value)) { return parseFloat(value); }\n  }\n  if (inArray('string', types)) {\n    if (isString(value)) { return value; }\n    // If value is a date, and types includes 'string',\n    // convert the date to a string\n    if (isDate(value)) { return value.toISOString().slice(0, 10); }\n    if (isNumber(value)) { return value.toString(); }\n  }\n  // If value is a date, and types includes 'integer' or 'number',\n  // but not 'string', convert the date to a number\n  if (isDate(value) && (inArray('integer', types) || inArray('number', types))) {\n    return value.getTime();\n  }\n  if (inArray('boolean', types)) {\n    if (isBoolean(value, true)) { return true; }\n    if (isBoolean(value, false)) { return false; }\n  }\n  return null;\n}\n\n/**\n * 'toSchemaType' function\n *\n * Converts an input (probably string) value to the \"best\" JavaScript\n * equivalent available from an allowed list of JSON Schema types, which may\n * contain 'string', 'number', 'integer', 'boolean', and/or 'null'.\n * If necssary, it does progressively agressive type coersion.\n * It will not return null unless null is in the list of allowed types.\n *\n * Number conversion examples:\n * toSchemaType('10', ['number','integer','string']) = 10 // integer\n * toSchemaType('10', ['number','string']) = 10 // number\n * toSchemaType('10', ['string']) = '10' // string\n * toSchemaType('10.5', ['number','integer','string']) = 10.5 // number\n * toSchemaType('10.5', ['integer','string']) = '10.5' // string\n * toSchemaType('10.5', ['integer']) = 10 // integer\n * toSchemaType(10.5, ['null','boolean','string']) = '10.5' // string\n * toSchemaType(10.5, ['null','boolean']) = true // boolean\n *\n * String conversion examples:\n * toSchemaType('1.5x', ['boolean','number','integer','string']) = '1.5x' // string\n * toSchemaType('1.5x', ['boolean','number','integer']) = '1.5' // number\n * toSchemaType('1.5x', ['boolean','integer']) = '1' // integer\n * toSchemaType('1.5x', ['boolean']) = true // boolean\n * toSchemaType('xyz', ['number','integer','boolean','null']) = true // boolean\n * toSchemaType('xyz', ['number','integer','null']) = null // null\n * toSchemaType('xyz', ['number','integer']) = 0 // number\n *\n * Boolean conversion examples:\n * toSchemaType('1', ['integer','number','string','boolean']) = 1 // integer\n * toSchemaType('1', ['number','string','boolean']) = 1 // number\n * toSchemaType('1', ['string','boolean']) = '1' // string\n * toSchemaType('1', ['boolean']) = true // boolean\n * toSchemaType('true', ['number','string','boolean']) = 'true' // string\n * toSchemaType('true', ['boolean']) = true // boolean\n * toSchemaType('true', ['number']) = 0 // number\n * toSchemaType(true, ['number','string','boolean']) = true // boolean\n * toSchemaType(true, ['number','string']) = 'true' // string\n * toSchemaType(true, ['number']) = 1 // number\n *\n * //  { PrimitiveValue } value - value to convert\n * //  { SchemaPrimitiveType | SchemaPrimitiveType[] } types - allowed types to convert to\n * // { PrimitiveValue }\n */\nexport function toSchemaType(value, types) {\n  if (!isArray(<SchemaPrimitiveType>types)) {\n    types = <SchemaPrimitiveType[]>[types];\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('null') && !hasValue(value)) {\n    return null;\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('boolean') && !isBoolean(value, 'strict')) {\n    return value;\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('integer')) {\n    const testValue = toJavaScriptType(value, 'integer');\n    if (testValue !== null) { return +testValue; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('number')) {\n    const testValue = toJavaScriptType(value, 'number');\n    if (testValue !== null) { return +testValue; }\n  }\n  if (\n    (isString(value) || isNumber(value, 'strict')) &&\n    (<SchemaPrimitiveType[]>types).includes('string')\n  ) { // Convert number to string\n    return toJavaScriptType(value, 'string');\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('boolean') && isBoolean(value)) {\n    return toJavaScriptType(value, 'boolean');\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('string')) { // Convert null & boolean to string\n    if (value === null) { return ''; }\n    const testValue = toJavaScriptType(value, 'string');\n    if (testValue !== null) { return testValue; }\n  }\n  if ((\n    (<SchemaPrimitiveType[]>types).includes('number') ||\n    (<SchemaPrimitiveType[]>types).includes('integer'))\n  ) {\n    if (value === true) { return 1; } // Convert boolean & null to number\n    if (value === false || value === null || value === '') { return 0; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('number')) { // Convert mixed string to number\n    const testValue = parseFloat(<string>value);\n    if (!!testValue) { return testValue; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('integer')) { // Convert string or number to integer\n    const testValue = parseInt(<string>value, 10);\n    if (!!testValue) { return testValue; }\n  }\n  if ((<SchemaPrimitiveType[]>types).includes('boolean')) { // Convert anything to boolean\n    return !!value;\n  }\n  if ((\n      (<SchemaPrimitiveType[]>types).includes('number') ||\n      (<SchemaPrimitiveType[]>types).includes('integer')\n    ) && !(<SchemaPrimitiveType[]>types).includes('null')\n  ) {\n    return 0; // If null not allowed, return 0 for non-convertable values\n  }\n}\n\n/**\n * 'isPromise' function\n *\n * //   object\n * // { boolean }\n */\nexport function isPromise(object): object is Promise<any> {\n  return !!object && typeof object.then === 'function';\n}\n\n/**\n * 'isObservable' function\n *\n * //   object\n * // { boolean }\n */\nexport function isObservable(object): object is Observable<any> {\n  return !!object && typeof object.subscribe === 'function';\n}\n\n/**\n * '_toPromise' function\n *\n * //  { object } object\n * // { Promise<any> }\n */\nexport function _toPromise(object): Promise<any> {\n  return isPromise(object) ? object : object.toPromise();\n}\n\n/**\n * 'toObservable' function\n *\n * //  { object } object\n * // { Observable<any> }\n */\nexport function toObservable(object): Observable<any> {\n  const observable = isPromise(object) ? from(object) : object;\n  if (isObservable(observable)) { return observable; }\n  console.error('toObservable error: Expected validator to return Promise or Observable.');\n  return new Observable();\n}\n\n/**\n * 'inArray' function\n *\n * Searches an array for an item, or one of a list of items, and returns true\n * as soon as a match is found, or false if no match.\n *\n * If the optional third parameter allIn is set to TRUE, and the item to find\n * is an array, then the function returns true only if all elements from item\n * are found in the array list, and false if any element is not found. If the\n * item to find is not an array, setting allIn to TRUE has no effect.\n *\n * //  { any|any[] } item - the item to search for\n * //   array - the array to search\n * //  { boolean = false } allIn - if TRUE, all items must be in array\n * // { boolean } - true if item(s) in array, false otherwise\n */\nexport function inArray(item, array, allIn = false) {\n  if (!isDefined(item) || !isArray(array)) { return false; }\n  return isArray(item) ?\n    item[allIn ? 'every' : 'some'](subItem => array.includes(subItem)) :\n    array.includes(item);\n}\n\n/**\n * 'xor' utility function - exclusive or\n *\n * Returns true if exactly one of two values is truthy.\n *\n * //   value1 - first value to check\n * //   value2 - second value to check\n * // { boolean } - true if exactly one input value is truthy, false if not\n */\nexport function xor(value1, value2) {\n  return (!!value1 && !value2) || (!value1 && !!value2);\n}\n","import {\n  hasValue, inArray, isArray, isDefined, isObject, isEmpty, isMap, isSet,\n  isString, PlainObject\n} from './validator.functions';\n\n/**\n * Utility function library:\n *\n * addClasses, copy, forEach, forEachCopy, hasOwn, mergeFilteredObject,\n * uniqueItems, commonItems, fixTitle, toTitleCase\n*/\n\n/**\n * 'addClasses' function\n *\n * Merges two space-delimited lists of CSS classes and removes duplicates.\n *\n * // {string | string[] | Set<string>} oldClasses\n * // {string | string[] | Set<string>} newClasses\n * // {string | string[] | Set<string>} - Combined classes\n */\nexport function addClasses(\n  oldClasses: string | string[] | Set<string>,\n  newClasses: string | string[] | Set<string>\n): string | string[] | Set<string> {\n  const badType = i => !isSet(i) && !isArray(i) && !isString(i);\n  if (badType(newClasses)) { return oldClasses; }\n  if (badType(oldClasses)) { oldClasses = ''; }\n  const toSet = i => isSet(i) ? i : isArray(i) ? new Set(i) : new Set(i.split(' '));\n  const combinedSet: Set<any> = toSet(oldClasses);\n  const newSet: Set<any> = toSet(newClasses);\n  newSet.forEach(c => combinedSet.add(c));\n  if (isSet(oldClasses)) { return combinedSet; }\n  if (isArray(oldClasses)) { return Array.from(combinedSet); }\n  return Array.from(combinedSet).join(' ');\n}\n\n/**\n * 'copy' function\n *\n * Makes a shallow copy of a JavaScript object, array, Map, or Set.\n * If passed a JavaScript primitive value (string, number, boolean, or null),\n * it returns the value.\n *\n * // {Object|Array|string|number|boolean|null} object - The object to copy\n * // {boolean = false} errors - Show errors?\n * // {Object|Array|string|number|boolean|null} - The copied object\n */\nexport function copy(object: any, errors = false): any {\n  if (typeof object !== 'object' || object === null) { return object; }\n  if (isMap(object))    { return new Map(object); }\n  if (isSet(object))    { return new Set(object); }\n  if (isArray(object))  { return [ ...object ];   }\n  if (isObject(object)) { return { ...object };   }\n  if (errors) {\n    console.error('copy error: Object to copy must be a JavaScript object or value.');\n  }\n  return object;\n}\n\n/**\n * 'forEach' function\n *\n * Iterates over all items in the first level of an object or array\n * and calls an iterator funciton on each item.\n *\n * The iterator function is called with four values:\n * 1. The current item's value\n * 2. The current item's key\n * 3. The parent object, which contains the current item\n * 4. The root object\n *\n * Setting the optional third parameter to 'top-down' or 'bottom-up' will cause\n * it to also recursively iterate over items in sub-objects or sub-arrays in the\n * specified direction.\n *\n * // {Object|Array} object - The object or array to iterate over\n * // {function} fn - the iterator funciton to call on each item\n * // {boolean = false} errors - Show errors?\n * // {void}\n */\nexport function forEach(\n  object: any, fn: (v: any, k?: string | number, c?: any, rc?: any) => any,\n  recurse: boolean | string = false, rootObject: any = object, errors = false\n): void {\n  if (isEmpty(object)) { return; }\n  if ((isObject(object) || isArray(object)) && typeof fn === 'function') {\n    for (const key of Object.keys(object)) {\n      const value = object[key];\n      if (recurse === 'bottom-up' && (isObject(value) || isArray(value))) {\n        forEach(value, fn, recurse, rootObject);\n      }\n      fn(value, key, object, rootObject);\n      if (recurse === 'top-down' && (isObject(value) || isArray(value))) {\n        forEach(value, fn, recurse, rootObject);\n      }\n    }\n  }\n  if (errors) {\n    if (typeof fn !== 'function') {\n      console.error('forEach error: Iterator must be a function.');\n      console.error('function', fn);\n    }\n    if (!isObject(object) && !isArray(object)) {\n      console.error('forEach error: Input object must be an object or array.');\n      console.error('object', object);\n    }\n  }\n}\n\n/**\n * 'forEachCopy' function\n *\n * Iterates over all items in the first level of an object or array\n * and calls an iterator function on each item. Returns a new object or array\n * with the same keys or indexes as the original, and values set to the results\n * of the iterator function.\n *\n * Does NOT recursively iterate over items in sub-objects or sub-arrays.\n *\n * // {Object | Array} object - The object or array to iterate over\n * // {function} fn - The iterator funciton to call on each item\n * // {boolean = false} errors - Show errors?\n * // {Object | Array} - The resulting object or array\n */\nexport function forEachCopy(\n  object: any, fn: (v: any, k?: string | number, o?: any, p?: string) => any,\n  errors = false\n): any {\n  if (!hasValue(object)) { return; }\n  if ((isObject(object) || isArray(object)) && typeof object !== 'function') {\n    const newObject: any = isArray(object) ? [] : {};\n    for (const key of Object.keys(object)) {\n      newObject[key] = fn(object[key], key, object);\n    }\n    return newObject;\n  }\n  if (errors) {\n    if (typeof fn !== 'function') {\n      console.error('forEachCopy error: Iterator must be a function.');\n      console.error('function', fn);\n    }\n    if (!isObject(object) && !isArray(object)) {\n      console.error('forEachCopy error: Input object must be an object or array.');\n      console.error('object', object);\n    }\n  }\n}\n\n/**\n * 'hasOwn' utility function\n *\n * Checks whether an object or array has a particular property.\n *\n * // {any} object - the object to check\n * // {string} property - the property to look for\n * // {boolean} - true if object has property, false if not\n */\nexport function hasOwn(object: any, property: string): boolean {\n  if (!object || !['number', 'string', 'symbol'].includes(typeof property) ||\n    (!isObject(object) && !isArray(object) && !isMap(object) && !isSet(object))\n  ) { return false; }\n  if (isMap(object) || isSet(object)) { return object.has(property); }\n  if (typeof property === 'number') {\n    if (isArray(object)) { return object[<number>property]; }\n    property = property + '';\n  }\n  return object.hasOwnProperty(property);\n}\n\n/**\n * 'mergeFilteredObject' utility function\n *\n * Shallowly merges two objects, setting key and values from source object\n * in target object, excluding specified keys.\n *\n * Optionally, it can also use functions to transform the key names and/or\n * the values of the merging object.\n *\n * // {PlainObject} targetObject - Target object to add keys and values to\n * // {PlainObject} sourceObject - Source object to copy keys and values from\n * // {string[]} excludeKeys - Array of keys to exclude\n * // {(string: string) => string = (k) => k} keyFn - Function to apply to keys\n * // {(any: any) => any = (v) => v} valueFn - Function to apply to values\n * // {PlainObject} - Returns targetObject\n */\nexport function mergeFilteredObject(\n  targetObject: PlainObject,\n  sourceObject: PlainObject,\n  excludeKeys = <string[]>[],\n  keyFn = (key: string): string => key,\n  valFn = (val: any): any => val\n): PlainObject {\n  if (!isObject(sourceObject)) { return targetObject; }\n  if (!isObject(targetObject)) { targetObject = {}; }\n  for (const key of Object.keys(sourceObject)) {\n    if (!inArray(key, excludeKeys) && isDefined(sourceObject[key])) {\n      targetObject[keyFn(key)] = valFn(sourceObject[key]);\n    }\n  }\n  return targetObject;\n}\n\n/**\n * 'uniqueItems' function\n *\n * Accepts any number of string value inputs,\n * and returns an array of all input vaues, excluding duplicates.\n *\n * // {...string} ...items -\n * // {string[]} -\n */\nexport function uniqueItems(...items): string[] {\n  const returnItems = [];\n  for (const item of items) {\n    if (!returnItems.includes(item)) { returnItems.push(item); }\n  }\n  return returnItems;\n}\n\n/**\n * 'commonItems' function\n *\n * Accepts any number of strings or arrays of string values,\n * and returns a single array containing only values present in all inputs.\n *\n * // {...string|string[]} ...arrays -\n * // {string[]} -\n */\nexport function commonItems(...arrays): string[] {\n  let returnItems = null;\n  for (let array of arrays) {\n    if (isString(array)) { array = [array]; }\n    returnItems = returnItems === null ? [ ...array ] :\n      returnItems.filter(item => array.includes(item));\n    if (!returnItems.length) { return []; }\n  }\n  return returnItems;\n}\n\n/**\n * 'fixTitle' function\n *\n *\n * // {string} input -\n * // {string} -\n */\nexport function fixTitle(name: string): string {\n  return name && toTitleCase(name.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/_/g, ' '));\n}\n\n/**\n * 'toTitleCase' function\n *\n * Intelligently converts an input string to Title Case.\n *\n * Accepts an optional second parameter with a list of additional\n * words and abbreviations to force into a particular case.\n *\n * This function is built on prior work by John Gruber and David Gouch:\n * http://daringfireball.net/2008/08/title_case_update\n * https://github.com/gouch/to-title-case\n *\n * // {string} input -\n * // {string|string[]} forceWords? -\n * // {string} -\n */\nexport function toTitleCase(input: string, forceWords?: string|string[]): string {\n  if (!isString(input)) { return input; }\n  let forceArray: string[] = ['a', 'an', 'and', 'as', 'at', 'but', 'by', 'en',\n   'for', 'if', 'in', 'nor', 'of', 'on', 'or', 'per', 'the', 'to', 'v', 'v.',\n   'vs', 'vs.', 'via'];\n  if (isString(forceWords)) { forceWords = (<string>forceWords).split('|'); }\n  if (isArray(forceWords)) { forceArray = forceArray.concat(forceWords); }\n  const forceArrayLower: string[] = forceArray.map(w => w.toLowerCase());\n  const noInitialCase: boolean =\n    input === input.toUpperCase() || input === input.toLowerCase();\n  let prevLastChar = '';\n  input = input.trim();\n  return input.replace(/[A-Za-z0-9\\u00C0-\\u00FF]+[^\\s-]*/g, (word, idx) => {\n    if (!noInitialCase && word.slice(1).search(/[A-Z]|\\../) !== -1) {\n      return word;\n    } else {\n      let newWord: string;\n      const forceWord: string =\n        forceArray[forceArrayLower.indexOf(word.toLowerCase())];\n      if (!forceWord) {\n        if (noInitialCase) {\n          if (word.slice(1).search(/\\../) !== -1) {\n            newWord = word.toLowerCase();\n          } else {\n            newWord = word[0].toUpperCase() + word.slice(1).toLowerCase();\n          }\n        } else {\n          newWord = word[0].toUpperCase() + word.slice(1);\n        }\n      } else if (\n        forceWord === forceWord.toLowerCase() && (\n          idx === 0 || idx + word.length === input.length ||\n          prevLastChar === ':' || input[idx - 1].search(/[^\\s-]/) !== -1 ||\n          (input[idx - 1] !== '-' && input[idx + word.length] === '-')\n        )\n      ) {\n        newWord = forceWord[0].toUpperCase() + forceWord.slice(1);\n      } else {\n        newWord = forceWord;\n      }\n      prevLastChar = word.slice(-1);\n      return newWord;\n    }\n  });\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n  isDefined, isEmpty, isObject, isArray, isMap, isNumber, isString\n} from './validator.functions';\nimport { hasOwn, copy } from './utility.functions';\n\n/**\n * 'JsonPointer' class\n *\n * Some utilities for using JSON Pointers with JSON objects\n * https://tools.ietf.org/html/rfc6901\n *\n * get, getCopy, getFirst, set, setCopy, insert, insertCopy, remove, has, dict,\n * forEachDeep, forEachDeepCopy, escape, unescape, parse, compile, toKey,\n * isJsonPointer, isSubPointer, toIndexedPointer, toGenericPointer,\n * toControlPointer, toSchemaPointer, toDataPointer, parseObjectPath\n *\n * Some functions based on manuelstofer's json-pointer utilities\n * https://github.com/manuelstofer/json-pointer\n */\nexport type Pointer = string | string[];\n\n@Injectable()\nexport class JsonPointer {\n\n  /**\n   * 'get' function\n   *\n   * Uses a JSON Pointer to retrieve a value from an object.\n   *\n   * //  { object } object - Object to get value from\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { number = 0 } startSlice - Zero-based index of first Pointer key to use\n   * //  { number } endSlice - Zero-based index of last Pointer key to use\n   * //  { boolean = false } getBoolean - Return only true or false?\n   * //  { boolean = false } errors - Show error if not found?\n   * // { object } - Located value (or true or false if getBoolean = true)\n   */\n  static get(\n    object, pointer, startSlice = 0, endSlice: number = null,\n    getBoolean = false, errors = false\n  ) {\n    if (object === null) { return getBoolean ? false : undefined; }\n    let keyArray: any[] = this.parse(pointer, errors);\n    if (typeof object === 'object' && keyArray !== null) {\n      let subObject = object;\n      if (startSlice >= keyArray.length || endSlice <= -keyArray.length) { return object; }\n      if (startSlice <= -keyArray.length) { startSlice = 0; }\n      if (!isDefined(endSlice) || endSlice >= keyArray.length) { endSlice = keyArray.length; }\n      keyArray = keyArray.slice(startSlice, endSlice);\n      for (let key of keyArray) {\n        if (key === '-' && isArray(subObject) && subObject.length) {\n          key = subObject.length - 1;\n        }\n        if (isMap(subObject) && subObject.has(key)) {\n          subObject = subObject.get(key);\n        } else if (typeof subObject === 'object' && subObject !== null &&\n          hasOwn(subObject, key)\n        ) {\n          subObject = subObject[key];\n        } else {\n          if (errors) {\n            console.error(`get error: \"${key}\" key not found in object.`);\n            console.error(pointer);\n            console.error(object);\n          }\n          return getBoolean ? false : undefined;\n        }\n      }\n      return getBoolean ? true : subObject;\n    }\n    if (errors && keyArray === null) {\n      console.error(`get error: Invalid JSON Pointer: ${pointer}`);\n    }\n    if (errors && typeof object !== 'object') {\n      console.error('get error: Invalid object:');\n      console.error(object);\n    }\n    return getBoolean ? false : undefined;\n  }\n\n  /**\n   * 'getCopy' function\n   *\n   * Uses a JSON Pointer to deeply clone a value from an object.\n   *\n   * //  { object } object - Object to get value from\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { number = 0 } startSlice - Zero-based index of first Pointer key to use\n   * //  { number } endSlice - Zero-based index of last Pointer key to use\n   * //  { boolean = false } getBoolean - Return only true or false?\n   * //  { boolean = false } errors - Show error if not found?\n   * // { object } - Located value (or true or false if getBoolean = true)\n   */\n  static getCopy(\n    object, pointer, startSlice = 0, endSlice: number = null,\n    getBoolean = false, errors = false\n  ) {\n    const objectToCopy =\n      this.get(object, pointer, startSlice, endSlice, getBoolean, errors);\n    return this.forEachDeepCopy(objectToCopy);\n  }\n\n  /**\n   * 'getFirst' function\n   *\n   * Takes an array of JSON Pointers and objects,\n   * checks each object for a value specified by the pointer,\n   * and returns the first value found.\n   *\n   * //  { [object, pointer][] } items - Array of objects and pointers to check\n   * //  { any = null } defaultValue - Value to return if nothing found\n   * //  { boolean = false } getCopy - Return a copy instead?\n   * //  - First value found\n   */\n  static getFirst(items, defaultValue: any = null, getCopy = false) {\n    if (isEmpty(items)) { return; }\n    if (isArray(items)) {\n      for (const item of items) {\n        if (isEmpty(item)) { continue; }\n        if (isArray(item) && item.length >= 2) {\n          if (isEmpty(item[0]) || isEmpty(item[1])) { continue; }\n          const value = getCopy ?\n            this.getCopy(item[0], item[1]) :\n            this.get(item[0], item[1]);\n          if (value) { return value; }\n          continue;\n        }\n        console.error('getFirst error: Input not in correct format.\\n' +\n          'Should be: [ [ object1, pointer1 ], [ object 2, pointer2 ], etc... ]');\n        return;\n      }\n      return defaultValue;\n    }\n    if (isMap(items)) {\n      for (const [object, pointer] of items) {\n        if (object === null || !this.isJsonPointer(pointer)) { continue; }\n        const value = getCopy ?\n          this.getCopy(object, pointer) :\n          this.get(object, pointer);\n        if (value) { return value; }\n      }\n      return defaultValue;\n    }\n    console.error('getFirst error: Input not in correct format.\\n' +\n      'Should be: [ [ object1, pointer1 ], [ object 2, pointer2 ], etc... ]');\n    return defaultValue;\n  }\n\n  /**\n   * 'getFirstCopy' function\n   *\n   * Similar to getFirst, but always returns a copy.\n   *\n   * //  { [object, pointer][] } items - Array of objects and pointers to check\n   * //  { any = null } defaultValue - Value to return if nothing found\n   * //  - Copy of first value found\n   */\n  static getFirstCopy(items, defaultValue: any = null) {\n    const firstCopy = this.getFirst(items, defaultValue, true);\n    return firstCopy;\n  }\n\n  /**\n   * 'set' function\n   *\n   * Uses a JSON Pointer to set a value on an object.\n   * Also creates any missing sub objects or arrays to contain that value.\n   *\n   * If the optional fourth parameter is TRUE and the inner-most container\n   * is an array, the function will insert the value as a new item at the\n   * specified location in the array, rather than overwriting the existing\n   * value (if any) at that location.\n   *\n   * So set([1, 2, 3], '/1', 4) => [1, 4, 3]\n   * and\n   * So set([1, 2, 3], '/1', 4, true) => [1, 4, 2, 3]\n   *\n   * //  { object } object - The object to set value in\n   * //  { Pointer } pointer - The JSON Pointer (string or array)\n   * //   value - The new value to set\n   * //  { boolean } insert - insert value?\n   * // { object } - The original object, modified with the set value\n   */\n  static set(object, pointer, value, insert = false) {\n    const keyArray = this.parse(pointer);\n    if (keyArray !== null && keyArray.length) {\n      let subObject = object;\n      for (let i = 0; i < keyArray.length - 1; ++i) {\n        let key = keyArray[i];\n        if (key === '-' && isArray(subObject)) {\n          key = subObject.length;\n        }\n        if (isMap(subObject) && subObject.has(key)) {\n          subObject = subObject.get(key);\n        } else {\n          if (!hasOwn(subObject, key)) {\n            subObject[key] = (keyArray[i + 1].match(/^(\\d+|-)$/)) ? [] : {};\n          }\n          subObject = subObject[key];\n        }\n      }\n      const lastKey = keyArray[keyArray.length - 1];\n      if (isArray(subObject) && lastKey === '-') {\n        subObject.push(value);\n      } else if (insert && isArray(subObject) && !isNaN(+lastKey)) {\n        subObject.splice(lastKey, 0, value);\n      } else if (isMap(subObject)) {\n        subObject.set(lastKey, value);\n      } else {\n        subObject[lastKey] = value;\n      }\n      return object;\n    }\n    console.error(`set error: Invalid JSON Pointer: ${pointer}`);\n    return object;\n  }\n\n  /**\n   * 'setCopy' function\n   *\n   * Copies an object and uses a JSON Pointer to set a value on the copy.\n   * Also creates any missing sub objects or arrays to contain that value.\n   *\n   * If the optional fourth parameter is TRUE and the inner-most container\n   * is an array, the function will insert the value as a new item at the\n   * specified location in the array, rather than overwriting the existing value.\n   *\n   * //  { object } object - The object to copy and set value in\n   * //  { Pointer } pointer - The JSON Pointer (string or array)\n   * //   value - The value to set\n   * //  { boolean } insert - insert value?\n   * // { object } - The new object with the set value\n   */\n  static setCopy(object, pointer, value, insert = false) {\n    const keyArray = this.parse(pointer);\n    if (keyArray !== null) {\n      const newObject = copy(object);\n      let subObject = newObject;\n      for (let i = 0; i < keyArray.length - 1; ++i) {\n        let key = keyArray[i];\n        if (key === '-' && isArray(subObject)) {\n          key = subObject.length;\n        }\n        if (isMap(subObject) && subObject.has(key)) {\n          subObject.set(key, copy(subObject.get(key)));\n          subObject = subObject.get(key);\n        } else {\n          if (!hasOwn(subObject, key)) {\n            subObject[key] = (keyArray[i + 1].match(/^(\\d+|-)$/)) ? [] : {};\n          }\n          subObject[key] = copy(subObject[key]);\n          subObject = subObject[key];\n        }\n      }\n      const lastKey = keyArray[keyArray.length - 1];\n      if (isArray(subObject) && lastKey === '-') {\n        subObject.push(value);\n      } else if (insert && isArray(subObject) && !isNaN(+lastKey)) {\n        subObject.splice(lastKey, 0, value);\n      } else if (isMap(subObject)) {\n        subObject.set(lastKey, value);\n      } else {\n        subObject[lastKey] = value;\n      }\n      return newObject;\n    }\n    console.error(`setCopy error: Invalid JSON Pointer: ${pointer}`);\n    return object;\n  }\n\n  /**\n   * 'insert' function\n   *\n   * Calls 'set' with insert = TRUE\n   *\n   * //  { object } object - object to insert value in\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //   value - value to insert\n   * // { object }\n   */\n  static insert(object, pointer, value) {\n    const updatedObject = this.set(object, pointer, value, true);\n    return updatedObject;\n  }\n\n  /**\n   * 'insertCopy' function\n   *\n   * Calls 'setCopy' with insert = TRUE\n   *\n   * //  { object } object - object to insert value in\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //   value - value to insert\n   * // { object }\n   */\n  static insertCopy(object, pointer, value) {\n    const updatedObject = this.setCopy(object, pointer, value, true);\n    return updatedObject;\n  }\n\n  /**\n   * 'remove' function\n   *\n   * Uses a JSON Pointer to remove a key and its attribute from an object\n   *\n   * //  { object } object - object to delete attribute from\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * // { object }\n   */\n  static remove(object, pointer) {\n    const keyArray = this.parse(pointer);\n    if (keyArray !== null && keyArray.length) {\n      let lastKey = keyArray.pop();\n      const parentObject = this.get(object, keyArray);\n      if (isArray(parentObject)) {\n        if (lastKey === '-') { lastKey = parentObject.length - 1; }\n        parentObject.splice(lastKey, 1);\n      } else if (isObject(parentObject)) {\n        delete parentObject[lastKey];\n      }\n      return object;\n    }\n    console.error(`remove error: Invalid JSON Pointer: ${pointer}`);\n    return object;\n  }\n\n  /**\n   * 'has' function\n   *\n   * Tests if an object has a value at the location specified by a JSON Pointer\n   *\n   * //  { object } object - object to chek for value\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * // { boolean }\n   */\n  static has(object, pointer) {\n    const hasValue = this.get(object, pointer, 0, null, true);\n    return hasValue;\n  }\n\n  /**\n   * 'dict' function\n   *\n   * Returns a (pointer -> value) dictionary for an object\n   *\n   * //  { object } object - The object to create a dictionary from\n   * // { object } - The resulting dictionary object\n   */\n  static dict(object) {\n    const results: any = {};\n    this.forEachDeep(object, (value, pointer) => {\n      if (typeof value !== 'object') { results[pointer] = value; }\n    });\n    return results;\n  }\n\n  /**\n   * 'forEachDeep' function\n   *\n   * Iterates over own enumerable properties of an object or items in an array\n   * and invokes an iteratee function for each key/value or index/value pair.\n   * By default, iterates over items within objects and arrays after calling\n   * the iteratee function on the containing object or array itself.\n   *\n   * The iteratee is invoked with three arguments: (value, pointer, rootObject),\n   * where pointer is a JSON pointer indicating the location of the current\n   * value within the root object, and rootObject is the root object initially\n   * submitted to th function.\n   *\n   * If a third optional parameter 'bottomUp' is set to TRUE, the iterator\n   * function will be called on sub-objects and arrays after being\n   * called on their contents, rather than before, which is the default.\n   *\n   * This function can also optionally be called directly on a sub-object by\n   * including optional 4th and 5th parameterss to specify the initial\n   * root object and pointer.\n   *\n   * //  { object } object - the initial object or array\n   * //  { (v: any, p?: string, o?: any) => any } function - iteratee function\n   * //  { boolean = false } bottomUp - optional, set to TRUE to reverse direction\n   * //  { object = object } rootObject - optional, root object or array\n   * //  { string = '' } pointer - optional, JSON Pointer to object within rootObject\n   * // { object } - The modified object\n   */\n  static forEachDeep(\n    object, fn: (v: any, p?: string, o?: any) => any = (v) => v,\n    bottomUp = false, pointer = '', rootObject = object\n  ) {\n    if (typeof fn !== 'function') {\n      console.error(`forEachDeep error: Iterator is not a function:`, fn);\n      return;\n    }\n    if (!bottomUp) { fn(object, pointer, rootObject); }\n    if (isObject(object) || isArray(object)) {\n      for (const key of Object.keys(object)) {\n        const newPointer = pointer + '/' + this.escape(key);\n        this.forEachDeep(object[key], fn, bottomUp, newPointer, rootObject);\n      }\n    }\n    if (bottomUp) { fn(object, pointer, rootObject); }\n  }\n\n  /**\n   * 'forEachDeepCopy' function\n   *\n   * Similar to forEachDeep, but returns a copy of the original object, with\n   * the same keys and indexes, but with values replaced with the result of\n   * the iteratee function.\n   *\n   * //  { object } object - the initial object or array\n   * //  { (v: any, k?: string, o?: any, p?: any) => any } function - iteratee function\n   * //  { boolean = false } bottomUp - optional, set to TRUE to reverse direction\n   * //  { object = object } rootObject - optional, root object or array\n   * //  { string = '' } pointer - optional, JSON Pointer to object within rootObject\n   * // { object } - The copied object\n   */\n  static forEachDeepCopy(\n    object, fn: (v: any, p?: string, o?: any) => any = (v) => v,\n    bottomUp = false, pointer = '', rootObject = object\n  ) {\n    if (typeof fn !== 'function') {\n      console.error(`forEachDeepCopy error: Iterator is not a function:`, fn);\n      return null;\n    }\n    if (isObject(object) || isArray(object)) {\n      let newObject = isArray(object) ? [ ...object ] : { ...object };\n      if (!bottomUp) { newObject = fn(newObject, pointer, rootObject); }\n      for (const key of Object.keys(newObject)) {\n        const newPointer = pointer + '/' + this.escape(key);\n        newObject[key] = this.forEachDeepCopy(\n          newObject[key], fn, bottomUp, newPointer, rootObject\n        );\n      }\n      if (bottomUp) { newObject = fn(newObject, pointer, rootObject); }\n      return newObject;\n    } else {\n      return fn(object, pointer, rootObject);\n    }\n  }\n\n  /**\n   * 'escape' function\n   *\n   * Escapes a string reference key\n   *\n   * //  { string } key - string key to escape\n   * // { string } - escaped key\n   */\n  static escape(key) {\n    const escaped = key.toString().replace(/~/g, '~0').replace(/\\//g, '~1');\n    return escaped;\n  }\n\n  /**\n   * 'unescape' function\n   *\n   * Unescapes a string reference key\n   *\n   * //  { string } key - string key to unescape\n   * // { string } - unescaped key\n   */\n  static unescape(key) {\n    const unescaped = key.toString().replace(/~1/g, '/').replace(/~0/g, '~');\n    return unescaped;\n  }\n\n  /**\n   * 'parse' function\n   *\n   * Converts a string JSON Pointer into a array of keys\n   * (if input is already an an array of keys, it is returned unchanged)\n   *\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { string[] } - JSON Pointer array of keys\n   */\n  static parse(pointer, errors = false) {\n    if (!this.isJsonPointer(pointer)) {\n      if (errors) { console.error(`parse error: Invalid JSON Pointer: ${pointer}`); }\n      return null;\n    }\n    if (isArray(pointer)) { return <string[]>pointer; }\n    if (typeof pointer === 'string') {\n      if ((<string>pointer)[0] === '#') { pointer = pointer.slice(1); }\n      if (<string>pointer === '' || <string>pointer === '/') { return []; }\n      return (<string>pointer).slice(1).split('/').map(this.unescape);\n    }\n  }\n\n  /**\n   * 'compile' function\n   *\n   * Converts an array of keys into a JSON Pointer string\n   * (if input is already a string, it is normalized and returned)\n   *\n   * The optional second parameter is a default which will replace any empty keys.\n   *\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { string | number = '' } defaultValue - Default value\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { string } - JSON Pointer string\n   */\n  static compile(pointer, defaultValue = '', errors = false) {\n    if (pointer === '#') { return ''; }\n    if (!this.isJsonPointer(pointer)) {\n      if (errors) { console.error(`compile error: Invalid JSON Pointer: ${pointer}`); }\n      return null;\n    }\n    if (isArray(pointer)) {\n      if ((<string[]>pointer).length === 0) { return ''; }\n      return '/' + (<string[]>pointer).map(\n        key => key === '' ? defaultValue : this.escape(key)\n      ).join('/');\n    }\n    if (typeof pointer === 'string') {\n      if (pointer[0] === '#') { pointer = pointer.slice(1); }\n      return pointer;\n    }\n  }\n\n  /**\n   * 'toKey' function\n   *\n   * Extracts name of the final key from a JSON Pointer.\n   *\n   * //  { Pointer } pointer - JSON Pointer (string or array)\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { string } - the extracted key\n   */\n  static toKey(pointer, errors = false) {\n    const keyArray = this.parse(pointer, errors);\n    if (keyArray === null) { return null; }\n    if (!keyArray.length) { return ''; }\n    return keyArray[keyArray.length - 1];\n  }\n\n  /**\n   * 'isJsonPointer' function\n   *\n   * Checks a string or array value to determine if it is a valid JSON Pointer.\n   * Returns true if a string is empty, or starts with '/' or '#/'.\n   * Returns true if an array contains only string values.\n   *\n   * //   value - value to check\n   * // { boolean } - true if value is a valid JSON Pointer, otherwise false\n   */\n  static isJsonPointer(value) {\n    if (isArray(value)) {\n      return value.every(key => typeof key === 'string');\n    } else if (isString(value)) {\n      if (value === '' || value === '#') { return true; }\n      if (value[0] === '/' || value.slice(0, 2) === '#/') {\n        return !/(~[^01]|~$)/g.test(value);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * 'isSubPointer' function\n   *\n   * Checks whether one JSON Pointer is a subset of another.\n   *\n   * //  { Pointer } shortPointer - potential subset JSON Pointer\n   * //  { Pointer } longPointer - potential superset JSON Pointer\n   * //  { boolean = false } trueIfMatching - return true if pointers match?\n   * //  { boolean = false } errors - Show error if invalid pointer?\n   * // { boolean } - true if shortPointer is a subset of longPointer, false if not\n   */\n  static isSubPointer(\n    shortPointer, longPointer, trueIfMatching = false, errors = false\n  ) {\n    if (!this.isJsonPointer(shortPointer) || !this.isJsonPointer(longPointer)) {\n      if (errors) {\n        let invalid = '';\n        if (!this.isJsonPointer(shortPointer)) { invalid += ` 1: ${shortPointer}`; }\n        if (!this.isJsonPointer(longPointer)) { invalid += ` 2: ${longPointer}`; }\n        console.error(`isSubPointer error: Invalid JSON Pointer ${invalid}`);\n      }\n      return;\n    }\n    shortPointer = this.compile(shortPointer, '', errors);\n    longPointer = this.compile(longPointer, '', errors);\n    return shortPointer === longPointer ? trueIfMatching :\n      `${shortPointer}/` === longPointer.slice(0, shortPointer.length + 1);\n  }\n\n  /**\n   * 'toIndexedPointer' function\n   *\n   * Merges an array of numeric indexes and a generic pointer to create an\n   * indexed pointer for a specific item.\n   *\n   * For example, merging the generic pointer '/foo/-/bar/-/baz' and\n   * the array [4, 2] would result in the indexed pointer '/foo/4/bar/2/baz'\n   *\n   *\n   * //  { Pointer } genericPointer - The generic pointer\n   * //  { number[] } indexArray - The array of numeric indexes\n   * //  { Map<string, number> } arrayMap - An optional array map\n   * // { string } - The merged pointer with indexes\n   */\n  static toIndexedPointer(\n    genericPointer, indexArray, arrayMap: Map<string, number> = null\n  ) {\n    if (this.isJsonPointer(genericPointer) && isArray(indexArray)) {\n      let indexedPointer = this.compile(genericPointer);\n      if (isMap(arrayMap)) {\n        let arrayIndex = 0;\n        return indexedPointer.replace(/\\/\\-(?=\\/|$)/g, (key, stringIndex) =>\n          arrayMap.has((<string>indexedPointer).slice(0, stringIndex)) ?\n            '/' + indexArray[arrayIndex++] : key\n        );\n      } else {\n        for (const pointerIndex of indexArray) {\n          indexedPointer = indexedPointer.replace('/-', '/' + pointerIndex);\n        }\n        return indexedPointer;\n      }\n    }\n    if (!this.isJsonPointer(genericPointer)) {\n      console.error(`toIndexedPointer error: Invalid JSON Pointer: ${genericPointer}`);\n    }\n    if (!isArray(indexArray)) {\n      console.error(`toIndexedPointer error: Invalid indexArray: ${indexArray}`);\n    }\n  }\n\n  /**\n   * 'toGenericPointer' function\n   *\n   * Compares an indexed pointer to an array map and removes list array\n   * indexes (but leaves tuple arrray indexes and all object keys, including\n   * numeric keys) to create a generic pointer.\n   *\n   * For example, using the indexed pointer '/foo/1/bar/2/baz/3' and\n   * the arrayMap [['/foo', 0], ['/foo/-/bar', 3], ['/foo/-/bar/-/baz', 0]]\n   * would result in the generic pointer '/foo/-/bar/2/baz/-'\n   * Using the indexed pointer '/foo/1/bar/4/baz/3' and the same arrayMap\n   * would result in the generic pointer '/foo/-/bar/-/baz/-'\n   * (the bar array has 3 tuple items, so index 2 is retained, but 4 is removed)\n   *\n   * The structure of the arrayMap is: [['path to array', number of tuple items]...]\n   *\n   *\n   * //  { Pointer } indexedPointer - The indexed pointer (array or string)\n   * //  { Map<string, number> } arrayMap - The optional array map (for preserving tuple indexes)\n   * // { string } - The generic pointer with indexes removed\n   */\n  static toGenericPointer(indexedPointer, arrayMap = new Map<string, number>()) {\n    if (this.isJsonPointer(indexedPointer) && isMap(arrayMap)) {\n      const pointerArray = this.parse(indexedPointer);\n      for (let i = 1; i < pointerArray.length; i++) {\n        const subPointer = this.compile(pointerArray.slice(0, i));\n        if (arrayMap.has(subPointer) &&\n          arrayMap.get(subPointer) <= +pointerArray[i]\n        ) {\n          pointerArray[i] = '-';\n        }\n      }\n      return this.compile(pointerArray);\n    }\n    if (!this.isJsonPointer(indexedPointer)) {\n      console.error(`toGenericPointer error: invalid JSON Pointer: ${indexedPointer}`);\n    }\n    if (!isMap(arrayMap)) {\n      console.error(`toGenericPointer error: invalid arrayMap: ${arrayMap}`);\n    }\n  }\n\n  /**\n   * 'toControlPointer' function\n   *\n   * Accepts a JSON Pointer for a data object and returns a JSON Pointer for the\n   * matching control in an Angular FormGroup.\n   *\n   * //  { Pointer } dataPointer - JSON Pointer (string or array) to a data object\n   * //  { FormGroup } formGroup - Angular FormGroup to get value from\n   * //  { boolean = false } controlMustExist - Only return if control exists?\n   * // { Pointer } - JSON Pointer (string) to the formGroup object\n   */\n  static toControlPointer(dataPointer, formGroup, controlMustExist = false) {\n    const dataPointerArray = this.parse(dataPointer);\n    const controlPointerArray: string[] = [];\n    let subGroup = formGroup;\n    if (dataPointerArray !== null) {\n      for (const key of dataPointerArray) {\n        if (hasOwn(subGroup, 'controls')) {\n          controlPointerArray.push('controls');\n          subGroup = subGroup.controls;\n        }\n        if (isArray(subGroup) && (key === '-')) {\n          controlPointerArray.push((subGroup.length - 1).toString());\n          subGroup = subGroup[subGroup.length - 1];\n        } else if (hasOwn(subGroup, key)) {\n          controlPointerArray.push(key);\n          subGroup = subGroup[key];\n        } else if (controlMustExist) {\n          console.error(`toControlPointer error: Unable to find \"${key}\" item in FormGroup.`);\n          console.error(dataPointer);\n          console.error(formGroup);\n          return;\n        } else {\n          controlPointerArray.push(key);\n          subGroup = { controls: {} };\n        }\n      }\n      return this.compile(controlPointerArray);\n    }\n    console.error(`toControlPointer error: Invalid JSON Pointer: ${dataPointer}`);\n  }\n\n  /**\n   * 'toSchemaPointer' function\n   *\n   * Accepts a JSON Pointer to a value inside a data object and a JSON schema\n   * for that object.\n   *\n   * Returns a Pointer to the sub-schema for the value inside the object's schema.\n   *\n   * //  { Pointer } dataPointer - JSON Pointer (string or array) to an object\n   * //   schema - JSON schema for the object\n   * // { Pointer } - JSON Pointer (string) to the object's schema\n   */\n  static toSchemaPointer(dataPointer, schema) {\n    if (this.isJsonPointer(dataPointer) && typeof schema === 'object') {\n      const pointerArray = this.parse(dataPointer);\n      if (!pointerArray.length) { return ''; }\n      const firstKey = pointerArray.shift();\n      if (schema.type === 'object' || schema.properties || schema.additionalProperties) {\n        if ((schema.properties || {})[firstKey]) {\n          return `/properties/${this.escape(firstKey)}` +\n            this.toSchemaPointer(pointerArray, schema.properties[firstKey]);\n        } else  if (schema.additionalProperties) {\n          return '/additionalProperties' +\n            this.toSchemaPointer(pointerArray, schema.additionalProperties);\n        }\n      }\n      if ((schema.type === 'array' || schema.items) &&\n        (isNumber(firstKey) || firstKey === '-' || firstKey === '')\n      ) {\n        const arrayItem = firstKey === '-' || firstKey === '' ? 0 : +firstKey;\n        if (isArray(schema.items)) {\n          if (arrayItem < schema.items.length) {\n            return '/items/' + arrayItem +\n              this.toSchemaPointer(pointerArray, schema.items[arrayItem]);\n          } else if (schema.additionalItems) {\n            return '/additionalItems' +\n              this.toSchemaPointer(pointerArray, schema.additionalItems);\n          }\n        } else if (isObject(schema.items)) {\n          return '/items' + this.toSchemaPointer(pointerArray, schema.items);\n        } else if (isObject(schema.additionalItems)) {\n          return '/additionalItems' +\n            this.toSchemaPointer(pointerArray, schema.additionalItems);\n        }\n      }\n      console.error(`toSchemaPointer error: Data pointer ${dataPointer} ` +\n        `not compatible with schema ${schema}`);\n      return null;\n    }\n    if (!this.isJsonPointer(dataPointer)) {\n      console.error(`toSchemaPointer error: Invalid JSON Pointer: ${dataPointer}`);\n    }\n    if (typeof schema !== 'object') {\n      console.error(`toSchemaPointer error: Invalid JSON Schema: ${schema}`);\n    }\n    return null;\n  }\n\n  /**\n   * 'toDataPointer' function\n   *\n   * Accepts a JSON Pointer to a sub-schema inside a JSON schema and the schema.\n   *\n   * If possible, returns a generic Pointer to the corresponding value inside\n   * the data object described by the JSON schema.\n   *\n   * Returns null if the sub-schema is in an ambiguous location (such as\n   * definitions or additionalProperties) where the corresponding value\n   * location cannot be determined.\n   *\n   * //  { Pointer } schemaPointer - JSON Pointer (string or array) to a JSON schema\n   * //   schema - the JSON schema\n   * //  { boolean = false } errors - Show errors?\n   * // { Pointer } - JSON Pointer (string) to the value in the data object\n   */\n  static toDataPointer(schemaPointer, schema, errors = false) {\n    if (this.isJsonPointer(schemaPointer) && typeof schema === 'object' &&\n      this.has(schema, schemaPointer)\n    ) {\n      const pointerArray = this.parse(schemaPointer);\n      if (!pointerArray.length) { return ''; }\n      const firstKey = pointerArray.shift();\n      if (firstKey === 'properties' ||\n        (firstKey === 'items' && isArray(schema.items))\n      ) {\n        const secondKey = pointerArray.shift();\n        const pointerSuffix = this.toDataPointer(pointerArray, schema[firstKey][secondKey]);\n        return pointerSuffix === null ? null : '/' + secondKey + pointerSuffix;\n      } else if (firstKey === 'additionalItems' ||\n        (firstKey === 'items' && isObject(schema.items))\n      ) {\n        const pointerSuffix = this.toDataPointer(pointerArray, schema[firstKey]);\n        return pointerSuffix === null ? null : '/-' + pointerSuffix;\n      } else if (['allOf', 'anyOf', 'oneOf'].includes(firstKey)) {\n        const secondKey = pointerArray.shift();\n        return this.toDataPointer(pointerArray, schema[firstKey][secondKey]);\n      } else if (firstKey === 'not') {\n        return this.toDataPointer(pointerArray, schema[firstKey]);\n      } else if (['contains', 'definitions', 'dependencies', 'additionalItems',\n        'additionalProperties', 'patternProperties', 'propertyNames'].includes(firstKey)\n      ) {\n        if (errors) { console.error(`toDataPointer error: Ambiguous location`); }\n      }\n      return '';\n    }\n    if (errors) {\n      if (!this.isJsonPointer(schemaPointer)) {\n        console.error(`toDataPointer error: Invalid JSON Pointer: ${schemaPointer}`);\n      }\n      if (typeof schema !== 'object') {\n        console.error(`toDataPointer error: Invalid JSON Schema: ${schema}`);\n      }\n      if (typeof schema !== 'object') {\n        console.error(`toDataPointer error: Pointer ${schemaPointer} invalid for Schema: ${schema}`);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * 'parseObjectPath' function\n   *\n   * Parses a JavaScript object path into an array of keys, which\n   * can then be passed to compile() to convert into a string JSON Pointer.\n   *\n   * Based on mike-marcacci's excellent objectpath parse function:\n   * https://github.com/mike-marcacci/objectpath\n   *\n   * //  { Pointer } path - The object path to parse\n   * // { string[] } - The resulting array of keys\n   */\n  static parseObjectPath(path) {\n    if (isArray(path)) { return <string[]>path; }\n    if (this.isJsonPointer(path)) { return this.parse(path); }\n    if (typeof path === 'string') {\n      let index = 0;\n      const parts: string[] = [];\n      while (index < path.length) {\n        const nextDot = path.indexOf('.', index);\n        const nextOB = path.indexOf('[', index); // next open bracket\n        if (nextDot === -1 && nextOB === -1) { // last item\n          parts.push(path.slice(index));\n          index = path.length;\n        } else if (nextDot !== -1 && (nextDot < nextOB || nextOB === -1)) { // dot notation\n          parts.push(path.slice(index, nextDot));\n          index = nextDot + 1;\n        } else { // bracket notation\n          if (nextOB > index) {\n            parts.push(path.slice(index, nextOB));\n            index = nextOB;\n          }\n          const quote = path.charAt(nextOB + 1);\n          if (quote === '\"' || quote === '\\'') { // enclosing quotes\n            let nextCB = path.indexOf(quote + ']', nextOB); // next close bracket\n            while (nextCB !== -1 && path.charAt(nextCB - 1) === '\\\\') {\n              nextCB = path.indexOf(quote + ']', nextCB + 2);\n            }\n            if (nextCB === -1) { nextCB = path.length; }\n            parts.push(path.slice(index + 2, nextCB)\n              .replace(new RegExp('\\\\' + quote, 'g'), quote));\n            index = nextCB + 2;\n          } else { // no enclosing quotes\n            let nextCB = path.indexOf(']', nextOB); // next close bracket\n            if (nextCB === -1) { nextCB = path.length; }\n            parts.push(path.slice(index + 1, nextCB));\n            index = nextCB + 1;\n          }\n          if (path.charAt(index) === '.') { index++; }\n        }\n      }\n      return parts;\n    }\n    console.error('parseObjectPath error: Input object path must be a string.');\n  }\n}\n","import * as _ from 'lodash';\n\nimport {\n  isArray, isEmpty, isNumber, isObject, isString\n} from './validator.functions';\nimport { hasOwn, uniqueItems, commonItems } from './utility.functions';\nimport { JsonPointer, Pointer } from './jsonpointer.functions';\n\n/**\n * 'mergeSchemas' function\n *\n * Merges multiple JSON schemas into a single schema with combined rules.\n *\n * If able to logically merge properties from all schemas,\n * returns a single schema object containing all merged properties.\n *\n * Example: ({ a: b, max: 1 }, { c: d, max: 2 }) => { a: b, c: d, max: 1 }\n *\n * If unable to logically merge, returns an allOf schema object containing\n * an array of the original schemas;\n *\n * Example: ({ a: b }, { a: d }) => { allOf: [ { a: b }, { a: d } ] }\n *\n * //   schemas - one or more input schemas\n * //  - merged schema\n */\nexport function mergeSchemas(...schemas) {\n  schemas = schemas.filter(schema => !isEmpty(schema));\n  if (schemas.some(schema => !isObject(schema))) { return null; }\n  const combinedSchema: any = {};\n  for (const schema of schemas) {\n    for (const key of Object.keys(schema)) {\n      const combinedValue = combinedSchema[key];\n      const schemaValue = schema[key];\n      if (!hasOwn(combinedSchema, key) || _.isEqual(combinedValue, schemaValue)) {\n        combinedSchema[key] = schemaValue;\n      } else {\n        switch (key) {\n          case 'allOf':\n            // Combine all items from both arrays\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.allOf = mergeSchemas(...combinedValue, ...schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'additionalItems': case 'additionalProperties':\n          case 'contains': case 'propertyNames':\n            // Merge schema objects\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              combinedSchema[key] = mergeSchemas(combinedValue, schemaValue);\n            // additionalProperties == false in any schema overrides all other values\n            } else if (\n              key === 'additionalProperties' &&\n              (combinedValue === false || schemaValue === false)\n            ) {\n              combinedSchema.combinedSchema = false;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'anyOf': case 'oneOf': case 'enum':\n            // Keep only items that appear in both arrays\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema[key] = combinedValue.filter(item1 =>\n                schemaValue.findIndex(item2 => _.isEqual(item1, item2)) > -1\n              );\n              if (!combinedSchema[key].length) { return { allOf: [ ...schemas ] }; }\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'definitions':\n            // Combine keys from both objects\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              for (const subKey of Object.keys(schemaValue)) {\n                if (!hasOwn(combinedObject, subKey) ||\n                  _.isEqual(combinedObject[subKey], schemaValue[subKey])\n                ) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // Don't combine matching keys with different values\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.definitions = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'dependencies':\n            // Combine all keys from both objects\n            // and merge schemas on matching keys,\n            // converting from arrays to objects if necessary\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              for (const subKey of Object.keys(schemaValue)) {\n                if (!hasOwn(combinedObject, subKey) ||\n                  _.isEqual(combinedObject[subKey], schemaValue[subKey])\n                ) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // If both keys are arrays, include all items from both arrays,\n                // excluding duplicates\n                } else if (\n                  isArray(schemaValue[subKey]) && isArray(combinedObject[subKey])\n                ) {\n                  combinedObject[subKey] =\n                    uniqueItems(...combinedObject[subKey], ...schemaValue[subKey]);\n                // If either key is an object, merge the schemas\n                } else if (\n                  (isArray(schemaValue[subKey]) || isObject(schemaValue[subKey])) &&\n                  (isArray(combinedObject[subKey]) || isObject(combinedObject[subKey]))\n                ) {\n                  // If either key is an array, convert it to an object first\n                  const required = isArray(combinedSchema.required) ?\n                    combinedSchema.required : [];\n                  const combinedDependency = isArray(combinedObject[subKey]) ?\n                    { required: uniqueItems(...required, combinedObject[subKey]) } :\n                    combinedObject[subKey];\n                  const schemaDependency = isArray(schemaValue[subKey]) ?\n                    { required: uniqueItems(...required, schemaValue[subKey]) } :\n                    schemaValue[subKey];\n                  combinedObject[subKey] =\n                    mergeSchemas(combinedDependency, schemaDependency);\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.dependencies = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'items':\n            // If arrays, keep only items that appear in both arrays\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.items = combinedValue.filter(item1 =>\n                schemaValue.findIndex(item2 => _.isEqual(item1, item2)) > -1\n              );\n              if (!combinedSchema.items.length) { return { allOf: [ ...schemas ] }; }\n            // If both keys are objects, merge them\n            } else if (isObject(combinedValue) && isObject(schemaValue)) {\n              combinedSchema.items = mergeSchemas(combinedValue, schemaValue);\n            // If object + array, combine object with each array item\n            } else if (isArray(combinedValue) && isObject(schemaValue)) {\n              combinedSchema.items =\n                combinedValue.map(item => mergeSchemas(item, schemaValue));\n            } else if (isObject(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.items =\n                schemaValue.map(item => mergeSchemas(item, combinedValue));\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'multipleOf':\n            // TODO: Adjust to correctly handle decimal values\n            // If numbers, set to least common multiple\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\n              const gcd = (x, y) => !y ? x : gcd(y, x % y);\n              const lcm = (x, y) => (x * y) / gcd(x, y);\n              combinedSchema.multipleOf = lcm(combinedValue, schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'maximum': case 'exclusiveMaximum': case 'maxLength':\n          case 'maxItems': case 'maxProperties':\n            // If numbers, set to lowest value\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\n              combinedSchema[key] = Math.min(combinedValue, schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'minimum': case 'exclusiveMinimum': case 'minLength':\n          case 'minItems': case 'minProperties':\n            // If numbers, set to highest value\n            if (isNumber(combinedValue) && isNumber(schemaValue)) {\n              combinedSchema[key] = Math.max(combinedValue, schemaValue);\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'not':\n            // Combine not values into anyOf array\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const notAnyOf = [combinedValue, schemaValue]\n                .reduce((notAnyOfArray, notSchema) =>\n                  isArray(notSchema.anyOf) &&\n                  Object.keys(notSchema).length === 1 ?\n                    [ ...notAnyOfArray, ...notSchema.anyOf ] :\n                    [ ...notAnyOfArray, notSchema ]\n                , []);\n              // TODO: Remove duplicate items from array\n              combinedSchema.not = { anyOf: notAnyOf };\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'patternProperties':\n            // Combine all keys from both objects\n            // and merge schemas on matching keys\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              for (const subKey of Object.keys(schemaValue)) {\n                if (!hasOwn(combinedObject, subKey) ||\n                  _.isEqual(combinedObject[subKey], schemaValue[subKey])\n                ) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // If both keys are objects, merge them\n                } else if (\n                  isObject(schemaValue[subKey]) && isObject(combinedObject[subKey])\n                ) {\n                  combinedObject[subKey] =\n                    mergeSchemas(combinedObject[subKey], schemaValue[subKey]);\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.patternProperties = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'properties':\n            // Combine all keys from both objects\n            // unless additionalProperties === false\n            // and merge schemas on matching keys\n            if (isObject(combinedValue) && isObject(schemaValue)) {\n              const combinedObject = { ...combinedValue };\n              // If new schema has additionalProperties,\n              // merge or remove non-matching property keys in combined schema\n              if (hasOwn(schemaValue, 'additionalProperties')) {\n                Object.keys(combinedValue)\n                  .filter(combinedKey => !Object.keys(schemaValue).includes(combinedKey))\n                  .forEach(nonMatchingKey => {\n                    if (schemaValue.additionalProperties === false) {\n                      delete combinedObject[nonMatchingKey];\n                    } else if (isObject(schemaValue.additionalProperties)) {\n                      combinedObject[nonMatchingKey] = mergeSchemas(\n                        combinedObject[nonMatchingKey],\n                        schemaValue.additionalProperties\n                      );\n                    }\n                  });\n              }\n              for (const subKey of Object.keys(schemaValue)) {\n                if (_.isEqual(combinedObject[subKey], schemaValue[subKey]) || (\n                  !hasOwn(combinedObject, subKey) &&\n                  !hasOwn(combinedObject, 'additionalProperties')\n                )) {\n                  combinedObject[subKey] = schemaValue[subKey];\n                // If combined schema has additionalProperties,\n                // merge or ignore non-matching property keys in new schema\n                } else if (\n                  !hasOwn(combinedObject, subKey) &&\n                  hasOwn(combinedObject, 'additionalProperties')\n                ) {\n                  // If combinedObject.additionalProperties === false,\n                  // do nothing (don't set key)\n                  // If additionalProperties is object, merge with new key\n                  if (isObject(combinedObject.additionalProperties)) {\n                    combinedObject[subKey] = mergeSchemas(\n                      combinedObject.additionalProperties, schemaValue[subKey]\n                    );\n                  }\n                // If both keys are objects, merge them\n                } else if (\n                  isObject(schemaValue[subKey]) &&\n                  isObject(combinedObject[subKey])\n                ) {\n                  combinedObject[subKey] =\n                    mergeSchemas(combinedObject[subKey], schemaValue[subKey]);\n                } else {\n                  return { allOf: [ ...schemas ] };\n                }\n              }\n              combinedSchema.properties = combinedObject;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'required':\n            // If arrays, include all items from both arrays, excluding duplicates\n            if (isArray(combinedValue) && isArray(schemaValue)) {\n              combinedSchema.required = uniqueItems(...combinedValue, ...schemaValue);\n            // If booleans, aet true if either true\n            } else if (\n              typeof schemaValue === 'boolean' &&\n              typeof combinedValue === 'boolean'\n            ) {\n              combinedSchema.required = !!combinedValue || !!schemaValue;\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case '$schema': case '$id': case 'id':\n            // Don't combine these keys\n          break;\n          case 'title': case 'description':\n            // Return the last value, overwriting any previous one\n            // These properties are not used for validation, so conflicts don't matter\n            combinedSchema[key] = schemaValue;\n          break;\n          case 'type':\n            if (\n              (isArray(schemaValue) || isString(schemaValue)) &&\n              (isArray(combinedValue) || isString(combinedValue))\n            ) {\n              const combinedTypes = commonItems(combinedValue, schemaValue);\n              if (!combinedTypes.length) { return { allOf: [ ...schemas ] }; }\n              combinedSchema.type = combinedTypes.length > 1 ? combinedTypes : combinedTypes[0];\n            } else {\n              return { allOf: [ ...schemas ] };\n            }\n          break;\n          case 'uniqueItems':\n            // Set true if either true\n            combinedSchema.uniqueItems = !!combinedValue || !!schemaValue;\n          break;\n          default:\n            return { allOf: [ ...schemas ] };\n        }\n      }\n    }\n  }\n  return combinedSchema;\n}\n","import * as _ from 'lodash';\n\nimport {\n  getType, hasValue, inArray, isArray, isEmpty, isFunction, isNumber, isObject,\n  isString\n} from './validator.functions';\nimport {\n  forEach, hasOwn, mergeFilteredObject, uniqueItems, commonItems\n} from './utility.functions';\nimport { mergeSchemas } from './merge-schemas.function';\nimport { JsonPointer, Pointer } from './jsonpointer.functions';\nimport { JsonValidators } from './json.validators';\n\n/**\n * JSON Schema function library:\n *\n * buildSchemaFromLayout:   TODO: Write this function\n *\n * buildSchemaFromData:\n *\n * getFromSchema:\n *\n * removeRecursiveReferences:\n *\n * getInputType:\n *\n * checkInlineType:\n *\n * isInputRequired:\n *\n * updateInputOptions:\n *\n * getTitleMapFromOneOf:\n *\n * getControlValidators:\n *\n * resolveSchemaReferences:\n *\n * getSubSchema:\n *\n * combineAllOf:\n *\n * fixRequiredArrayProperties:\n */\n\n/**\n * 'buildSchemaFromLayout' function\n *\n * TODO: Build a JSON Schema from a JSON Form layout\n *\n * //   layout - The JSON Form layout\n * //  - The new JSON Schema\n */\nexport function buildSchemaFromLayout(layout) {\n  return;\n  // let newSchema: any = { };\n  // const walkLayout = (layoutItems: any[], callback: Function): any[] => {\n  //   let returnArray: any[] = [];\n  //   for (let layoutItem of layoutItems) {\n  //     const returnItem: any = callback(layoutItem);\n  //     if (returnItem) { returnArray = returnArray.concat(callback(layoutItem)); }\n  //     if (layoutItem.items) {\n  //       returnArray = returnArray.concat(walkLayout(layoutItem.items, callback));\n  //     }\n  //   }\n  //   return returnArray;\n  // };\n  // walkLayout(layout, layoutItem => {\n  //   let itemKey: string;\n  //   if (typeof layoutItem === 'string') {\n  //     itemKey = layoutItem;\n  //   } else if (layoutItem.key) {\n  //     itemKey = layoutItem.key;\n  //   }\n  //   if (!itemKey) { return; }\n  //   //\n  // });\n}\n\n/**\n * 'buildSchemaFromData' function\n *\n * Build a JSON Schema from a data object\n *\n * //   data - The data object\n * //  { boolean = false } requireAllFields - Require all fields?\n * //  { boolean = true } isRoot - is root\n * //  - The new JSON Schema\n */\nexport function buildSchemaFromData(\n  data, requireAllFields = false, isRoot = true\n) {\n  const newSchema: any = {};\n  const getFieldType = (value: any): string => {\n    const fieldType = getType(value, 'strict');\n    return { integer: 'number', null: 'string' }[fieldType] || fieldType;\n  };\n  const buildSubSchema = (value) =>\n    buildSchemaFromData(value, requireAllFields, false);\n  if (isRoot) { newSchema.$schema = 'http://json-schema.org/draft-06/schema#'; }\n  newSchema.type = getFieldType(data);\n  if (newSchema.type === 'object') {\n    newSchema.properties = {};\n    if (requireAllFields) { newSchema.required = []; }\n    for (const key of Object.keys(data)) {\n      newSchema.properties[key] = buildSubSchema(data[key]);\n      if (requireAllFields) { newSchema.required.push(key); }\n    }\n  } else if (newSchema.type === 'array') {\n    newSchema.items = data.map(buildSubSchema);\n    // If all items are the same type, use an object for items instead of an array\n    if ((new Set(data.map(getFieldType))).size === 1) {\n      newSchema.items = newSchema.items.reduce((a, b) => ({ ...a, ...b }), {});\n    }\n    if (requireAllFields) { newSchema.minItems = 1; }\n  }\n  return newSchema;\n}\n\n/**\n * 'getFromSchema' function\n *\n * Uses a JSON Pointer for a value within a data object to retrieve\n * the schema for that value within schema for the data object.\n *\n * The optional third parameter can also be set to return something else:\n * 'schema' (default): the schema for the value indicated by the data pointer\n * 'parentSchema': the schema for the value's parent object or array\n * 'schemaPointer': a pointer to the value's schema within the object's schema\n * 'parentSchemaPointer': a pointer to the schema for the value's parent object or array\n *\n * //   schema - The schema to get the sub-schema from\n * //  { Pointer } dataPointer - JSON Pointer (string or array)\n * //  { string = 'schema' } returnType - what to return?\n * //  - The located sub-schema\n */\nexport function getFromSchema(schema, dataPointer, returnType = 'schema') {\n  const dataPointerArray: any[] = JsonPointer.parse(dataPointer);\n  if (dataPointerArray === null) {\n    console.error(`getFromSchema error: Invalid JSON Pointer: ${dataPointer}`);\n    return null;\n  }\n  let subSchema = schema;\n  const schemaPointer = [];\n  const length = dataPointerArray.length;\n  if (returnType.slice(0, 6) === 'parent') { dataPointerArray.length--; }\n  for (let i = 0; i < length; ++i) {\n    const parentSchema = subSchema;\n    const key = dataPointerArray[i];\n    let subSchemaFound = false;\n    if (typeof subSchema !== 'object') {\n      console.error(`getFromSchema error: Unable to find \"${key}\" key in schema.`);\n      console.error(schema);\n      console.error(dataPointer);\n      return null;\n    }\n    if (subSchema.type === 'array' && (!isNaN(key) || key === '-')) {\n      if (hasOwn(subSchema, 'items')) {\n        if (isObject(subSchema.items)) {\n          subSchemaFound = true;\n          subSchema = subSchema.items;\n          schemaPointer.push('items');\n        } else if (isArray(subSchema.items)) {\n          if (!isNaN(key) && subSchema.items.length >= +key) {\n            subSchemaFound = true;\n            subSchema = subSchema.items[+key];\n            schemaPointer.push('items', key);\n          }\n        }\n      }\n      if (!subSchemaFound && isObject(subSchema.additionalItems)) {\n        subSchemaFound = true;\n        subSchema = subSchema.additionalItems;\n        schemaPointer.push('additionalItems');\n      } else if (subSchema.additionalItems !== false) {\n        subSchemaFound = true;\n        subSchema = { };\n        schemaPointer.push('additionalItems');\n      }\n    } else if (subSchema.type === 'object') {\n      if (isObject(subSchema.properties) && hasOwn(subSchema.properties, key)) {\n        subSchemaFound = true;\n        subSchema = subSchema.properties[key];\n        schemaPointer.push('properties', key);\n      } else if (isObject(subSchema.additionalProperties)) {\n        subSchemaFound = true;\n        subSchema = subSchema.additionalProperties;\n        schemaPointer.push('additionalProperties');\n      } else if (subSchema.additionalProperties !== false) {\n        subSchemaFound = true;\n        subSchema = { };\n        schemaPointer.push('additionalProperties');\n      }\n    }\n    if (!subSchemaFound) {\n      console.error(`getFromSchema error: Unable to find \"${key}\" item in schema.`);\n      console.error(schema);\n      console.error(dataPointer);\n      return;\n    }\n  }\n  return returnType.slice(-7) === 'Pointer' ? schemaPointer : subSchema;\n}\n\n/**\n * 'removeRecursiveReferences' function\n *\n * Checks a JSON Pointer against a map of recursive references and returns\n * a JSON Pointer to the shallowest equivalent location in the same object.\n *\n * Using this functions enables an object to be constructed with unlimited\n * recursion, while maintaing a fixed set of metadata, such as field data types.\n * The object can grow as large as it wants, and deeply recursed nodes can\n * just refer to the metadata for their shallow equivalents, instead of having\n * to add additional redundant metadata for each recursively added node.\n *\n * Example:\n *\n * pointer:         '/stuff/and/more/and/more/and/more/and/more/stuff'\n * recursiveRefMap: [['/stuff/and/more/and/more', '/stuff/and/more/']]\n * returned:        '/stuff/and/more/stuff'\n *\n * //  { Pointer } pointer -\n * //  { Map<string, string> } recursiveRefMap -\n * //  { Map<string, number> = new Map() } arrayMap - optional\n * // { string } -\n */\nexport function removeRecursiveReferences(\n  pointer, recursiveRefMap, arrayMap = new Map()\n) {\n  if (!pointer) { return ''; }\n  let genericPointer =\n    JsonPointer.toGenericPointer(JsonPointer.compile(pointer), arrayMap);\n  if (genericPointer.indexOf('/') === -1) { return genericPointer; }\n  let possibleReferences = true;\n  while (possibleReferences) {\n    possibleReferences = false;\n    recursiveRefMap.forEach((toPointer, fromPointer) => {\n      if (JsonPointer.isSubPointer(toPointer, fromPointer)) {\n        while (JsonPointer.isSubPointer(fromPointer, genericPointer, true)) {\n          genericPointer = JsonPointer.toGenericPointer(\n            toPointer + genericPointer.slice(fromPointer.length), arrayMap\n          );\n          possibleReferences = true;\n        }\n      }\n    });\n  }\n  return genericPointer;\n}\n\n/**\n * 'getInputType' function\n *\n * //   schema\n * //  { any = null } layoutNode\n * // { string }\n */\nexport function getInputType(schema, layoutNode: any = null) {\n  // x-schema-form = Angular Schema Form compatibility\n  // widget & component = React Jsonschema Form compatibility\n  const controlType = JsonPointer.getFirst([\n    [schema, '/x-schema-form/type'],\n    [schema, '/x-schema-form/widget/component'],\n    [schema, '/x-schema-form/widget'],\n    [schema, '/widget/component'],\n    [schema, '/widget']\n  ]);\n  if (isString(controlType)) { return checkInlineType(controlType, schema, layoutNode); }\n  let schemaType = schema.type;\n  if (schemaType) {\n    if (isArray(schemaType)) { // If multiple types listed, use most inclusive type\n      schemaType =\n        inArray('object', schemaType) && hasOwn(schema, 'properties') ? 'object' :\n        inArray('array', schemaType) && hasOwn(schema, 'items') ? 'array' :\n        inArray('array', schemaType) && hasOwn(schema, 'additionalItems') ? 'array' :\n        inArray('string', schemaType) ? 'string' :\n        inArray('number', schemaType) ? 'number' :\n        inArray('integer', schemaType) ? 'integer' :\n        inArray('boolean', schemaType) ? 'boolean' : 'unknown';\n    }\n    if (schemaType === 'boolean') { return 'checkbox'; }\n    if (schemaType === 'object') {\n      if (hasOwn(schema, 'properties') || hasOwn(schema, 'additionalProperties')) {\n        return 'section';\n      }\n      // TODO: Figure out how to handle additionalProperties\n      if (hasOwn(schema, '$ref')) { return '$ref'; }\n    }\n    if (schemaType === 'array') {\n      const itemsObject = JsonPointer.getFirst([\n        [schema, '/items'],\n        [schema, '/additionalItems']\n      ]) || {};\n      return hasOwn(itemsObject, 'enum') && schema.maxItems !== 1 ?\n        checkInlineType('checkboxes', schema, layoutNode) : 'array';\n    }\n    if (schemaType === 'null') { return 'none'; }\n    if (JsonPointer.has(layoutNode, '/options/titleMap') ||\n      hasOwn(schema, 'enum') || getTitleMapFromOneOf(schema, null, true)\n    ) { return 'select'; }\n    if (schemaType === 'number' || schemaType === 'integer') {\n      return (schemaType === 'integer' || hasOwn(schema, 'multipleOf')) &&\n        hasOwn(schema, 'maximum') && hasOwn(schema, 'minimum') ? 'range' : schemaType;\n    }\n    if (schemaType === 'string') {\n      return {\n        'color': 'color',\n        'date': 'date',\n        'date-time': 'datetime-local',\n        'email': 'email',\n        'uri': 'url',\n      }[schema.format] || 'text';\n    }\n  }\n  if (hasOwn(schema, '$ref')) { return '$ref'; }\n  if (isArray(schema.oneOf) || isArray(schema.anyOf)) { return 'one-of'; }\n  console.error(`getInputType error: Unable to determine input type for ${schemaType}`);\n  console.error('schema', schema);\n  if (layoutNode) { console.error('layoutNode', layoutNode); }\n  return 'none';\n}\n\n/**\n * 'checkInlineType' function\n *\n * Checks layout and schema nodes for 'inline: true', and converts\n * 'radios' or 'checkboxes' to 'radios-inline' or 'checkboxes-inline'\n *\n * //  { string } controlType -\n * //   schema -\n * //  { any = null } layoutNode -\n * // { string }\n */\nexport function checkInlineType(controlType, schema, layoutNode: any = null) {\n  if (!isString(controlType) || (\n    controlType.slice(0, 8) !== 'checkbox' && controlType.slice(0, 5) !== 'radio'\n  )) {\n    return controlType;\n  }\n  if (\n    JsonPointer.getFirst([\n      [layoutNode, '/inline'],\n      [layoutNode, '/options/inline'],\n      [schema, '/inline'],\n      [schema, '/x-schema-form/inline'],\n      [schema, '/x-schema-form/options/inline'],\n      [schema, '/x-schema-form/widget/inline'],\n      [schema, '/x-schema-form/widget/component/inline'],\n      [schema, '/x-schema-form/widget/component/options/inline'],\n      [schema, '/widget/inline'],\n      [schema, '/widget/component/inline'],\n      [schema, '/widget/component/options/inline'],\n    ]) === true\n  ) {\n    return controlType.slice(0, 5) === 'radio' ?\n      'radios-inline' : 'checkboxes-inline';\n  } else {\n    return controlType;\n  }\n}\n\n/**\n * 'isInputRequired' function\n *\n * Checks a JSON Schema to see if an item is required\n *\n * //   schema - the schema to check\n * //  { string } schemaPointer - the pointer to the item to check\n * // { boolean } - true if the item is required, false if not\n */\nexport function isInputRequired(schema, schemaPointer) {\n  if (!isObject(schema)) {\n    console.error('isInputRequired error: Input schema must be an object.');\n    return false;\n  }\n  const listPointerArray = JsonPointer.parse(schemaPointer);\n  if (isArray(listPointerArray)) {\n    if (!listPointerArray.length) { return schema.required === true; }\n    const keyName = listPointerArray.pop();\n    const nextToLastKey = listPointerArray[listPointerArray.length - 1];\n    if (['properties', 'additionalProperties', 'patternProperties', 'items', 'additionalItems']\n      .includes(nextToLastKey)\n    ) {\n      listPointerArray.pop();\n    }\n    const parentSchema = JsonPointer.get(schema, listPointerArray) || {};\n    if (isArray(parentSchema.required)) {\n      return parentSchema.required.includes(keyName);\n    }\n    if (parentSchema.type === 'array') {\n      return hasOwn(parentSchema, 'minItems') &&\n        isNumber(keyName) &&\n        +parentSchema.minItems > +keyName;\n    }\n  }\n  return false;\n}\n\n/**\n * 'updateInputOptions' function\n *\n * //   layoutNode\n * //   schema\n * //   jsf\n * // { void }\n */\nexport function updateInputOptions(layoutNode, schema, jsf) {\n  if (!isObject(layoutNode) || !isObject(layoutNode.options)) { return; }\n\n  // Set all option values in layoutNode.options\n  const newOptions: any = { };\n  const fixUiKeys = key => key.slice(0, 3).toLowerCase() === 'ui:' ? key.slice(3) : key;\n  mergeFilteredObject(newOptions, jsf.formOptions.defautWidgetOptions, [], fixUiKeys);\n  [ [ JsonPointer.get(schema, '/ui:widget/options'), [] ],\n    [ JsonPointer.get(schema, '/ui:widget'), [] ],\n    [ schema, [\n      'additionalProperties', 'additionalItems', 'properties', 'items',\n      'required', 'type', 'x-schema-form', '$ref'\n    ] ],\n    [ JsonPointer.get(schema, '/x-schema-form/options'), [] ],\n    [ JsonPointer.get(schema, '/x-schema-form'), ['items', 'options'] ],\n    [ layoutNode, [\n      '_id', '$ref', 'arrayItem', 'arrayItemType', 'dataPointer', 'dataType',\n      'items', 'key', 'name', 'options', 'recursiveReference', 'type', 'widget'\n    ] ],\n    [ layoutNode.options, [] ],\n  ].forEach(([ object, excludeKeys ]) =>\n    mergeFilteredObject(newOptions, object, excludeKeys, fixUiKeys)\n  );\n  if (!hasOwn(newOptions, 'titleMap')) {\n    let newTitleMap: any = null;\n    newTitleMap = getTitleMapFromOneOf(schema, newOptions.flatList);\n    if (newTitleMap) { newOptions.titleMap = newTitleMap; }\n    if (!hasOwn(newOptions, 'titleMap') && !hasOwn(newOptions, 'enum') && hasOwn(schema, 'items')) {\n      if (JsonPointer.has(schema, '/items/titleMap')) {\n        newOptions.titleMap = schema.items.titleMap;\n      } else if (JsonPointer.has(schema, '/items/enum')) {\n        newOptions.enum = schema.items.enum;\n        if (!hasOwn(newOptions, 'enumNames') && JsonPointer.has(schema, '/items/enumNames')) {\n          newOptions.enumNames = schema.items.enumNames;\n        }\n      } else if (JsonPointer.has(schema, '/items/oneOf')) {\n        newTitleMap = getTitleMapFromOneOf(schema.items, newOptions.flatList);\n        if (newTitleMap) { newOptions.titleMap = newTitleMap; }\n      }\n    }\n  }\n\n  // If schema type is integer, enforce by setting multipleOf = 1\n  if (schema.type === 'integer' && !hasValue(newOptions.multipleOf)) {\n    newOptions.multipleOf = 1;\n  }\n\n  // Copy any typeahead word lists to options.typeahead.source\n  if (JsonPointer.has(newOptions, '/autocomplete/source')) {\n    newOptions.typeahead = newOptions.autocomplete;\n  } else if (JsonPointer.has(newOptions, '/tagsinput/source')) {\n    newOptions.typeahead = newOptions.tagsinput;\n  } else if (JsonPointer.has(newOptions, '/tagsinput/typeahead/source')) {\n    newOptions.typeahead = newOptions.tagsinput.typeahead;\n  }\n\n  layoutNode.options = newOptions;\n}\n\n/**\n * 'getTitleMapFromOneOf' function\n *\n * //  { schema } schema\n * //  { boolean = null } flatList\n * //  { boolean = false } validateOnly\n * // { validators }\n */\nexport function getTitleMapFromOneOf(\n  schema: any = {}, flatList: boolean = null, validateOnly = false\n) {\n  let titleMap = null;\n  const oneOf = schema.oneOf || schema.anyOf || null;\n  if (isArray(oneOf) && oneOf.every(item => item.title)) {\n    if (oneOf.every(item => isArray(item.enum) && item.enum.length === 1)) {\n      if (validateOnly) { return true; }\n      titleMap = oneOf.map(item => ({ name: item.title, value: item.enum[0] }));\n    } else if (oneOf.every(item => item.const)) {\n      if (validateOnly) { return true; }\n      titleMap = oneOf.map(item => ({ name: item.title, value: item.const }));\n    }\n\n    // if flatList !== false and some items have colons, make grouped map\n    if (flatList !== false && (titleMap || [])\n      .filter(title => ((title || {}).name || '').indexOf(': ')).length > 1\n    ) {\n\n      // Split name on first colon to create grouped map (name -> group: name)\n      const newTitleMap = titleMap.map(title => {\n        const [group, name] = title.name.split(/: (.+)/);\n        return group && name ? { ...title, group, name } : title;\n      });\n\n      // If flatList === true or at least one group has multiple items, use grouped map\n      if (flatList === true || newTitleMap.some((title, index) => index &&\n        hasOwn(title, 'group') && title.group === newTitleMap[index - 1].group\n      )) {\n        titleMap = newTitleMap;\n      }\n    }\n  }\n  return validateOnly ? false : titleMap;\n}\n\n/**\n * 'getControlValidators' function\n *\n * //  schema\n * // { validators }\n */\nexport function getControlValidators(schema) {\n  if (!isObject(schema)) { return null; }\n  const validators: any = { };\n  if (hasOwn(schema, 'type')) {\n    switch (schema.type) {\n      case 'string':\n        forEach(['pattern', 'format', 'minLength', 'maxLength'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n      case 'number': case 'integer':\n        forEach(['Minimum', 'Maximum'], (ucLimit) => {\n          const eLimit = 'exclusive' + ucLimit;\n          const limit = ucLimit.toLowerCase();\n          if (hasOwn(schema, limit)) {\n            const exclusive = hasOwn(schema, eLimit) && schema[eLimit] === true;\n            validators[limit] = [schema[limit], exclusive];\n          }\n        });\n        forEach(['multipleOf', 'type'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n      case 'object':\n        forEach(['minProperties', 'maxProperties', 'dependencies'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n      case 'array':\n        forEach(['minItems', 'maxItems', 'uniqueItems'], (prop) => {\n          if (hasOwn(schema, prop)) { validators[prop] = [schema[prop]]; }\n        });\n      break;\n    }\n  }\n  if (hasOwn(schema, 'enum')) { validators.enum = [schema.enum]; }\n  return validators;\n}\n\n/**\n * 'resolveSchemaReferences' function\n *\n * Find all $ref links in schema and save links and referenced schemas in\n * schemaRefLibrary, schemaRecursiveRefMap, and dataRecursiveRefMap\n *\n * //  schema\n * //  schemaRefLibrary\n * // { Map<string, string> } schemaRecursiveRefMap\n * // { Map<string, string> } dataRecursiveRefMap\n * // { Map<string, number> } arrayMap\n * //\n */\nexport function resolveSchemaReferences(\n  schema, schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, arrayMap\n) {\n  if (!isObject(schema)) {\n    console.error('resolveSchemaReferences error: schema must be an object.');\n    return;\n  }\n  const refLinks = new Set<string>();\n  const refMapSet = new Set<string>();\n  const refMap = new Map<string, string>();\n  const recursiveRefMap = new Map<string, string>();\n  const refLibrary: any = {};\n\n  // Search schema for all $ref links, and build full refLibrary\n  JsonPointer.forEachDeep(schema, (subSchema, subSchemaPointer) => {\n    if (hasOwn(subSchema, '$ref') && isString(subSchema['$ref'])) {\n      const refPointer = JsonPointer.compile(subSchema['$ref']);\n      refLinks.add(refPointer);\n      refMapSet.add(subSchemaPointer + '~~' + refPointer);\n      refMap.set(subSchemaPointer, refPointer);\n    }\n  });\n  refLinks.forEach(ref => refLibrary[ref] = getSubSchema(schema, ref));\n\n  // Follow all ref links and save in refMapSet,\n  // to find any multi-link recursive refernces\n  let checkRefLinks = true;\n  while (checkRefLinks) {\n    checkRefLinks = false;\n    Array.from(refMap).forEach(([fromRef1, toRef1]) => Array.from(refMap)\n      .filter(([fromRef2, toRef2]) =>\n        JsonPointer.isSubPointer(toRef1, fromRef2, true) &&\n        !JsonPointer.isSubPointer(toRef2, toRef1, true) &&\n        !refMapSet.has(fromRef1 + fromRef2.slice(toRef1.length) + '~~' + toRef2)\n      )\n      .forEach(([fromRef2, toRef2]) => {\n        refMapSet.add(fromRef1 + fromRef2.slice(toRef1.length) + '~~' + toRef2);\n        checkRefLinks = true;\n      })\n    );\n  }\n\n  // Build full recursiveRefMap\n  // First pass - save all internally recursive refs from refMapSet\n  Array.from(refMapSet)\n    .map(refLink => refLink.split('~~'))\n    .filter(([fromRef, toRef]) => JsonPointer.isSubPointer(toRef, fromRef))\n    .forEach(([fromRef, toRef]) => recursiveRefMap.set(fromRef, toRef));\n  // Second pass - create recursive versions of any other refs that link to recursive refs\n  Array.from(refMap)\n    .filter(([fromRef1, toRef1]) => Array.from(recursiveRefMap.keys())\n      .every(fromRef2 => !JsonPointer.isSubPointer(fromRef1, fromRef2, true))\n    )\n    .forEach(([fromRef1, toRef1]) => Array.from(recursiveRefMap)\n      .filter(([fromRef2, toRef2]) =>\n        !recursiveRefMap.has(fromRef1 + fromRef2.slice(toRef1.length)) &&\n        JsonPointer.isSubPointer(toRef1, fromRef2, true) &&\n        !JsonPointer.isSubPointer(toRef1, fromRef1, true)\n      )\n      .forEach(([fromRef2, toRef2]) => recursiveRefMap.set(\n        fromRef1 + fromRef2.slice(toRef1.length),\n        fromRef1 + toRef2.slice(toRef1.length)\n      ))\n    );\n\n  // Create compiled schema by replacing all non-recursive $ref links with\n  // thieir linked schemas and, where possible, combining schemas in allOf arrays.\n  let compiledSchema = { ...schema };\n  delete compiledSchema.definitions;\n  compiledSchema =\n    getSubSchema(compiledSchema, '', refLibrary, recursiveRefMap);\n\n  // Make sure all remaining schema $refs are recursive, and build final\n  // schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, & arrayMap\n  JsonPointer.forEachDeep(compiledSchema, (subSchema, subSchemaPointer) => {\n    if (isString(subSchema['$ref'])) {\n      let refPointer = JsonPointer.compile(subSchema['$ref']);\n      if (!JsonPointer.isSubPointer(refPointer, subSchemaPointer, true)) {\n        refPointer = removeRecursiveReferences(subSchemaPointer, recursiveRefMap);\n        JsonPointer.set(compiledSchema, subSchemaPointer, { $ref: `#${refPointer}` });\n      }\n      if (!hasOwn(schemaRefLibrary, 'refPointer')) {\n        schemaRefLibrary[refPointer] = !refPointer.length ? compiledSchema :\n          getSubSchema(compiledSchema, refPointer, schemaRefLibrary, recursiveRefMap);\n      }\n      if (!schemaRecursiveRefMap.has(subSchemaPointer)) {\n        schemaRecursiveRefMap.set(subSchemaPointer, refPointer);\n      }\n      const fromDataRef = JsonPointer.toDataPointer(subSchemaPointer, compiledSchema);\n      if (!dataRecursiveRefMap.has(fromDataRef)) {\n        const toDataRef = JsonPointer.toDataPointer(refPointer, compiledSchema);\n        dataRecursiveRefMap.set(fromDataRef, toDataRef);\n      }\n    }\n    if (subSchema.type === 'array' &&\n      (hasOwn(subSchema, 'items') || hasOwn(subSchema, 'additionalItems'))\n    ) {\n      const dataPointer = JsonPointer.toDataPointer(subSchemaPointer, compiledSchema);\n      if (!arrayMap.has(dataPointer)) {\n        const tupleItems = isArray(subSchema.items) ? subSchema.items.length : 0;\n        arrayMap.set(dataPointer, tupleItems);\n      }\n    }\n  }, true);\n  return compiledSchema;\n}\n\n/**\n * 'getSubSchema' function\n *\n * //   schema\n * //  { Pointer } pointer\n * //  { object } schemaRefLibrary\n * //  { Map<string, string> } schemaRecursiveRefMap\n * //  { string[] = [] } usedPointers\n * //\n */\nexport function getSubSchema(\n  schema, pointer, schemaRefLibrary = null,\n  schemaRecursiveRefMap: Map<string, string> = null, usedPointers: string[] = []\n) {\n  if (!schemaRefLibrary || !schemaRecursiveRefMap) {\n    return JsonPointer.getCopy(schema, pointer);\n  }\n  if (typeof pointer !== 'string') { pointer = JsonPointer.compile(pointer); }\n  usedPointers = [ ...usedPointers, pointer ];\n  let newSchema: any = null;\n  if (pointer === '') {\n    newSchema = _.cloneDeep(schema);\n  } else {\n    const shortPointer = removeRecursiveReferences(pointer, schemaRecursiveRefMap);\n    if (shortPointer !== pointer) { usedPointers = [ ...usedPointers, shortPointer ]; }\n    newSchema = JsonPointer.getFirstCopy([\n      [schemaRefLibrary, [shortPointer]],\n      [schema, pointer],\n      [schema, shortPointer]\n    ]);\n  }\n  return JsonPointer.forEachDeepCopy(newSchema, (subSchema, subPointer) => {\n    if (isObject(subSchema)) {\n\n      // Replace non-recursive $ref links with referenced schemas\n      if (isString(subSchema.$ref)) {\n        const refPointer = JsonPointer.compile(subSchema.$ref);\n        if (refPointer.length && usedPointers.every(ptr =>\n          !JsonPointer.isSubPointer(refPointer, ptr, true)\n        )) {\n          const refSchema = getSubSchema(\n            schema, refPointer, schemaRefLibrary, schemaRecursiveRefMap, usedPointers\n          );\n          if (Object.keys(subSchema).length === 1) {\n            return refSchema;\n          } else {\n            const extraKeys = { ...subSchema };\n            delete extraKeys.$ref;\n            return mergeSchemas(refSchema, extraKeys);\n          }\n        }\n      }\n\n      // TODO: Convert schemas with 'type' arrays to 'oneOf'\n\n      // Combine allOf subSchemas\n      if (isArray(subSchema.allOf)) { return combineAllOf(subSchema); }\n\n      // Fix incorrectly placed array object required lists\n      if (subSchema.type === 'array' && isArray(subSchema.required)) {\n        return fixRequiredArrayProperties(subSchema);\n      }\n    }\n    return subSchema;\n  }, true, <string>pointer);\n}\n\n/**\n * 'combineAllOf' function\n *\n * Attempt to convert an allOf schema object into\n * a non-allOf schema object with equivalent rules.\n *\n * //   schema - allOf schema object\n * //  - converted schema object\n */\nexport function combineAllOf(schema) {\n  if (!isObject(schema) || !isArray(schema.allOf)) { return schema; }\n  let mergedSchema = mergeSchemas(...schema.allOf);\n  if (Object.keys(schema).length > 1) {\n    const extraKeys = { ...schema };\n    delete extraKeys.allOf;\n    mergedSchema = mergeSchemas(mergedSchema, extraKeys);\n  }\n  return mergedSchema;\n}\n\n/**\n * 'fixRequiredArrayProperties' function\n *\n * Fixes an incorrectly placed required list inside an array schema, by moving\n * it into items.properties or additionalItems.properties, where it belongs.\n *\n * //   schema - allOf schema object\n * //  - converted schema object\n */\nexport function fixRequiredArrayProperties(schema) {\n  if (schema.type === 'array' && isArray(schema.required)) {\n    const itemsObject = hasOwn(schema.items, 'properties') ? 'items' :\n      hasOwn(schema.additionalItems, 'properties') ? 'additionalItems' : null;\n    if (itemsObject && !hasOwn(schema[itemsObject], 'required') && (\n      hasOwn(schema[itemsObject], 'additionalProperties') ||\n      schema.required.every(key => hasOwn(schema[itemsObject].properties, key))\n    )) {\n      schema = _.cloneDeep(schema);\n      schema[itemsObject].required = schema.required;\n      delete schema.required;\n    }\n  }\n  return schema;\n}\n","// updated from AJV fast format regular expressions:\n// https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js\n\nexport const jsonSchemaFormatTests = {\n\n  'date': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/,\n\n  'time': /^[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\n\n  // Modified to allow incomplete entries, such as\n  // \"2000-03-14T01:59:26.535\" (needs \"Z\") or \"2000-03-14T01:59\" (needs \":00Z\")\n  'date-time': /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d(?::[0-5]\\d)?(?:\\.\\d+)?(?:z|[+-]\\d\\d:\\d\\d)?$/i,\n\n  // email (sources from jsen validator):\n  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363\n  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')\n  'email': /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,\n\n  'hostname': /^[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*$/i,\n\n  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\n  'ipv4': /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/,\n\n  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\n  'ipv6': /^\\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(?:%.+)?\\s*$/i,\n\n  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n  'uri': /^(?:[a-z][a-z0-9+-.]*)(?::|\\/)\\/?[^\\s]*$/i,\n\n  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A\n  'uri-reference': /^(?:(?:[a-z][a-z0-9+-.]*:)?\\/\\/)?[^\\s]*$/i,\n\n  // uri-template: https://tools.ietf.org/html/rfc6570\n  'uri-template': /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i,\n\n  // For the source: https://gist.github.com/dperini/729294\n  // For test cases: https://mathiasbynens.be/demo/url-regex\n  // @todo Delete current URL in favour of the commented out URL rule when this ajv issue is fixed https://github.com/eslint/eslint/issues/7983.\n  // URL: /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu,\n  'url': /^(?:(?:http[s\\u017F]?|ftp):\\/\\/)(?:(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+(?::(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?@)?(?:(?!10(?:\\.[0-9]{1,3}){3})(?!127(?:\\.[0-9]{1,3}){3})(?!169\\.254(?:\\.[0-9]{1,3}){2})(?!192\\.168(?:\\.[0-9]{1,3}){2})(?!172\\.(?:1[6-9]|2[0-9]|3[01])(?:\\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)(?:\\.(?:(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+-?)*(?:[0-9KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+)*(?:\\.(?:(?:[KSa-z\\xA1-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\\/(?:[\\0-\\x08\\x0E-\\x1F!-\\x9F\\xA1-\\u167F\\u1681-\\u1FFF\\u200B-\\u2027\\u202A-\\u202E\\u2030-\\u205E\\u2060-\\u2FFF\\u3001-\\uD7FF\\uE000-\\uFEFE\\uFF00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*)?$/i,\n\n  // uuid: http://tools.ietf.org/html/rfc4122\n  'uuid': /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i,\n\n  // optimized https://gist.github.com/olmokramer/82ccce673f86db7cda5e\n  'color': /^\\s*(#(?:[\\da-f]{3}){1,2}|rgb\\((?:\\d{1,3},\\s*){2}\\d{1,3}\\)|rgba\\((?:\\d{1,3},\\s*){3}\\d*\\.?\\d+\\)|hsl\\(\\d{1,3}(?:,\\s*\\d{1,3}%){2}\\)|hsla\\(\\d{1,3}(?:,\\s*\\d{1,3}%){2},\\s*\\d*\\.?\\d+\\))\\s*$/gi,\n\n  // JSON-pointer: https://tools.ietf.org/html/rfc6901\n  'json-pointer': /^(?:\\/(?:[^~/]|~0|~1)*)*$|^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i,\n\n  'relative-json-pointer': /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/,\n\n  'regex': function(str) {\n    if (/[^\\\\]\\\\Z/.test(str)) { return false; }\n    try {\n      new RegExp(str);\n      return true;\n    } catch(e) {\n      return false;\n    }\n  }\n\n};\n\nexport type JsonSchemaFormatNames =\n  'date'|'time'|'date-time'|'email'|'hostname'|'ipv4'|'ipv6'|\n  'uri'|'uri-reference'|'uri-template'|'url'|'uuid'|'color'|\n  'json-pointer'|'relative-json-pointer'|'regex';\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { Observable, forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport * as _ from 'lodash';\n\nimport {\n  _executeValidators, _executeAsyncValidators, _mergeObjects, _mergeErrors,\n  isEmpty, isDefined, hasValue, isString, isNumber, isBoolean, isArray,\n  getType, isType, toJavaScriptType, toObservable, xor, SchemaPrimitiveType,\n  PlainObject, IValidatorFn, AsyncIValidatorFn\n} from './validator.functions';\nimport { forEachCopy } from './utility.functions';\nimport { jsonSchemaFormatTests, JsonSchemaFormatNames } from './format-regex.constants';\n\n/**\n * 'JsonValidators' class\n *\n * Provides an extended set of validators to be used by form controls,\n * compatible with standard JSON Schema validation options.\n * http://json-schema.org/latest/json-schema-validation.html\n *\n * Note: This library is designed as a drop-in replacement for the Angular\n * Validators library, and except for one small breaking change to the 'pattern'\n * validator (described below) it can even be imported as a substitute, like so:\n *\n *   import { JsonValidators as Validators } from 'json-validators';\n *\n * and it should work with existing code as a complete replacement.\n *\n * The one exception is the 'pattern' validator, which has been changed to\n * matche partial values by default (the standard 'pattern' validator wrapped\n * all patterns in '^' and '$', forcing them to always match an entire value).\n * However, the old behavior can be restored by simply adding '^' and '$'\n * around your patterns, or by passing an optional second parameter of TRUE.\n * This change is to make the 'pattern' validator match the behavior of a\n * JSON Schema pattern, which allows partial matches, rather than the behavior\n * of an HTML input control pattern, which does not.\n *\n * This library replaces Angular's validators and combination functions\n * with the following validators and transformation functions:\n *\n * Validators:\n *   For all formControls:     required (*), type, enum, const\n *   For text formControls:    minLength (*), maxLength (*), pattern (*), format\n *   For numeric formControls: maximum, exclusiveMaximum,\n *                             minimum, exclusiveMinimum, multipleOf\n *   For formGroup objects:    minProperties, maxProperties, dependencies\n *   For formArray arrays:     minItems, maxItems, uniqueItems, contains\n *   Not used by JSON Schema:  min (*), max (*), requiredTrue (*), email (*)\n * (Validators originally included with Angular are maked with (*).)\n *\n * NOTE / TODO: The dependencies validator is not complete.\n * NOTE / TODO: The contains validator is not complete.\n *\n * Validators not used by JSON Schema (but included for compatibility)\n * and their JSON Schema equivalents:\n *\n *   Angular validator | JSON Schema equivalent\n *   ------------------|-----------------------\n *     min(number)     |   minimum(number)\n *     max(number)     |   maximum(number)\n *     requiredTrue()  |   const(true)\n *     email()         |   format('email')\n *\n * Validator transformation functions:\n *   composeAnyOf, composeOneOf, composeAllOf, composeNot\n * (Angular's original combination funciton, 'compose', is also included for\n * backward compatibility, though it is functionally equivalent to composeAllOf,\n * asside from its more generic error message.)\n *\n * All validators have also been extended to accept an optional second argument\n * which, if passed a TRUE value, causes the validator to perform the opposite\n * of its original finction. (This is used internally to enable 'not' and\n * 'composeOneOf' to function and return useful error messages.)\n *\n * The 'required' validator has also been overloaded so that if called with\n * a boolean parameter (or no parameters) it returns the original validator\n * function (rather than executing it). However, if it is called with an\n * AbstractControl parameter (as was previously required), it behaves\n * exactly as before.\n *\n * This enables all validators (including 'required') to be constructed in\n * exactly the same way, so they can be automatically applied using the\n * equivalent key names and values taken directly from a JSON Schema.\n *\n * This source code is partially derived from Angular,\n * which is Copyright (c) 2014-2017 Google, Inc.\n * Use of this source code is therefore governed by the same MIT-style license\n * that can be found in the LICENSE file at https://angular.io/license\n *\n * Original Angular Validators:\n * https://github.com/angular/angular/blob/master/packages/forms/src/validators.ts\n */\nexport class JsonValidators {\n\n  /**\n   * Validator functions:\n   *\n   * For all formControls:     required, type, enum, const\n   * For text formControls:    minLength, maxLength, pattern, format\n   * For numeric formControls: maximum, exclusiveMaximum,\n   *                           minimum, exclusiveMinimum, multipleOf\n   * For formGroup objects:    minProperties, maxProperties, dependencies\n   * For formArray arrays:     minItems, maxItems, uniqueItems, contains\n   *\n   * TODO: finish dependencies validator\n   */\n\n  /**\n   * 'required' validator\n   *\n   * This validator is overloaded, compared to the default required validator.\n   * If called with no parameters, or TRUE, this validator returns the\n   * 'required' validator function (rather than executing it). This matches\n   * the behavior of all other validators in this library.\n   *\n   * If this validator is called with an AbstractControl parameter\n   * (as was previously required) it behaves the same as Angular's default\n   * required validator, and returns an error if the control is empty.\n   *\n   * Old behavior: (if input type = AbstractControl)\n   * // {AbstractControl} control - required control\n   * // {{[key: string]: boolean}} - returns error message if no input\n   *\n   * New behavior: (if no input, or input type = boolean)\n   * // {boolean = true} required? - true to validate, false to disable\n   * // {IValidatorFn} - returns the 'required' validator function itself\n   */\n  static required(input: AbstractControl): ValidationErrors|null;\n  static required(input?: boolean): IValidatorFn;\n\n  static required(input?: AbstractControl|boolean): ValidationErrors|null|IValidatorFn {\n    if (input === undefined) { input = true; }\n    switch (input) {\n      case true: // Return required function (do not execute it yet)\n        return (control: AbstractControl, invert = false): ValidationErrors|null => {\n          if (invert) { return null; } // if not required, always return valid\n          return hasValue(control.value) ? null : { 'required': true };\n        };\n      case false: // Do nothing (if field is not required, it is always valid)\n        return JsonValidators.nullValidator;\n      default: // Execute required function\n        return hasValue((<AbstractControl>input).value) ? null : { 'required': true };\n    }\n  }\n\n  /**\n   * 'type' validator\n   *\n   * Requires a control to only accept values of a specified type,\n   * or one of an array of types.\n   *\n   * Note: SchemaPrimitiveType = 'string'|'number'|'integer'|'boolean'|'null'\n   *\n   * // {SchemaPrimitiveType|SchemaPrimitiveType[]} type - type(s) to accept\n   * // {IValidatorFn}\n   */\n  static type(requiredType: SchemaPrimitiveType|SchemaPrimitiveType[]): IValidatorFn {\n    if (!hasValue(requiredType)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue: any = control.value;\n      const isValid = isArray(requiredType) ?\n        (<SchemaPrimitiveType[]>requiredType).some(type => isType(currentValue, type)) :\n        isType(currentValue, <SchemaPrimitiveType>requiredType);\n      return xor(isValid, invert) ?\n        null : { 'type': { requiredType, currentValue } };\n    };\n  }\n\n  /**\n   * 'enum' validator\n   *\n   * Requires a control to have a value from an enumerated list of values.\n   *\n   * Converts types as needed to allow string inputs to still correctly\n   * match number, boolean, and null enum values.\n   *\n   * // {any[]} allowedValues - array of acceptable values\n   * // {IValidatorFn}\n   */\n  static enum(allowedValues: any[]): IValidatorFn {\n    if (!isArray(allowedValues)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue: any = control.value;\n      const isEqual = (enumValue, inputValue) =>\n        enumValue === inputValue ||\n        (isNumber(enumValue) && +inputValue === +enumValue) ||\n        (isBoolean(enumValue, 'strict') &&\n          toJavaScriptType(inputValue, 'boolean') === enumValue) ||\n        (enumValue === null && !hasValue(inputValue)) ||\n        _.isEqual(enumValue, inputValue);\n      const isValid = isArray(currentValue) ?\n        currentValue.every(inputValue => allowedValues.some(enumValue =>\n          isEqual(enumValue, inputValue)\n        )) :\n        allowedValues.some(enumValue => isEqual(enumValue, currentValue));\n      return xor(isValid, invert) ?\n        null : { 'enum': { allowedValues, currentValue } };\n    };\n  }\n\n  /**\n   * 'const' validator\n   *\n   * Requires a control to have a specific value.\n   *\n   * Converts types as needed to allow string inputs to still correctly\n   * match number, boolean, and null values.\n   *\n   * TODO: modify to work with objects\n   *\n   * // {any[]} requiredValue - required value\n   * // {IValidatorFn}\n   */\n  static const(requiredValue: any): IValidatorFn {\n    if (!hasValue(requiredValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue: any = control.value;\n      const isEqual = (constValue, inputValue) =>\n        constValue === inputValue ||\n        isNumber(constValue) && +inputValue === +constValue ||\n        isBoolean(constValue, 'strict') &&\n          toJavaScriptType(inputValue, 'boolean') === constValue ||\n        constValue === null && !hasValue(inputValue);\n      const isValid = isEqual(requiredValue, currentValue);\n      return xor(isValid, invert) ?\n        null : { 'const': { requiredValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'minLength' validator\n   *\n   * Requires a control's text value to be greater than a specified length.\n   *\n   * // {number} minimumLength - minimum allowed string length\n   * // {boolean = false} invert - instead return error object only if valid\n   * // {IValidatorFn}\n   */\n  static minLength(minimumLength: number): IValidatorFn {\n    if (!hasValue(minimumLength)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentLength = isString(control.value) ? control.value.length : 0;\n      const isValid = currentLength >= minimumLength;\n      return xor(isValid, invert) ?\n        null : { 'minLength': { minimumLength, currentLength } };\n    };\n  }\n\n  /**\n   * 'maxLength' validator\n   *\n   * Requires a control's text value to be less than a specified length.\n   *\n   * // {number} maximumLength - maximum allowed string length\n   * // {boolean = false} invert - instead return error object only if valid\n   * // {IValidatorFn}\n   */\n  static maxLength(maximumLength: number): IValidatorFn {\n    if (!hasValue(maximumLength)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const currentLength = isString(control.value) ? control.value.length : 0;\n      const isValid = currentLength <= maximumLength;\n      return xor(isValid, invert) ?\n        null : { 'maxLength': { maximumLength, currentLength } };\n    };\n  }\n\n  /**\n   * 'pattern' validator\n   *\n   * Note: NOT the same as Angular's default pattern validator.\n   *\n   * Requires a control's value to match a specified regular expression pattern.\n   *\n   * This validator changes the behavior of default pattern validator\n   * by replacing RegExp(`^${pattern}$`) with RegExp(`${pattern}`),\n   * which allows for partial matches.\n   *\n   * To return to the default funcitonality, and match the entire string,\n   * pass TRUE as the optional second parameter.\n   *\n   * // {string} pattern - regular expression pattern\n   * // {boolean = false} wholeString - match whole value string?\n   * // {IValidatorFn}\n   */\n  static pattern(pattern: string|RegExp, wholeString = false): IValidatorFn {\n    if (!hasValue(pattern)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let regex: RegExp;\n      let requiredPattern: string;\n      if (typeof pattern === 'string') {\n        requiredPattern = (wholeString) ? `^${pattern}$` : pattern;\n        regex = new RegExp(requiredPattern);\n      } else {\n        requiredPattern = pattern.toString();\n        regex = pattern;\n      }\n      const currentValue: string = control.value;\n      const isValid = isString(currentValue) ? regex.test(currentValue) : false;\n      return xor(isValid, invert) ?\n        null : { 'pattern': { requiredPattern, currentValue } };\n    };\n  }\n\n  /**\n   * 'format' validator\n   *\n   * Requires a control to have a value of a certain format.\n   *\n   * This validator currently checks the following formsts:\n   *   date, time, date-time, email, hostname, ipv4, ipv6,\n   *   uri, uri-reference, uri-template, url, uuid, color,\n   *   json-pointer, relative-json-pointer, regex\n   *\n   * Fast format regular expressions copied from AJV:\n   * https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js\n   *\n   * // {JsonSchemaFormatNames} requiredFormat - format to check\n   * // {IValidatorFn}\n   */\n  static format(requiredFormat: JsonSchemaFormatNames): IValidatorFn {\n    if (!hasValue(requiredFormat)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      let isValid: boolean;\n      const currentValue: string|Date = control.value;\n      if (isString(currentValue)) {\n        const formatTest: Function|RegExp = jsonSchemaFormatTests[requiredFormat];\n        if (typeof formatTest === 'object') {\n          isValid = (<RegExp>formatTest).test(<string>currentValue);\n        } else if (typeof formatTest === 'function') {\n          isValid = (<Function>formatTest)(<string>currentValue);\n        } else {\n          console.error(`format validator error: \"${requiredFormat}\" is not a recognized format.`);\n          isValid = true;\n        }\n      } else {\n        // Allow JavaScript Date objects\n        isValid = ['date', 'time', 'date-time'].includes(requiredFormat) &&\n          Object.prototype.toString.call(currentValue) === '[object Date]';\n      }\n      return xor(isValid, invert) ?\n        null : { 'format': { requiredFormat, currentValue } };\n    };\n  }\n\n  /**\n   * 'minimum' validator\n   *\n   * Requires a control's numeric value to be greater than or equal to\n   * a minimum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a minimum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} minimum - minimum allowed value\n   * // {IValidatorFn}\n   */\n  static minimum(minimumValue: number): IValidatorFn {\n    if (!hasValue(minimumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || currentValue >= minimumValue;\n      return xor(isValid, invert) ?\n        null : { 'minimum': { minimumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'exclusiveMinimum' validator\n   *\n   * Requires a control's numeric value to be less than a maximum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a maximum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} exclusiveMinimumValue - maximum allowed value\n   * // {IValidatorFn}\n   */\n  static exclusiveMinimum(exclusiveMinimumValue: number): IValidatorFn {\n    if (!hasValue(exclusiveMinimumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || +currentValue < exclusiveMinimumValue;\n      return xor(isValid, invert) ?\n        null : { 'exclusiveMinimum': { exclusiveMinimumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'maximum' validator\n   *\n   * Requires a control's numeric value to be less than or equal to\n   * a maximum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a maximum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} maximumValue - maximum allowed value\n   * // {IValidatorFn}\n   */\n  static maximum(maximumValue: number): IValidatorFn {\n    if (!hasValue(maximumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || +currentValue <= maximumValue;\n      return xor(isValid, invert) ?\n        null : { 'maximum': { maximumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'exclusiveMaximum' validator\n   *\n   * Requires a control's numeric value to be less than a maximum amount.\n   *\n   * Any non-numeric value is also valid (according to the HTML forms spec,\n   * a non-numeric value doesn't have a maximum).\n   * https://www.w3.org/TR/html5/forms.html#attr-input-max\n   *\n   * // {number} exclusiveMaximumValue - maximum allowed value\n   * // {IValidatorFn}\n   */\n  static exclusiveMaximum(exclusiveMaximumValue: number): IValidatorFn {\n    if (!hasValue(exclusiveMaximumValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = !isNumber(currentValue) || +currentValue < exclusiveMaximumValue;\n      return xor(isValid, invert) ?\n        null : { 'exclusiveMaximum': { exclusiveMaximumValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'multipleOf' validator\n   *\n   * Requires a control to have a numeric value that is a multiple\n   * of a specified number.\n   *\n   * // {number} multipleOfValue - number value must be a multiple of\n   * // {IValidatorFn}\n   */\n  static multipleOf(multipleOfValue: number): IValidatorFn {\n    if (!hasValue(multipleOfValue)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentValue = control.value;\n      const isValid = isNumber(currentValue) &&\n        currentValue % multipleOfValue === 0;\n      return xor(isValid, invert) ?\n        null : { 'multipleOf': { multipleOfValue, currentValue } };\n    };\n  }\n\n  /**\n   * 'minProperties' validator\n   *\n   * Requires a form group to have a minimum number of properties (i.e. have\n   * values entered in a minimum number of controls within the group).\n   *\n   * // {number} minimumProperties - minimum number of properties allowed\n   * // {IValidatorFn}\n   */\n  static minProperties(minimumProperties: number): IValidatorFn {\n    if (!hasValue(minimumProperties)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentProperties = Object.keys(control.value).length || 0;\n      const isValid = currentProperties >= minimumProperties;\n      return xor(isValid, invert) ?\n        null : { 'minProperties': { minimumProperties, currentProperties } };\n    };\n  }\n\n  /**\n   * 'maxProperties' validator\n   *\n   * Requires a form group to have a maximum number of properties (i.e. have\n   * values entered in a maximum number of controls within the group).\n   *\n   * Note: Has no effect if the form group does not contain more than the\n   * maximum number of controls.\n   *\n   * // {number} maximumProperties - maximum number of properties allowed\n   * // {IValidatorFn}\n   */\n  static maxProperties(maximumProperties: number): IValidatorFn {\n    if (!hasValue(maximumProperties)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const currentProperties = Object.keys(control.value).length || 0;\n      const isValid = currentProperties <= maximumProperties;\n      return xor(isValid, invert) ?\n        null : { 'maxProperties': { maximumProperties, currentProperties } };\n    };\n  }\n\n  /**\n   * 'dependencies' validator\n   *\n   * Requires the controls in a form group to meet additional validation\n   * criteria, depending on the values of other controls in the group.\n   *\n   * Examples:\n   * https://spacetelescope.github.io/understanding-json-schema/reference/object.html#dependencies\n   *\n   * // {any} dependencies - required dependencies\n   * // {IValidatorFn}\n   */\n  static dependencies(dependencies: any): IValidatorFn {\n    if (getType(dependencies) !== 'object' || isEmpty(dependencies)) {\n      return JsonValidators.nullValidator;\n    }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const allErrors = _mergeObjects(\n        forEachCopy(dependencies, (value, requiringField) => {\n          if (!hasValue(control.value[requiringField])) { return null; }\n          let requiringFieldErrors: ValidationErrors = { };\n          let requiredFields: string[];\n          let properties: ValidationErrors = { };\n          if (getType(dependencies[requiringField]) === 'array') {\n            requiredFields = dependencies[requiringField];\n          } else if (getType(dependencies[requiringField]) === 'object') {\n            requiredFields = dependencies[requiringField]['required'] || [];\n            properties = dependencies[requiringField]['properties'] || { };\n          }\n\n          // Validate property dependencies\n          for (const requiredField of requiredFields) {\n            if (xor(!hasValue(control.value[requiredField]), invert)) {\n              requiringFieldErrors[requiredField] = { 'required': true };\n            }\n          }\n\n          // Validate schema dependencies\n          requiringFieldErrors = _mergeObjects(requiringFieldErrors,\n            forEachCopy(properties, (requirements, requiredField) => {\n              const requiredFieldErrors = _mergeObjects(\n                forEachCopy(requirements, (requirement, parameter) => {\n                  let validator: IValidatorFn = null;\n                  if (requirement === 'maximum' || requirement === 'minimum') {\n                    const exclusive = !!requirements['exclusiveM' + requirement.slice(1)];\n                    validator = JsonValidators[requirement](parameter, exclusive);\n                  } else if (typeof JsonValidators[requirement] === 'function') {\n                    validator = JsonValidators[requirement](parameter);\n                  }\n                  return !isDefined(validator) ?\n                    null : validator(control.value[requiredField]);\n                })\n              );\n              return isEmpty(requiredFieldErrors) ?\n                null : { [requiredField]: requiredFieldErrors };\n            })\n          );\n          return isEmpty(requiringFieldErrors) ?\n            null : { [requiringField]: requiringFieldErrors };\n        })\n      );\n      return isEmpty(allErrors) ? null : allErrors;\n    };\n  }\n\n  /**\n   * 'minItems' validator\n   *\n   * Requires a form array to have a minimum number of values.\n   *\n   * // {number} minimumItems - minimum number of items allowed\n   * // {IValidatorFn}\n   */\n  static minItems(minimumItems: number): IValidatorFn {\n    if (!hasValue(minimumItems)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const currentItems = isArray(control.value) ? control.value.length : 0;\n      const isValid = currentItems >= minimumItems;\n      return xor(isValid, invert) ?\n        null : { 'minItems': { minimumItems, currentItems } };\n    };\n  }\n\n  /**\n   * 'maxItems' validator\n   *\n   * Requires a form array to have a maximum number of values.\n   *\n   * // {number} maximumItems - maximum number of items allowed\n   * // {IValidatorFn}\n   */\n  static maxItems(maximumItems: number): IValidatorFn {\n    if (!hasValue(maximumItems)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const currentItems = isArray(control.value) ? control.value.length : 0;\n      const isValid = currentItems <= maximumItems;\n      return xor(isValid, invert) ?\n        null : { 'maxItems': { maximumItems, currentItems } };\n    };\n  }\n\n  /**\n   * 'uniqueItems' validator\n   *\n   * Requires values in a form array to be unique.\n   *\n   * // {boolean = true} unique? - true to validate, false to disable\n   * // {IValidatorFn}\n   */\n  static uniqueItems(unique = true): IValidatorFn {\n    if (!unique) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const sorted: any[] = control.value.slice().sort();\n      const duplicateItems = [];\n      for (let i = 1; i < sorted.length; i++) {\n        if (sorted[i - 1] === sorted[i] && duplicateItems.includes(sorted[i])) {\n          duplicateItems.push(sorted[i]);\n        }\n      }\n      const isValid = !duplicateItems.length;\n      return xor(isValid, invert) ?\n        null : { 'uniqueItems': { duplicateItems } };\n    };\n  }\n\n  /**\n   * 'contains' validator\n   *\n   * TODO: Complete this validator\n   *\n   * Requires values in a form array to be unique.\n   *\n   * // {boolean = true} unique? - true to validate, false to disable\n   * // {IValidatorFn}\n   */\n  static contains(requiredItem = true): IValidatorFn {\n    if (!requiredItem) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value) || !isArray(control.value)) { return null; }\n      const currentItems = control.value;\n      // const isValid = currentItems.some(item =>\n      //\n      // );\n      const isValid = true;\n      return xor(isValid, invert) ?\n        null : { 'contains': { requiredItem, currentItems } };\n    };\n  }\n\n  /**\n   * No-op validator. Included for backward compatibility.\n   */\n  static nullValidator(control: AbstractControl): ValidationErrors|null {\n    return null;\n  }\n\n  /**\n   * Validator transformation functions:\n   * composeAnyOf, composeOneOf, composeAllOf, composeNot,\n   * compose, composeAsync\n   *\n   * TODO: Add composeAnyOfAsync, composeOneOfAsync,\n   *           composeAllOfAsync, composeNotAsync\n   */\n\n  /**\n   * 'composeAnyOf' validator combination function\n   *\n   * Accepts an array of validators and returns a single validator that\n   * evaluates to valid if any one or more of the submitted validators are\n   * valid. If every validator is invalid, it returns combined errors from\n   * all validators.\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static composeAnyOf(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const arrayOfErrors =\n        _executeValidators(control, presentValidators, invert).filter(isDefined);\n      const isValid = validators.length > arrayOfErrors.length;\n      return xor(isValid, invert) ?\n        null : _mergeObjects(...arrayOfErrors, { 'anyOf': !invert });\n    };\n  }\n\n  /**\n   * 'composeOneOf' validator combination function\n   *\n   * Accepts an array of validators and returns a single validator that\n   * evaluates to valid only if exactly one of the submitted validators\n   * is valid. Otherwise returns combined information from all validators,\n   * both valid and invalid.\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static composeOneOf(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const arrayOfErrors =\n        _executeValidators(control, presentValidators);\n      const validControls =\n        validators.length - arrayOfErrors.filter(isDefined).length;\n      const isValid = validControls === 1;\n      if (xor(isValid, invert)) { return null; }\n      const arrayOfValids =\n        _executeValidators(control, presentValidators, invert);\n      return _mergeObjects(...arrayOfErrors, ...arrayOfValids, { 'oneOf': !invert });\n    };\n  }\n\n  /**\n   * 'composeAllOf' validator combination function\n   *\n   * Accepts an array of validators and returns a single validator that\n   * evaluates to valid only if all the submitted validators are individually\n   * valid. Otherwise it returns combined errors from all invalid validators.\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static composeAllOf(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      const combinedErrors = _mergeErrors(\n        _executeValidators(control, presentValidators, invert)\n      );\n      const isValid = combinedErrors === null;\n      return (xor(isValid, invert)) ?\n        null : _mergeObjects(combinedErrors, { 'allOf': !invert });\n    };\n  }\n\n  /**\n   * 'composeNot' validator inversion function\n   *\n   * Accepts a single validator function and inverts its result.\n   * Returns valid if the submitted validator is invalid, and\n   * returns invalid if the submitted validator is valid.\n   * (Note: this function can itself be inverted\n   *   - e.g. composeNot(composeNot(validator)) -\n   *   but this can be confusing and is therefore not recommended.)\n   *\n   * // {IValidatorFn[]} validators - validator(s) to invert\n   * // {IValidatorFn} - new validator function that returns opposite result\n   */\n  static composeNot(validator: IValidatorFn): IValidatorFn {\n    if (!validator) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null => {\n      if (isEmpty(control.value)) { return null; }\n      const error = validator(control, !invert);\n      const isValid = error === null;\n      return (xor(isValid, invert)) ?\n        null : _mergeObjects(error, { 'not': !invert });\n    };\n  }\n\n  /**\n   * 'compose' validator combination function\n   *\n   * // {IValidatorFn[]} validators - array of validators to combine\n   * // {IValidatorFn} - single combined validator function\n   */\n  static compose(validators: IValidatorFn[]): IValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl, invert = false): ValidationErrors|null =>\n      _mergeErrors(_executeValidators(control, presentValidators, invert));\n  }\n\n  /**\n   * 'composeAsync' async validator combination function\n   *\n   * // {AsyncIValidatorFn[]} async validators - array of async validators\n   * // {AsyncIValidatorFn} - single combined async validator function\n   */\n  static composeAsync(validators: AsyncIValidatorFn[]): AsyncIValidatorFn {\n    if (!validators) { return null; }\n    const presentValidators = validators.filter(isDefined);\n    if (presentValidators.length === 0) { return null; }\n    return (control: AbstractControl) => {\n      const observables =\n        _executeAsyncValidators(control, presentValidators).map(toObservable);\n      return map.call(forkJoin(observables), _mergeErrors);\n    };\n  }\n\n  // Additional angular validators (not used by Angualr JSON Schema Form)\n  // From https://github.com/angular/angular/blob/master/packages/forms/src/validators.ts\n\n  /**\n   * Validator that requires controls to have a value greater than a number.\n   */\n  static min(min: number): ValidatorFn {\n    if (!hasValue(min)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl): ValidationErrors|null => {\n      // don't validate empty values to allow optional controls\n      if (isEmpty(control.value) || isEmpty(min)) { return null; }\n      const value = parseFloat(control.value);\n      const actual = control.value;\n      // Controls with NaN values after parsing should be treated as not having a\n      // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n      return isNaN(value) || value >= min ? null : { 'min': { min, actual } };\n    };\n  }\n\n  /**\n   * Validator that requires controls to have a value less than a number.\n   */\n  static max(max: number): ValidatorFn {\n    if (!hasValue(max)) { return JsonValidators.nullValidator; }\n    return (control: AbstractControl): ValidationErrors|null => {\n      // don't validate empty values to allow optional controls\n      if (isEmpty(control.value) || isEmpty(max)) { return null; }\n      const value = parseFloat(control.value);\n      const actual = control.value;\n      // Controls with NaN values after parsing should be treated as not having a\n      // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n      return isNaN(value) || value <= max ? null : { 'max': { max, actual } };\n    };\n  }\n\n  /**\n   * Validator that requires control value to be true.\n   */\n  static requiredTrue(control: AbstractControl): ValidationErrors|null {\n    if (!control) { return JsonValidators.nullValidator; }\n    return control.value === true ? null : { 'required': true };\n  }\n\n  /**\n   * Validator that performs email validation.\n   */\n  static email(control: AbstractControl): ValidationErrors|null {\n    if (!control) { return JsonValidators.nullValidator; }\n    const EMAIL_REGEXP =\n      // tslint:disable-next-line:max-line-length\n      /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n    return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n  }\n}\n","import {\n  AbstractControl, FormArray, FormControl, FormGroup, ValidatorFn\n} from '@angular/forms';\n\nimport * as _ from 'lodash';\n\nimport {\n  hasValue, inArray, isArray, isEmpty, isDate, isObject, isDefined, isPrimitive,\n  toJavaScriptType, toSchemaType, SchemaPrimitiveType\n} from './validator.functions';\nimport { forEach, hasOwn } from './utility.functions';\nimport { Pointer, JsonPointer } from './jsonpointer.functions';\nimport { JsonValidators } from './json.validators';\nimport {\n  combineAllOf, getControlValidators, getSubSchema, removeRecursiveReferences\n} from './json-schema.functions';\n\n/**\n * FormGroup function library:\n *\n * buildFormGroupTemplate:  Builds a FormGroupTemplate from schema\n *\n * buildFormGroup:          Builds an Angular FormGroup from a FormGroupTemplate\n *\n * mergeValues:\n *\n * setRequiredFields:\n *\n * formatFormData:\n *\n * getControl:\n *\n * ---- TODO: ----\n * TODO: add buildFormGroupTemplateFromLayout function\n * buildFormGroupTemplateFromLayout: Builds a FormGroupTemplate from a form layout\n */\n\n/**\n * 'buildFormGroupTemplate' function\n *\n * Builds a template for an Angular FormGroup from a JSON Schema.\n *\n * TODO: add support for pattern properties\n * https://spacetelescope.github.io/understanding-json-schema/reference/object.html\n *\n * //  {any} jsf -\n * //  {any = null} nodeValue -\n * //  {boolean = true} mapArrays -\n * //  {string = ''} schemaPointer -\n * //  {string = ''} dataPointer -\n * //  {any = ''} templatePointer -\n * // {any} -\n */\nexport function buildFormGroupTemplate(\n  jsf: any, nodeValue: any = null, setValues = true,\n  schemaPointer = '', dataPointer = '', templatePointer = ''\n) {\n  const schema = JsonPointer.get(jsf.schema, schemaPointer);\n  if (setValues) {\n    if (!isDefined(nodeValue) && (\n      jsf.formOptions.setSchemaDefaults === true ||\n      (jsf.formOptions.setSchemaDefaults === 'auto' && isEmpty(jsf.formValues))\n    )) {\n      nodeValue = JsonPointer.get(jsf.schema, schemaPointer + '/default');\n    }\n  } else {\n    nodeValue = null;\n  }\n  // TODO: If nodeValue still not set, check layout for default value\n  const schemaType: string | string[] = JsonPointer.get(schema, '/type');\n  const controlType =\n    (hasOwn(schema, 'properties') || hasOwn(schema, 'additionalProperties')) &&\n      schemaType === 'object' ? 'FormGroup' :\n    (hasOwn(schema, 'items') || hasOwn(schema, 'additionalItems')) &&\n      schemaType === 'array' ? 'FormArray' :\n    !schemaType && hasOwn(schema, '$ref') ? '$ref' : 'FormControl';\n  const shortDataPointer =\n    removeRecursiveReferences(dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap);\n  if (!jsf.dataMap.has(shortDataPointer)) {\n    jsf.dataMap.set(shortDataPointer, new Map());\n  }\n  const nodeOptions = jsf.dataMap.get(shortDataPointer);\n  if (!nodeOptions.has('schemaType')) {\n    nodeOptions.set('schemaPointer', schemaPointer);\n    nodeOptions.set('schemaType', schema.type);\n    if (schema.format) {\n      nodeOptions.set('schemaFormat', schema.format);\n      if (!schema.type) { nodeOptions.set('schemaType', 'string'); }\n    }\n    if (controlType) {\n      nodeOptions.set('templatePointer', templatePointer);\n      nodeOptions.set('templateType', controlType);\n    }\n  }\n  let controls: any;\n  const validators = getControlValidators(schema);\n  switch (controlType) {\n\n    case 'FormGroup':\n      controls = {};\n      if (hasOwn(schema, 'ui:order') || hasOwn(schema, 'properties')) {\n        const propertyKeys = schema['ui:order'] || Object.keys(schema.properties);\n        if (propertyKeys.includes('*') && !hasOwn(schema.properties, '*')) {\n          const unnamedKeys = Object.keys(schema.properties)\n            .filter(key => !propertyKeys.includes(key));\n          for (let i = propertyKeys.length - 1; i >= 0; i--) {\n            if (propertyKeys[i] === '*') {\n              propertyKeys.splice(i, 1, ...unnamedKeys);\n            }\n          }\n        }\n        propertyKeys\n          .filter(key => hasOwn(schema.properties, key) ||\n            hasOwn(schema, 'additionalProperties')\n          )\n          .forEach(key => controls[key] = buildFormGroupTemplate(\n            jsf, JsonPointer.get(nodeValue, [<string>key]), setValues,\n            schemaPointer + (hasOwn(schema.properties, key) ?\n              '/properties/' + key : '/additionalProperties'\n            ),\n            dataPointer + '/' + key,\n            templatePointer + '/controls/' + key\n          ));\n        jsf.formOptions.fieldsRequired = setRequiredFields(schema, controls);\n      }\n      return { controlType, controls, validators };\n\n    case 'FormArray':\n      controls = [];\n      const minItems =\n        Math.max(schema.minItems || 0, nodeOptions.get('minItems') || 0);\n      const maxItems =\n        Math.min(schema.maxItems || 1000, nodeOptions.get('maxItems') || 1000);\n      let additionalItemsPointer: string = null;\n      if (isArray(schema.items)) { // 'items' is an array = tuple items\n        const tupleItems = nodeOptions.get('tupleItems') ||\n          (isArray(schema.items) ? Math.min(schema.items.length, maxItems) : 0);\n        for (let i = 0; i < tupleItems; i++) {\n          if (i < minItems) {\n            controls.push(buildFormGroupTemplate(\n              jsf, isArray(nodeValue) ? nodeValue[i] : nodeValue, setValues,\n              schemaPointer + '/items/' + i,\n              dataPointer + '/' + i,\n              templatePointer + '/controls/' + i\n            ));\n          } else {\n            const schemaRefPointer = removeRecursiveReferences(\n              schemaPointer + '/items/' + i, jsf.schemaRecursiveRefMap\n            );\n            const itemRefPointer = removeRecursiveReferences(\n              shortDataPointer + '/' + i, jsf.dataRecursiveRefMap, jsf.arrayMap\n            );\n            const itemRecursive = itemRefPointer !== shortDataPointer + '/' + i;\n            if (!hasOwn(jsf.templateRefLibrary, itemRefPointer)) {\n              jsf.templateRefLibrary[itemRefPointer] = null;\n              jsf.templateRefLibrary[itemRefPointer] = buildFormGroupTemplate(\n                jsf, null, setValues,\n                schemaRefPointer,\n                itemRefPointer,\n                templatePointer + '/controls/' + i\n              );\n            }\n            controls.push(\n              isArray(nodeValue) ?\n                buildFormGroupTemplate(\n                  jsf, nodeValue[i], setValues,\n                  schemaPointer + '/items/' + i,\n                  dataPointer + '/' + i,\n                  templatePointer + '/controls/' + i\n                ) :\n              itemRecursive ?\n                null : _.cloneDeep(jsf.templateRefLibrary[itemRefPointer])\n            );\n          }\n        }\n\n        // If 'additionalItems' is an object = additional list items (after tuple items)\n        if (schema.items.length < maxItems && isObject(schema.additionalItems)) {\n          additionalItemsPointer = schemaPointer + '/additionalItems';\n        }\n\n      // If 'items' is an object = list items only (no tuple items)\n      } else {\n        additionalItemsPointer = schemaPointer + '/items';\n      }\n\n      if (additionalItemsPointer) {\n        const schemaRefPointer = removeRecursiveReferences(\n          additionalItemsPointer, jsf.schemaRecursiveRefMap\n        );\n        const itemRefPointer = removeRecursiveReferences(\n          shortDataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\n        );\n        const itemRecursive = itemRefPointer !== shortDataPointer + '/-';\n        if (!hasOwn(jsf.templateRefLibrary, itemRefPointer)) {\n          jsf.templateRefLibrary[itemRefPointer] = null;\n          jsf.templateRefLibrary[itemRefPointer] = buildFormGroupTemplate(\n            jsf, null, setValues,\n            schemaRefPointer,\n            itemRefPointer,\n            templatePointer + '/controls/-'\n          );\n        }\n        // const itemOptions = jsf.dataMap.get(itemRefPointer) || new Map();\n        const itemOptions = nodeOptions;\n        if (!itemRecursive || hasOwn(validators, 'required')) {\n          const arrayLength = Math.min(Math.max(\n            itemRecursive ? 0 :\n              (itemOptions.get('tupleItems') + itemOptions.get('listItems')) || 0,\n            isArray(nodeValue) ? nodeValue.length : 0\n          ), maxItems);\n          for (let i = controls.length; i < arrayLength; i++) {\n            controls.push(\n              isArray(nodeValue) ?\n                buildFormGroupTemplate(\n                  jsf, nodeValue[i], setValues,\n                  schemaRefPointer,\n                  dataPointer + '/-',\n                  templatePointer + '/controls/-'\n                ) :\n                itemRecursive ?\n                  null : _.cloneDeep(jsf.templateRefLibrary[itemRefPointer])\n            );\n          }\n        }\n      }\n      return { controlType, controls, validators };\n\n    case '$ref':\n      const schemaRef = JsonPointer.compile(schema.$ref);\n      const dataRef = JsonPointer.toDataPointer(schemaRef, schema);\n      const refPointer = removeRecursiveReferences(\n        dataRef, jsf.dataRecursiveRefMap, jsf.arrayMap\n      );\n      if (refPointer && !hasOwn(jsf.templateRefLibrary, refPointer)) {\n        // Set to null first to prevent recursive reference from causing endless loop\n        jsf.templateRefLibrary[refPointer] = null;\n        const newTemplate = buildFormGroupTemplate(jsf, setValues, setValues, schemaRef);\n        if (newTemplate) {\n          jsf.templateRefLibrary[refPointer] = newTemplate;\n        } else {\n          delete jsf.templateRefLibrary[refPointer];\n        }\n      }\n      return null;\n\n    case 'FormControl':\n      const value = {\n        value: setValues && isPrimitive(nodeValue) ? nodeValue : null,\n        disabled: nodeOptions.get('disabled') || false\n      };\n      return { controlType, value, validators };\n\n    default:\n      return null;\n  }\n}\n\n/**\n * 'buildFormGroup' function\n *\n * // {any} template -\n * // {AbstractControl}\n*/\nexport function buildFormGroup(template: any): AbstractControl {\n  const validatorFns: ValidatorFn[] = [];\n  let validatorFn: ValidatorFn = null;\n  if (hasOwn(template, 'validators')) {\n    forEach(template.validators, (parameters, validator) => {\n      if (typeof JsonValidators[validator] === 'function') {\n        validatorFns.push(JsonValidators[validator].apply(null, parameters));\n      }\n    });\n    if (validatorFns.length &&\n      inArray(template.controlType, ['FormGroup', 'FormArray'])\n    ) {\n      validatorFn = validatorFns.length > 1 ?\n        JsonValidators.compose(validatorFns) : validatorFns[0];\n    }\n  }\n  if (hasOwn(template, 'controlType')) {\n    switch (template.controlType) {\n      case 'FormGroup':\n        const groupControls: { [key: string]: AbstractControl } = {};\n        forEach(template.controls, (controls, key) => {\n          const newControl: AbstractControl = buildFormGroup(controls);\n          if (newControl) { groupControls[key] = newControl; }\n        });\n        return new FormGroup(groupControls, validatorFn);\n      case 'FormArray':\n        return new FormArray(_.filter(_.map(template.controls,\n          controls => buildFormGroup(controls)\n        )), validatorFn);\n      case 'FormControl':\n        return new FormControl(template.value, validatorFns);\n    }\n  }\n  return null;\n}\n\n/**\n * 'mergeValues' function\n *\n * //  {any[]} ...valuesToMerge - Multiple values to merge\n * // {any} - Merged values\n */\nexport function mergeValues(...valuesToMerge) {\n  let mergedValues: any = null;\n  for (const currentValue of valuesToMerge) {\n    if (!isEmpty(currentValue)) {\n      if (typeof currentValue === 'object' &&\n        (isEmpty(mergedValues) || typeof mergedValues !== 'object')\n      ) {\n        if (isArray(currentValue)) {\n          mergedValues = [ ...currentValue ];\n        } else if (isObject(currentValue)) {\n          mergedValues = { ...currentValue };\n        }\n      } else if (typeof currentValue !== 'object') {\n        mergedValues = currentValue;\n      } else if (isObject(mergedValues) && isObject(currentValue)) {\n        Object.assign(mergedValues, currentValue);\n      } else if (isObject(mergedValues) && isArray(currentValue)) {\n        const newValues = [];\n        for (const value of currentValue) {\n          newValues.push(mergeValues(mergedValues, value));\n        }\n        mergedValues = newValues;\n      } else if (isArray(mergedValues) && isObject(currentValue)) {\n        const newValues = [];\n        for (const value of mergedValues) {\n          newValues.push(mergeValues(value, currentValue));\n        }\n        mergedValues = newValues;\n      } else if (isArray(mergedValues) && isArray(currentValue)) {\n        const newValues = [];\n        for (let i = 0; i < Math.max(mergedValues.length, currentValue.length); i++) {\n          if (i < mergedValues.length && i < currentValue.length) {\n            newValues.push(mergeValues(mergedValues[i], currentValue[i]));\n          } else if (i < mergedValues.length) {\n            newValues.push(mergedValues[i]);\n          } else if (i < currentValue.length) {\n            newValues.push(currentValue[i]);\n          }\n        }\n        mergedValues = newValues;\n      }\n    }\n  }\n  return mergedValues;\n}\n\n/**\n * 'setRequiredFields' function\n *\n * // {schema} schema - JSON Schema\n * // {object} formControlTemplate - Form Control Template object\n * // {boolean} - true if any fields have been set to required, false if not\n */\nexport function setRequiredFields(schema: any, formControlTemplate: any): boolean {\n  let fieldsRequired = false;\n  if (hasOwn(schema, 'required') && !isEmpty(schema.required)) {\n    fieldsRequired = true;\n    let requiredArray = isArray(schema.required) ? schema.required : [schema.required];\n    requiredArray = forEach(requiredArray,\n      key => JsonPointer.set(formControlTemplate, '/' + key + '/validators/required', [])\n    );\n  }\n  return fieldsRequired;\n\n  // TODO: Add support for patternProperties\n  // https://spacetelescope.github.io/understanding-json-schema/reference/object.html#pattern-properties\n}\n\n/**\n * 'formatFormData' function\n *\n * // {any} formData - Angular FormGroup data object\n * // {Map<string, any>} dataMap -\n * // {Map<string, string>} recursiveRefMap -\n * // {Map<string, number>} arrayMap -\n * // {boolean = false} fixErrors - if TRUE, tries to fix data\n * // {any} - formatted data object\n */\nexport function formatFormData(\n  formData: any, dataMap: Map<string, any>,\n  recursiveRefMap: Map<string, string>, arrayMap: Map<string, number>,\n  returnEmptyFields = false, fixErrors = false\n): any {\n  if (formData === null || typeof formData !== 'object') { return formData; }\n  const formattedData = isArray(formData) ? [] : {};\n  JsonPointer.forEachDeep(formData, (value, dataPointer) => {\n\n    // If returnEmptyFields === true,\n    // add empty arrays and objects to all allowed keys\n    if (returnEmptyFields && isArray(value)) {\n      JsonPointer.set(formattedData, dataPointer, []);\n    } else if (returnEmptyFields && isObject(value) && !isDate(value)) {\n      JsonPointer.set(formattedData, dataPointer, {});\n    } else {\n      const genericPointer =\n        JsonPointer.has(dataMap, [dataPointer, 'schemaType']) ? dataPointer :\n          removeRecursiveReferences(dataPointer, recursiveRefMap, arrayMap);\n      if (JsonPointer.has(dataMap, [genericPointer, 'schemaType'])) {\n        const schemaType: SchemaPrimitiveType | SchemaPrimitiveType[] =\n          dataMap.get(genericPointer).get('schemaType');\n        if (schemaType === 'null') {\n          JsonPointer.set(formattedData, dataPointer, null);\n        } else if ((hasValue(value) || returnEmptyFields) &&\n          inArray(schemaType, ['string', 'integer', 'number', 'boolean'])\n        ) {\n          const newValue = (fixErrors || (value === null && returnEmptyFields)) ?\n            toSchemaType(value, schemaType) : toJavaScriptType(value, schemaType);\n          if (isDefined(newValue) || returnEmptyFields) {\n            JsonPointer.set(formattedData, dataPointer, newValue);\n          }\n\n        // If returnEmptyFields === false,\n        // only add empty arrays and objects to required keys\n        } else if (schemaType === 'object' && !returnEmptyFields) {\n          (dataMap.get(genericPointer).get('required') || []).forEach(key => {\n            const keySchemaType =\n              dataMap.get(`${genericPointer}/${key}`).get('schemaType');\n            if (keySchemaType === 'array') {\n              JsonPointer.set(formattedData, `${dataPointer}/${key}`, []);\n            } else if (keySchemaType === 'object') {\n              JsonPointer.set(formattedData, `${dataPointer}/${key}`, {});\n            }\n          });\n        }\n\n        // Finish incomplete 'date-time' entries\n        if (dataMap.get(genericPointer).get('schemaFormat') === 'date-time') {\n          // \"2000-03-14T01:59:26.535\" -> \"2000-03-14T01:59:26.535Z\" (add \"Z\")\n          if (/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?$/i.test(value)) {\n            JsonPointer.set(formattedData, dataPointer, `${value}Z`);\n          // \"2000-03-14T01:59\" -> \"2000-03-14T01:59:00Z\" (add \":00Z\")\n          } else if (/^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s][0-2]\\d:[0-5]\\d$/i.test(value)) {\n            JsonPointer.set(formattedData, dataPointer, `${value}:00Z`);\n          // \"2000-03-14\" -> \"2000-03-14T00:00:00Z\" (add \"T00:00:00Z\")\n          } else if (fixErrors && /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/i.test(value)) {\n            JsonPointer.set(formattedData, dataPointer, `${value}:00:00:00Z`);\n          }\n        }\n      } else if (typeof value !== 'object' || isDate(value) ||\n        (value === null && returnEmptyFields)\n      ) {\n        console.error('formatFormData error: ' +\n          `Schema type not found for form value at ${genericPointer}`);\n        console.error('dataMap', dataMap);\n        console.error('recursiveRefMap', recursiveRefMap);\n        console.error('genericPointer', genericPointer);\n      }\n    }\n  });\n  return formattedData;\n}\n\n/**\n * 'getControl' function\n *\n * Uses a JSON Pointer for a data object to retrieve a control from\n * an Angular formGroup or formGroup template. (Note: though a formGroup\n * template is much simpler, its basic structure is idential to a formGroup).\n *\n * If the optional third parameter 'returnGroup' is set to TRUE, the group\n * containing the control is returned, rather than the control itself.\n *\n * // {FormGroup} formGroup - Angular FormGroup to get value from\n * // {Pointer} dataPointer - JSON Pointer (string or array)\n * // {boolean = false} returnGroup - If true, return group containing control\n * // {group} - Located value (or null, if no control found)\n */\nexport function getControl(\n  formGroup: any, dataPointer: Pointer, returnGroup = false\n): any {\n  if (!isObject(formGroup) || !JsonPointer.isJsonPointer(dataPointer)) {\n    if (!JsonPointer.isJsonPointer(dataPointer)) {\n      // If dataPointer input is not a valid JSON pointer, check to\n      // see if it is instead a valid object path, using dot notaion\n      if (typeof dataPointer === 'string') {\n        const formControl = formGroup.get(dataPointer);\n        if (formControl) { return formControl; }\n      }\n      console.error(`getControl error: Invalid JSON Pointer: ${dataPointer}`);\n    }\n    if (!isObject(formGroup)) {\n      console.error(`getControl error: Invalid formGroup: ${formGroup}`);\n    }\n    return null;\n  }\n  let dataPointerArray = JsonPointer.parse(dataPointer);\n  if (returnGroup) { dataPointerArray = dataPointerArray.slice(0, -1); }\n\n  // If formGroup input is a real formGroup (not a formGroup template)\n  // try using formGroup.get() to return the control\n  if (typeof formGroup.get === 'function' &&\n    dataPointerArray.every(key => key.indexOf('.') === -1)\n  ) {\n    const formControl = formGroup.get(dataPointerArray.join('.'));\n    if (formControl) { return formControl; }\n  }\n\n  // If formGroup input is a formGroup template,\n  // or formGroup.get() failed to return the control,\n  // search the formGroup object for dataPointer's control\n  let subGroup = formGroup;\n  for (const key of dataPointerArray) {\n    if (hasOwn(subGroup, 'controls')) { subGroup = subGroup.controls; }\n    if (isArray(subGroup) && (key === '-')) {\n      subGroup = subGroup[subGroup.length - 1];\n    } else if (hasOwn(subGroup, key)) {\n      subGroup = subGroup[key];\n    } else {\n      console.error(`getControl error: Unable to find \"${key}\" item in FormGroup.`);\n      console.error(dataPointer);\n      console.error(formGroup);\n      return;\n    }\n  }\n  return subGroup;\n}\n","import { BehaviorSubject } from 'rxjs';\n\nimport * as _ from 'lodash';\n\nimport { TitleMapItem } from '../json-schema-form.service';\nimport {\n  inArray, isArray, isEmpty, isNumber, isObject, isDefined, isString\n} from './validator.functions';\nimport { copy, fixTitle, forEach, hasOwn } from './utility.functions';\nimport { Pointer, JsonPointer } from './jsonpointer.functions';\nimport {\n  getFromSchema, getInputType, getSubSchema, checkInlineType, isInputRequired,\n  removeRecursiveReferences, updateInputOptions\n} from './json-schema.functions';\nimport { buildFormGroupTemplate, getControl } from './form-group.functions';\n\n/**\n * Layout function library:\n *\n * buildLayout:            Builds a complete layout from an input layout and schema\n *\n * buildLayoutFromSchema:  Builds a complete layout entirely from an input schema\n *\n * mapLayout:\n *\n * getLayoutNode:\n *\n * buildTitleMap:\n */\n\n/**\n * 'buildLayout' function\n *\n * //   jsf\n * //   widgetLibrary\n * // \n */\nexport function buildLayout(jsf, widgetLibrary) {\n  let hasSubmitButton = !JsonPointer.get(jsf, '/formOptions/addSubmit');\n  const formLayout = mapLayout(jsf.layout, (layoutItem, index, layoutPointer) => {\n    const newNode: any = {\n      _id: _.uniqueId(),\n      options: {},\n    };\n    if (isObject(layoutItem)) {\n      Object.assign(newNode, layoutItem);\n      Object.keys(newNode)\n        .filter(option => !inArray(option, [\n          '_id', '$ref', 'arrayItem', 'arrayItemType', 'dataPointer', 'dataType',\n          'items', 'key', 'name', 'options', 'recursiveReference', 'type', 'widget'\n        ]))\n        .forEach(option => {\n          newNode.options[option] = newNode[option];\n          delete newNode[option];\n        });\n      if (!hasOwn(newNode, 'type') && isString(newNode.widget)) {\n        newNode.type = newNode.widget;\n        delete newNode.widget;\n      }\n      if (!hasOwn(newNode.options, 'title')) {\n        if (hasOwn(newNode.options, 'legend')) {\n          newNode.options.title = newNode.options.legend;\n          delete newNode.options.legend;\n        }\n      }\n      if (!hasOwn(newNode.options, 'validationMessages')) {\n        if (hasOwn(newNode.options, 'errorMessages')) {\n          newNode.options.validationMessages = newNode.options.errorMessages;\n          delete newNode.options.errorMessages;\n\n        // Convert Angular Schema Form (AngularJS) 'validationMessage' to\n        // Angular JSON Schema Form 'validationMessages'\n        // TV4 codes from https://github.com/geraintluff/tv4/blob/master/source/api.js\n        } else if (hasOwn(newNode.options, 'validationMessage')) {\n          if (typeof newNode.options.validationMessage === 'string') {\n            newNode.options.validationMessages = newNode.options.validationMessage;\n          } else {\n            newNode.options.validationMessages = {};\n            Object.keys(newNode.options.validationMessage).forEach(key => {\n              const code = key + '';\n              const newKey =\n                code ===  '0'  ? 'type' :\n                code ===  '1'  ? 'enum' :\n                code === '100' ? 'multipleOf' :\n                code === '101' ? 'minimum' :\n                code === '102' ? 'exclusiveMinimum' :\n                code === '103' ? 'maximum' :\n                code === '104' ? 'exclusiveMaximum' :\n                code === '200' ? 'minLength' :\n                code === '201' ? 'maxLength' :\n                code === '202' ? 'pattern' :\n                code === '300' ? 'minProperties' :\n                code === '301' ? 'maxProperties' :\n                code === '302' ? 'required' :\n                code === '304' ? 'dependencies' :\n                code === '400' ? 'minItems' :\n                code === '401' ? 'maxItems' :\n                code === '402' ? 'uniqueItems' :\n                code === '500' ? 'format' : code + '';\n              newNode.options.validationMessages[newKey] = newNode.options.validationMessage[key];\n            });\n          }\n          delete newNode.options.validationMessage;\n        }\n      }\n    } else if (JsonPointer.isJsonPointer(layoutItem)) {\n      newNode.dataPointer = layoutItem;\n    } else if (isString(layoutItem)) {\n      newNode.key = layoutItem;\n    } else {\n      console.error('buildLayout error: Form layout element not recognized:');\n      console.error(layoutItem);\n      return null;\n    }\n    let nodeSchema: any = null;\n\n    // If newNode does not have a dataPointer, try to find an equivalent\n    if (!hasOwn(newNode, 'dataPointer')) {\n\n      // If newNode has a key, change it to a dataPointer\n      if (hasOwn(newNode, 'key')) {\n        newNode.dataPointer = newNode.key === '*' ? newNode.key :\n          JsonPointer.compile(JsonPointer.parseObjectPath(newNode.key), '-');\n        delete newNode.key;\n\n      // If newNode is an array, search for dataPointer in child nodes\n      } else if (hasOwn(newNode, 'type') && newNode.type.slice(-5) === 'array') {\n        const findDataPointer = (items) => {\n          if (items === null || typeof items !== 'object') { return; }\n          if (hasOwn(items, 'dataPointer')) { return items.dataPointer; }\n          if (isArray(items.items)) {\n            for (let item of items.items) {\n              if (hasOwn(item, 'dataPointer') && item.dataPointer.indexOf('/-') !== -1) {\n                return item.dataPointer;\n              }\n              if (hasOwn(item, 'items')) {\n                const searchItem = findDataPointer(item);\n                if (searchItem) { return searchItem; }\n              }\n            }\n          }\n        };\n        const childDataPointer = findDataPointer(newNode);\n        if (childDataPointer) {\n          newNode.dataPointer =\n            childDataPointer.slice(0, childDataPointer.lastIndexOf('/-'));\n        }\n      }\n    }\n\n    if (hasOwn(newNode, 'dataPointer')) {\n      if (newNode.dataPointer === '*') {\n        return buildLayoutFromSchema(jsf, widgetLibrary, jsf.formValues);\n      }\n      const nodeValue =\n        JsonPointer.get(jsf.formValues, newNode.dataPointer.replace(/\\/-/g, '/1'));\n\n      // TODO: Create function getFormValues(jsf, dataPointer, forRefLibrary)\n      // check formOptions.setSchemaDefaults and formOptions.setLayoutDefaults\n      // then set apropriate values from initialVaues, schema, or layout\n\n      newNode.dataPointer =\n        JsonPointer.toGenericPointer(newNode.dataPointer, jsf.arrayMap);\n      const LastKey = JsonPointer.toKey(newNode.dataPointer);\n      if (!newNode.name && isString(LastKey) && LastKey !== '-') {\n        newNode.name = LastKey;\n      }\n      const shortDataPointer = removeRecursiveReferences(\n        newNode.dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap\n      );\n      const recursive = !shortDataPointer.length ||\n        shortDataPointer !== newNode.dataPointer;\n      let schemaPointer: string;\n      if (!jsf.dataMap.has(shortDataPointer)) {\n        jsf.dataMap.set(shortDataPointer, new Map());\n      }\n      const nodeDataMap = jsf.dataMap.get(shortDataPointer);\n      if (nodeDataMap.has('schemaPointer')) {\n        schemaPointer = nodeDataMap.get('schemaPointer');\n      } else {\n        schemaPointer = JsonPointer.toSchemaPointer(shortDataPointer, jsf.schema);\n        nodeDataMap.set('schemaPointer', schemaPointer);\n      }\n      nodeDataMap.set('disabled', !!newNode.options.disabled);\n      nodeSchema = JsonPointer.get(jsf.schema, schemaPointer);\n      if (nodeSchema) {\n        if (!hasOwn(newNode, 'type')) {\n          newNode.type = getInputType(nodeSchema, newNode);\n        } else if (!widgetLibrary.hasWidget(newNode.type)) {\n          const oldWidgetType = newNode.type;\n          newNode.type = getInputType(nodeSchema, newNode);\n          console.error(`error: widget type \"${oldWidgetType}\" ` +\n            `not found in library. Replacing with \"${newNode.type}\".`);\n        } else {\n          newNode.type = checkInlineType(newNode.type, nodeSchema, newNode);\n        }\n        if (nodeSchema.type === 'object' && isArray(nodeSchema.required)) {\n          nodeDataMap.set('required', nodeSchema.required);\n        }\n        newNode.dataType =\n          nodeSchema.type || (hasOwn(nodeSchema, '$ref') ? '$ref' : null);\n        updateInputOptions(newNode, nodeSchema, jsf);\n\n        // Present checkboxes as single control, rather than array\n        if (newNode.type === 'checkboxes' && hasOwn(nodeSchema, 'items')) {\n          updateInputOptions(newNode, nodeSchema.items, jsf);\n        } else if (newNode.dataType === 'array') {\n          newNode.options.maxItems = Math.min(\n            nodeSchema.maxItems || 1000, newNode.options.maxItems || 1000\n          );\n          newNode.options.minItems = Math.max(\n            nodeSchema.minItems || 0, newNode.options.minItems || 0\n          );\n          newNode.options.listItems = Math.max(\n            newNode.options.listItems || 0, isArray(nodeValue) ? nodeValue.length : 0\n          );\n          newNode.options.tupleItems =\n            isArray(nodeSchema.items) ? nodeSchema.items.length : 0;\n          if (newNode.options.maxItems < newNode.options.tupleItems) {\n            newNode.options.tupleItems = newNode.options.maxItems;\n            newNode.options.listItems = 0;\n          } else if (newNode.options.maxItems <\n            newNode.options.tupleItems + newNode.options.listItems\n          ) {\n            newNode.options.listItems =\n              newNode.options.maxItems - newNode.options.tupleItems;\n          } else if (newNode.options.minItems >\n            newNode.options.tupleItems + newNode.options.listItems\n          ) {\n            newNode.options.listItems =\n              newNode.options.minItems - newNode.options.tupleItems;\n          }\n          if (!nodeDataMap.has('maxItems')) {\n            nodeDataMap.set('maxItems', newNode.options.maxItems);\n            nodeDataMap.set('minItems', newNode.options.minItems);\n            nodeDataMap.set('tupleItems', newNode.options.tupleItems);\n            nodeDataMap.set('listItems', newNode.options.listItems);\n          }\n          if (!jsf.arrayMap.has(shortDataPointer)) {\n            jsf.arrayMap.set(shortDataPointer, newNode.options.tupleItems)\n          }\n        }\n        if (isInputRequired(jsf.schema, schemaPointer)) {\n          newNode.options.required = true;\n          jsf.fieldsRequired = true;\n        }\n      } else {\n        // TODO: create item in FormGroup model from layout key (?)\n        updateInputOptions(newNode, {}, jsf);\n      }\n\n      if (!newNode.options.title && !/^\\d+$/.test(newNode.name)) {\n        newNode.options.title = fixTitle(newNode.name);\n      }\n\n      if (hasOwn(newNode.options, 'copyValueTo')) {\n        if (typeof newNode.options.copyValueTo === 'string') {\n          newNode.options.copyValueTo = [newNode.options.copyValueTo];\n        }\n        if (isArray(newNode.options.copyValueTo)) {\n          newNode.options.copyValueTo = newNode.options.copyValueTo.map(item =>\n            JsonPointer.compile(JsonPointer.parseObjectPath(item), '-')\n          );\n        }\n      }\n\n      newNode.widget = widgetLibrary.getWidget(newNode.type);\n      nodeDataMap.set('inputType', newNode.type);\n      nodeDataMap.set('widget', newNode.widget);\n\n      if (newNode.dataType === 'array' &&\n        (hasOwn(newNode, 'items') || hasOwn(newNode, 'additionalItems'))\n      ) {\n        let itemRefPointer = removeRecursiveReferences(\n          newNode.dataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\n        );\n        if (!jsf.dataMap.has(itemRefPointer)) {\n          jsf.dataMap.set(itemRefPointer, new Map());\n        }\n        jsf.dataMap.get(itemRefPointer).set('inputType', 'section');\n\n        // Fix insufficiently nested array item groups\n        if (newNode.items.length > 1) {\n          let arrayItemGroup = [];\n          let arrayItemGroupTemplate = [];\n          let newIndex = 0;\n          for (let i = newNode.items.length - 1; i >= 0; i--) {\n            let subItem = newNode.items[i];\n            if (hasOwn(subItem, 'dataPointer') &&\n              subItem.dataPointer.slice(0, itemRefPointer.length) === itemRefPointer\n            ) {\n              let arrayItem = newNode.items.splice(i, 1)[0];\n              arrayItem.dataPointer = newNode.dataPointer + '/-' +\n                arrayItem.dataPointer.slice(itemRefPointer.length);\n              arrayItemGroup.unshift(arrayItem);\n              newIndex++;\n            } else {\n              subItem.arrayItem = true;\n              // TODO: Check schema to get arrayItemType and removable\n              subItem.arrayItemType = 'list';\n              subItem.removable = newNode.options.removable !== false;\n            }\n          }\n          if (arrayItemGroup.length) {\n            newNode.items.push({\n              _id: _.uniqueId(),\n              arrayItem: true,\n              arrayItemType: newNode.options.tupleItems > newNode.items.length ?\n                'tuple' : 'list',\n              items: arrayItemGroup,\n              options: { removable: newNode.options.removable !== false, },\n              dataPointer: newNode.dataPointer + '/-',\n              type: 'section',\n              widget: widgetLibrary.getWidget('section'),\n            });\n          }\n        } else {\n          // TODO: Fix to hndle multiple items\n          newNode.items[0].arrayItem = true;\n          if (!newNode.items[0].dataPointer) {\n            newNode.items[0].dataPointer =\n              JsonPointer.toGenericPointer(itemRefPointer, jsf.arrayMap);\n          }\n          if (!JsonPointer.has(newNode, '/items/0/options/removable')) {\n            newNode.items[0].options.removable = true;\n          }\n          if (newNode.options.orderable === false) {\n            newNode.items[0].options.orderable = false;\n          }\n          newNode.items[0].arrayItemType =\n            newNode.options.tupleItems ? 'tuple' : 'list';\n        }\n\n        if (isArray(newNode.items)) {\n          const arrayListItems =\n            newNode.items.filter(item => item.type !== '$ref').length -\n              newNode.options.tupleItems;\n          if (arrayListItems > newNode.options.listItems) {\n            newNode.options.listItems = arrayListItems;\n            nodeDataMap.set('listItems', arrayListItems);\n          }\n        }\n\n        if (!hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\n          jsf.layoutRefLibrary[itemRefPointer] =\n            _.cloneDeep(newNode.items[newNode.items.length - 1]);\n          if (recursive) {\n            jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\n          }\n          forEach(jsf.layoutRefLibrary[itemRefPointer], (item, key) => {\n            if (hasOwn(item, '_id')) { item._id = null; }\n            if (recursive) {\n              if (hasOwn(item, 'dataPointer')) {\n                item.dataPointer = item.dataPointer.slice(itemRefPointer.length);\n              }\n            }\n          }, 'top-down');\n        }\n\n        // Add any additional default items\n        if (!newNode.recursiveReference || newNode.options.required) {\n          const arrayLength = Math.min(Math.max(\n            newNode.options.tupleItems + newNode.options.listItems,\n            isArray(nodeValue) ? nodeValue.length : 0\n          ), newNode.options.maxItems);\n          for (let i = newNode.items.length; i < arrayLength; i++) {\n            newNode.items.push(getLayoutNode({\n              $ref: itemRefPointer,\n              dataPointer: newNode.dataPointer,\n              recursiveReference: newNode.recursiveReference,\n            }, jsf, widgetLibrary));\n          }\n        }\n\n        // If needed, add button to add items to array\n        if (newNode.options.addable !== false &&\n          newNode.options.minItems < newNode.options.maxItems &&\n          (newNode.items[newNode.items.length - 1] || {}).type !== '$ref'\n        ) {\n          let buttonText = 'Add';\n          if (newNode.options.title) {\n            if (/^add\\b/i.test(newNode.options.title)) {\n              buttonText = newNode.options.title;\n            } else {\n              buttonText += ' ' + newNode.options.title;\n            }\n          } else if (newNode.name && !/^\\d+$/.test(newNode.name)) {\n            if (/^add\\b/i.test(newNode.name)) {\n              buttonText += ' ' + fixTitle(newNode.name);\n            } else {\n              buttonText = fixTitle(newNode.name);\n            }\n\n          // If newNode doesn't have a title, look for title of parent array item\n          } else {\n            const parentSchema =\n              getFromSchema(jsf.schema, newNode.dataPointer, 'parentSchema');\n            if (hasOwn(parentSchema, 'title')) {\n              buttonText += ' to ' + parentSchema.title;\n            } else {\n              const pointerArray = JsonPointer.parse(newNode.dataPointer);\n              buttonText += ' to ' + fixTitle(pointerArray[pointerArray.length - 2]);\n            }\n          }\n          newNode.items.push({\n            _id: _.uniqueId(),\n            arrayItem: true,\n            arrayItemType: 'list',\n            dataPointer: newNode.dataPointer + '/-',\n            options: {\n              listItems: newNode.options.listItems,\n              maxItems: newNode.options.maxItems,\n              minItems: newNode.options.minItems,\n              removable: false,\n              title: buttonText,\n              tupleItems: newNode.options.tupleItems,\n            },\n            recursiveReference: recursive,\n            type: '$ref',\n            widget: widgetLibrary.getWidget('$ref'),\n            $ref: itemRefPointer,\n          });\n          if (isString(JsonPointer.get(newNode, '/style/add'))) {\n            newNode.items[newNode.items.length - 1].options.fieldStyle =\n              newNode.style.add;\n            delete newNode.style.add;\n            if (isEmpty(newNode.style)) { delete newNode.style; }\n          }\n        }\n      } else {\n        newNode.arrayItem = false;\n      }\n    } else if (hasOwn(newNode, 'type') || hasOwn(newNode, 'items')) {\n      const parentType: string =\n        JsonPointer.get(jsf.layout, layoutPointer, 0, -2).type;\n      if (!hasOwn(newNode, 'type')) {\n        newNode.type =\n          inArray(parentType, ['tabs', 'tabarray']) ? 'tab' : 'array';\n      }\n      newNode.arrayItem = parentType === 'array';\n      newNode.widget = widgetLibrary.getWidget(newNode.type);\n      updateInputOptions(newNode, {}, jsf);\n    }\n    if (newNode.type === 'submit') { hasSubmitButton = true; }\n    return newNode;\n  });\n  if (jsf.hasRootReference) {\n    const fullLayout = _.cloneDeep(formLayout);\n    if (fullLayout[fullLayout.length - 1].type === 'submit') { fullLayout.pop(); }\n    jsf.layoutRefLibrary[''] = {\n      _id: null,\n      dataPointer: '',\n      dataType: 'object',\n      items: fullLayout,\n      name: '',\n      options: _.cloneDeep(jsf.formOptions.defautWidgetOptions),\n      recursiveReference: true,\n      required: false,\n      type: 'section',\n      widget: widgetLibrary.getWidget('section'),\n    };\n  }\n  if (!hasSubmitButton) {\n    formLayout.push({\n      _id: _.uniqueId(),\n      options: { title: 'Submit' },\n      type: 'submit',\n      widget: widgetLibrary.getWidget('submit'),\n    });\n  }\n  return formLayout;\n}\n\n/**\n * 'buildLayoutFromSchema' function\n *\n * //   jsf -\n * //   widgetLibrary -\n * //   nodeValue -\n * //  { string = '' } schemaPointer -\n * //  { string = '' } dataPointer -\n * //  { boolean = false } arrayItem -\n * //  { string = null } arrayItemType -\n * //  { boolean = null } removable -\n * //  { boolean = false } forRefLibrary -\n * //  { string = '' } dataPointerPrefix -\n * // \n */\nexport function buildLayoutFromSchema(\n  jsf, widgetLibrary, nodeValue = null, schemaPointer = '',\n  dataPointer = '', arrayItem = false, arrayItemType: string = null,\n  removable: boolean = null, forRefLibrary = false, dataPointerPrefix = ''\n) {\n  const schema = JsonPointer.get(jsf.schema, schemaPointer);\n  if (!hasOwn(schema, 'type') && !hasOwn(schema, '$ref') &&\n    !hasOwn(schema, 'x-schema-form')\n  ) { return null; }\n  const newNodeType: string = getInputType(schema);\n  if (!isDefined(nodeValue) && (\n    jsf.formOptions.setSchemaDefaults === true ||\n    (jsf.formOptions.setSchemaDefaults === 'auto' && isEmpty(jsf.formValues))\n  )) {\n    nodeValue = JsonPointer.get(jsf.schema, schemaPointer + '/default');\n  }\n  let newNode: any = {\n    _id: forRefLibrary ? null : _.uniqueId(),\n    arrayItem: arrayItem,\n    dataPointer: JsonPointer.toGenericPointer(dataPointer, jsf.arrayMap),\n    dataType: schema.type || (hasOwn(schema, '$ref') ? '$ref' : null),\n    options: {},\n    required: isInputRequired(jsf.schema, schemaPointer),\n    type: newNodeType,\n    widget: widgetLibrary.getWidget(newNodeType),\n  };\n  const lastDataKey = JsonPointer.toKey(newNode.dataPointer);\n  if (lastDataKey !== '-') { newNode.name = lastDataKey; }\n  if (newNode.arrayItem) {\n    newNode.arrayItemType = arrayItemType;\n    newNode.options.removable = removable !== false;\n  }\n  const shortDataPointer = removeRecursiveReferences(\n    dataPointerPrefix + dataPointer, jsf.dataRecursiveRefMap, jsf.arrayMap\n  );\n  const recursive = !shortDataPointer.length ||\n    shortDataPointer !== dataPointerPrefix + dataPointer;\n  if (!jsf.dataMap.has(shortDataPointer)) {\n    jsf.dataMap.set(shortDataPointer, new Map());\n  }\n  const nodeDataMap = jsf.dataMap.get(shortDataPointer);\n  if (!nodeDataMap.has('inputType')) {\n    nodeDataMap.set('schemaPointer', schemaPointer);\n    nodeDataMap.set('inputType', newNode.type);\n    nodeDataMap.set('widget', newNode.widget);\n    nodeDataMap.set('disabled', !!newNode.options.disabled);\n  }\n  updateInputOptions(newNode, schema, jsf);\n  if (!newNode.options.title && newNode.name && !/^\\d+$/.test(newNode.name)) {\n    newNode.options.title = fixTitle(newNode.name);\n  }\n\n  if (newNode.dataType === 'object') {\n    if (isArray(schema.required) && !nodeDataMap.has('required')) {\n      nodeDataMap.set('required', schema.required);\n    }\n    if (isObject(schema.properties)) {\n      const newSection: any[] = [];\n      const propertyKeys = schema['ui:order'] || Object.keys(schema.properties);\n      if (propertyKeys.includes('*') && !hasOwn(schema.properties, '*')) {\n        const unnamedKeys = Object.keys(schema.properties)\n          .filter(key => !propertyKeys.includes(key));\n        for (let i = propertyKeys.length - 1; i >= 0; i--) {\n          if (propertyKeys[i] === '*') {\n            propertyKeys.splice(i, 1, ...unnamedKeys);\n          }\n        }\n      }\n      propertyKeys\n        .filter(key => hasOwn(schema.properties, key) ||\n          hasOwn(schema, 'additionalProperties')\n        )\n        .forEach(key => {\n          const keySchemaPointer = hasOwn(schema.properties, key) ?\n            '/properties/' + key : '/additionalProperties';\n          const innerItem = buildLayoutFromSchema(\n            jsf, widgetLibrary, isObject(nodeValue) ? nodeValue[key] : null,\n            schemaPointer + keySchemaPointer,\n            dataPointer + '/' + key,\n            false, null, null, forRefLibrary, dataPointerPrefix\n          );\n          if (innerItem) {\n            if (isInputRequired(schema, '/' + key)) {\n              innerItem.options.required = true;\n              jsf.fieldsRequired = true;\n            }\n            newSection.push(innerItem);\n          }\n        });\n      if (dataPointer === '' && !forRefLibrary) {\n        newNode = newSection;\n      } else {\n        newNode.items = newSection;\n      }\n    }\n    // TODO: Add patternProperties and additionalProperties inputs?\n    // ... possibly provide a way to enter both key names and values?\n    // if (isObject(schema.patternProperties)) { }\n    // if (isObject(schema.additionalProperties)) { }\n\n  } else if (newNode.dataType === 'array') {\n    newNode.items = [];\n    let templateArray: any[] = [];\n    newNode.options.maxItems = Math.min(\n      schema.maxItems || 1000, newNode.options.maxItems || 1000\n    );\n    newNode.options.minItems = Math.max(\n      schema.minItems || 0, newNode.options.minItems || 0\n    );\n    if (!newNode.options.minItems && isInputRequired(jsf.schema, schemaPointer)) {\n      newNode.options.minItems = 1;\n    }\n    if (!hasOwn(newNode.options, 'listItems')) { newNode.options.listItems = 1; }\n    newNode.options.tupleItems = isArray(schema.items) ? schema.items.length : 0;\n    if (newNode.options.maxItems <= newNode.options.tupleItems) {\n      newNode.options.tupleItems = newNode.options.maxItems;\n      newNode.options.listItems = 0;\n    } else if (newNode.options.maxItems <\n      newNode.options.tupleItems + newNode.options.listItems\n    ) {\n      newNode.options.listItems = newNode.options.maxItems - newNode.options.tupleItems;\n    } else if (newNode.options.minItems >\n      newNode.options.tupleItems + newNode.options.listItems\n    ) {\n      newNode.options.listItems = newNode.options.minItems - newNode.options.tupleItems;\n    }\n    if (!nodeDataMap.has('maxItems')) {\n      nodeDataMap.set('maxItems', newNode.options.maxItems);\n      nodeDataMap.set('minItems', newNode.options.minItems);\n      nodeDataMap.set('tupleItems', newNode.options.tupleItems);\n      nodeDataMap.set('listItems', newNode.options.listItems);\n    }\n    if (!jsf.arrayMap.has(shortDataPointer)) {\n      jsf.arrayMap.set(shortDataPointer, newNode.options.tupleItems)\n    }\n    removable = newNode.options.removable !== false;\n    let additionalItemsSchemaPointer: string = null;\n\n    // If 'items' is an array = tuple items\n    if (isArray(schema.items)) {\n      newNode.items = [];\n      for (let i = 0; i < newNode.options.tupleItems; i++) {\n        let newItem: any;\n        const itemRefPointer = removeRecursiveReferences(\n          shortDataPointer + '/' + i, jsf.dataRecursiveRefMap, jsf.arrayMap\n        );\n        const itemRecursive = !itemRefPointer.length ||\n          itemRefPointer !== shortDataPointer + '/' + i;\n\n        // If removable, add tuple item layout to layoutRefLibrary\n        if (removable && i >= newNode.options.minItems) {\n          if (!hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\n            // Set to null first to prevent recursive reference from causing endless loop\n            jsf.layoutRefLibrary[itemRefPointer] = null;\n            jsf.layoutRefLibrary[itemRefPointer] = buildLayoutFromSchema(\n              jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null,\n              schemaPointer + '/items/' + i,\n              itemRecursive ? '' : dataPointer + '/' + i,\n              true, 'tuple', true, true, itemRecursive ? dataPointer + '/' + i : ''\n            );\n            if (itemRecursive) {\n              jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\n            }\n          }\n          newItem = getLayoutNode({\n            $ref: itemRefPointer,\n            dataPointer: dataPointer + '/' + i,\n            recursiveReference: itemRecursive,\n          }, jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null);\n        } else {\n          newItem = buildLayoutFromSchema(\n            jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null,\n            schemaPointer + '/items/' + i,\n            dataPointer + '/' + i,\n            true, 'tuple', false, forRefLibrary, dataPointerPrefix\n          );\n        }\n        if (newItem) { newNode.items.push(newItem); }\n      }\n\n      // If 'additionalItems' is an object = additional list items, after tuple items\n      if (isObject(schema.additionalItems)) {\n        additionalItemsSchemaPointer = schemaPointer + '/additionalItems';\n      }\n\n    // If 'items' is an object = list items only (no tuple items)\n    } else if (isObject(schema.items)) {\n      additionalItemsSchemaPointer = schemaPointer + '/items';\n    }\n\n    if (additionalItemsSchemaPointer) {\n      const itemRefPointer = removeRecursiveReferences(\n        shortDataPointer + '/-', jsf.dataRecursiveRefMap, jsf.arrayMap\n      );\n      const itemRecursive = !itemRefPointer.length ||\n        itemRefPointer !== shortDataPointer + '/-';\n      const itemSchemaPointer = removeRecursiveReferences(\n        additionalItemsSchemaPointer, jsf.schemaRecursiveRefMap, jsf.arrayMap\n      );\n      // Add list item layout to layoutRefLibrary\n      if (itemRefPointer.length && !hasOwn(jsf.layoutRefLibrary, itemRefPointer)) {\n        // Set to null first to prevent recursive reference from causing endless loop\n        jsf.layoutRefLibrary[itemRefPointer] = null;\n        jsf.layoutRefLibrary[itemRefPointer] = buildLayoutFromSchema(\n          jsf, widgetLibrary, null,\n          itemSchemaPointer,\n          itemRecursive ? '' : dataPointer + '/-',\n          true, 'list', removable, true, itemRecursive ? dataPointer + '/-' : ''\n        );\n        if (itemRecursive) {\n          jsf.layoutRefLibrary[itemRefPointer].recursiveReference = true;\n        }\n      }\n\n      // Add any additional default items\n      if (!itemRecursive || newNode.options.required) {\n        const arrayLength = Math.min(Math.max(\n          itemRecursive ? 0 :\n            newNode.options.tupleItems + newNode.options.listItems,\n          isArray(nodeValue) ? nodeValue.length : 0\n        ), newNode.options.maxItems);\n        if (newNode.items.length < arrayLength) {\n          for (let i = newNode.items.length; i < arrayLength; i++) {\n            newNode.items.push(getLayoutNode({\n              $ref: itemRefPointer,\n              dataPointer: dataPointer + '/-',\n              recursiveReference: itemRecursive,\n            }, jsf, widgetLibrary, isArray(nodeValue) ? nodeValue[i] : null));\n          }\n        }\n      }\n\n      // If needed, add button to add items to array\n      if (newNode.options.addable !== false &&\n        newNode.options.minItems < newNode.options.maxItems &&\n        (newNode.items[newNode.items.length - 1] || {}).type !== '$ref'\n      ) {\n        let buttonText =\n          ((jsf.layoutRefLibrary[itemRefPointer] || {}).options || {}).title;\n        const prefix = buttonText ? 'Add ' : 'Add to ';\n        if (!buttonText) {\n          buttonText = schema.title || fixTitle(JsonPointer.toKey(dataPointer));\n        }\n        if (!/^add\\b/i.test(buttonText)) { buttonText = prefix + buttonText; }\n        newNode.items.push({\n          _id: _.uniqueId(),\n          arrayItem: true,\n          arrayItemType: 'list',\n          dataPointer: newNode.dataPointer + '/-',\n          options: {\n            listItems: newNode.options.listItems,\n            maxItems: newNode.options.maxItems,\n            minItems: newNode.options.minItems,\n            removable: false,\n            title: buttonText,\n            tupleItems: newNode.options.tupleItems,\n          },\n          recursiveReference: itemRecursive,\n          type: '$ref',\n          widget: widgetLibrary.getWidget('$ref'),\n          $ref: itemRefPointer,\n        });\n      }\n    }\n\n  } else if (newNode.dataType === '$ref') {\n    const schemaRef = JsonPointer.compile(schema.$ref);\n    const dataRef = JsonPointer.toDataPointer(schemaRef, jsf.schema);\n    let buttonText = '';\n\n    // Get newNode title\n    if (newNode.options.add) {\n      buttonText = newNode.options.add;\n    } else if (newNode.name && !/^\\d+$/.test(newNode.name)) {\n      buttonText =\n        (/^add\\b/i.test(newNode.name) ? '' : 'Add ') + fixTitle(newNode.name);\n\n    // If newNode doesn't have a title, look for title of parent array item\n    } else {\n      const parentSchema =\n        JsonPointer.get(jsf.schema, schemaPointer, 0, -1);\n      if (hasOwn(parentSchema, 'title')) {\n        buttonText = 'Add to ' + parentSchema.title;\n      } else {\n        const pointerArray = JsonPointer.parse(newNode.dataPointer);\n        buttonText = 'Add to ' + fixTitle(pointerArray[pointerArray.length - 2]);\n      }\n    }\n    Object.assign(newNode, {\n      recursiveReference: true,\n      widget: widgetLibrary.getWidget('$ref'),\n      $ref: dataRef,\n    });\n    Object.assign(newNode.options, {\n      removable: false,\n      title: buttonText,\n    });\n    if (isNumber(JsonPointer.get(jsf.schema, schemaPointer, 0, -1).maxItems)) {\n      newNode.options.maxItems =\n        JsonPointer.get(jsf.schema, schemaPointer, 0, -1).maxItems;\n    }\n\n    // Add layout template to layoutRefLibrary\n    if (dataRef.length) {\n      if (!hasOwn(jsf.layoutRefLibrary, dataRef)) {\n        // Set to null first to prevent recursive reference from causing endless loop\n        jsf.layoutRefLibrary[dataRef] = null;\n        const newLayout = buildLayoutFromSchema(\n          jsf, widgetLibrary, null, schemaRef, '',\n          newNode.arrayItem, newNode.arrayItemType, true, true, dataPointer\n        );\n        if (newLayout) {\n          newLayout.recursiveReference = true;\n          jsf.layoutRefLibrary[dataRef] = newLayout;\n        } else {\n          delete jsf.layoutRefLibrary[dataRef];\n        }\n      } else if (!jsf.layoutRefLibrary[dataRef].recursiveReference) {\n        jsf.layoutRefLibrary[dataRef].recursiveReference = true;\n      }\n    }\n  }\n  return newNode;\n}\n\n/**\n * 'mapLayout' function\n *\n * Creates a new layout by running each element in an existing layout through\n * an iteratee. Recursively maps within array elements 'items' and 'tabs'.\n * The iteratee is invoked with four arguments: (value, index, layout, path)\n *\n * The returned layout may be longer (or shorter) then the source layout.\n *\n * If an item from the source layout returns multiple items (as '*' usually will),\n * this function will keep all returned items in-line with the surrounding items.\n *\n * If an item from the source layout causes an error and returns null, it is\n * skipped without error, and the function will still return all non-null items.\n *\n * //   layout - the layout to map\n * //  { (v: any, i?: number, l?: any, p?: string) => any }\n *   function - the funciton to invoke on each element\n * //  { string|string[] = '' } layoutPointer - the layoutPointer to layout, inside rootLayout\n * //  { any[] = layout } rootLayout - the root layout, which conatins layout\n * // \n */\nexport function mapLayout(layout, fn, layoutPointer = '', rootLayout = layout) {\n  let indexPad = 0;\n  let newLayout: any[] = [];\n  forEach(layout, (item, index) => {\n    let realIndex = +index + indexPad;\n    let newLayoutPointer = layoutPointer + '/' + realIndex;\n    let newNode: any = copy(item);\n    let itemsArray: any[] = [];\n    if (isObject(item)) {\n      if (hasOwn(item, 'tabs')) {\n        item.items = item.tabs;\n        delete item.tabs;\n      }\n      if (hasOwn(item, 'items')) {\n        itemsArray = isArray(item.items) ? item.items : [item.items];\n      }\n    }\n    if (itemsArray.length) {\n      newNode.items = mapLayout(itemsArray, fn, newLayoutPointer + '/items', rootLayout);\n    }\n    newNode = fn(newNode, realIndex, newLayoutPointer, rootLayout);\n    if (!isDefined(newNode)) {\n      indexPad--;\n    } else {\n      if (isArray(newNode)) { indexPad += newNode.length - 1; }\n      newLayout = newLayout.concat(newNode);\n    }\n  });\n  return newLayout;\n};\n\n/**\n * 'getLayoutNode' function\n * Copy a new layoutNode from layoutRefLibrary\n *\n * //   refNode -\n * //   layoutRefLibrary -\n * //  { any = null } widgetLibrary -\n * //  { any = null } nodeValue -\n * //  copied layoutNode\n */\nexport function getLayoutNode(\n  refNode, jsf, widgetLibrary: any = null, nodeValue: any = null\n) {\n\n  // If recursive reference and building initial layout, return Add button\n  if (refNode.recursiveReference && widgetLibrary) {\n    const newLayoutNode = _.cloneDeep(refNode);\n    if (!newLayoutNode.options) { newLayoutNode.options = {}; }\n    Object.assign(newLayoutNode, {\n      recursiveReference: true,\n      widget: widgetLibrary.getWidget('$ref'),\n    });\n    Object.assign(newLayoutNode.options, {\n      removable: false,\n      title: 'Add ' + newLayoutNode.$ref,\n    });\n    return newLayoutNode;\n\n  // Otherwise, return referenced layout\n} else {\n    let newLayoutNode = jsf.layoutRefLibrary[refNode.$ref];\n    // If value defined, build new node from schema (to set array lengths)\n    if (isDefined(nodeValue)) {\n      newLayoutNode = buildLayoutFromSchema(\n        jsf, widgetLibrary, nodeValue,\n        JsonPointer.toSchemaPointer(refNode.$ref, jsf.schema),\n        refNode.$ref, newLayoutNode.arrayItem,\n        newLayoutNode.arrayItemType, newLayoutNode.options.removable, false\n      );\n    } else {\n      // If value not defined, copy node from layoutRefLibrary\n      newLayoutNode = _.cloneDeep(newLayoutNode);\n      JsonPointer.forEachDeep(newLayoutNode, (subNode, pointer) => {\n\n        // Reset all _id's in newLayoutNode to unique values\n        if (hasOwn(subNode, '_id')) { subNode._id = _.uniqueId(); }\n\n        // If adding a recursive item, prefix current dataPointer\n        // to all dataPointers in new layoutNode\n        if (refNode.recursiveReference && hasOwn(subNode, 'dataPointer')) {\n          subNode.dataPointer = refNode.dataPointer + subNode.dataPointer;\n        }\n      });\n    }\n    return newLayoutNode;\n  }\n}\n\n/**\n * 'buildTitleMap' function\n *\n * //   titleMap -\n * //   enumList -\n * //  { boolean = true } fieldRequired -\n * //  { boolean = true } flatList -\n * // { TitleMapItem[] }\n */\nexport function buildTitleMap(\n  titleMap, enumList, fieldRequired = true, flatList = true\n) {\n  let newTitleMap: TitleMapItem[] = [];\n  let hasEmptyValue = false;\n  if (titleMap) {\n    if (isArray(titleMap)) {\n      if (enumList) {\n        for (let i of Object.keys(titleMap)) {\n          if (isObject(titleMap[i])) { // JSON Form style\n            const value = titleMap[i].value;\n            if (enumList.includes(value)) {\n              const name = titleMap[i].name;\n              newTitleMap.push({ name, value });\n              if (value === undefined || value === null) { hasEmptyValue = true; }\n            }\n          } else if (isString(titleMap[i])) { // React Jsonschema Form style\n            if (i < enumList.length) {\n              const name = titleMap[i];\n              const value = enumList[i];\n              newTitleMap.push({ name, value });\n              if (value === undefined || value === null) { hasEmptyValue = true; }\n            }\n          }\n        }\n      } else { // If array titleMap and no enum list, just return the titleMap - Angular Schema Form style\n        newTitleMap = titleMap;\n        if (!fieldRequired) {\n          hasEmptyValue = !!newTitleMap\n            .filter(i => i.value === undefined || i.value === null)\n            .length;\n        }\n      }\n    } else if (enumList) { // Alternate JSON Form style, with enum list\n      for (let i of Object.keys(enumList)) {\n        let value = enumList[i];\n        if (hasOwn(titleMap, value)) {\n          let name = titleMap[value];\n          newTitleMap.push({ name, value });\n          if (value === undefined || value === null) { hasEmptyValue = true; }\n        }\n      }\n    } else { // Alternate JSON Form style, without enum list\n      for (let value of Object.keys(titleMap)) {\n        let name = titleMap[value];\n        newTitleMap.push({ name, value });\n        if (value === undefined || value === null) { hasEmptyValue = true; }\n      }\n    }\n  } else if (enumList) { // Build map from enum list alone\n    for (let i of Object.keys(enumList)) {\n      let name = enumList[i];\n      let value = enumList[i];\n      newTitleMap.push({ name, value});\n      if (value === undefined || value === null) { hasEmptyValue = true; }\n    }\n  } else { // If no titleMap and no enum list, return default map of boolean values\n    newTitleMap = [ { name: 'True', value: true }, { name: 'False', value: false } ];\n  }\n\n  // Does titleMap have groups?\n  if (newTitleMap.some(title => hasOwn(title, 'group'))) {\n    hasEmptyValue = false;\n\n    // If flatList = true, flatten items & update name to group: name\n    if (flatList) {\n      newTitleMap = newTitleMap.reduce((groupTitleMap, title) => {\n        if (hasOwn(title, 'group')) {\n          if (isArray(title.items)) {\n            groupTitleMap = [\n              ...groupTitleMap,\n              ...title.items.map(item =>\n                ({ ...item, ...{ name: `${title.group}: ${item.name}` } })\n              )\n            ];\n            if (title.items.some(item => item.value === undefined || item.value === null)) {\n              hasEmptyValue = true;\n            }\n          }\n          if (hasOwn(title, 'name') && hasOwn(title, 'value')) {\n            title.name = `${title.group}: ${title.name}`;\n            delete title.group;\n            groupTitleMap.push(title);\n            if (title.value === undefined || title.value === null) {\n              hasEmptyValue = true;\n            }\n          }\n        } else {\n          groupTitleMap.push(title);\n          if (title.value === undefined || title.value === null) {\n            hasEmptyValue = true;\n          }\n        }\n        return groupTitleMap;\n      }, []);\n\n    // If flatList = false, combine items from matching groups\n    } else {\n      newTitleMap = newTitleMap.reduce((groupTitleMap, title) => {\n        if (hasOwn(title, 'group')) {\n          if (title.group !== (groupTitleMap[groupTitleMap.length - 1] || {}).group) {\n            groupTitleMap.push({ group: title.group, items: title.items || [] });\n          }\n          if (hasOwn(title, 'name') && hasOwn(title, 'value')) {\n            groupTitleMap[groupTitleMap.length - 1].items\n              .push({ name: title.name, value: title.value });\n            if (title.value === undefined || title.value === null) {\n              hasEmptyValue = true;\n            }\n          }\n        } else {\n          groupTitleMap.push(title);\n          if (title.value === undefined || title.value === null) {\n            hasEmptyValue = true;\n          }\n        }\n        return groupTitleMap;\n      }, []);\n    }\n  }\n  if (!fieldRequired && !hasEmptyValue) {\n    newTitleMap.unshift({ name: '<em>None</em>', value: null });\n  }\n  return newTitleMap;\n}\n","export const enValidationMessages: any = { // Default English error messages\n  required: 'This field is required.',\n  minLength: 'Must be {{minimumLength}} characters or longer (current length: {{currentLength}})',\n  maxLength: 'Must be {{maximumLength}} characters or shorter (current length: {{currentLength}})',\n  pattern: 'Must match pattern: {{requiredPattern}}',\n  format: function (error) {\n    switch (error.requiredFormat) {\n      case 'date':\n        return 'Must be a date, like \"2000-12-31\"';\n      case 'time':\n        return 'Must be a time, like \"16:20\" or \"03:14:15.9265\"';\n      case 'date-time':\n        return 'Must be a date-time, like \"2000-03-14T01:59\" or \"2000-03-14T01:59:26.535Z\"';\n      case 'email':\n        return 'Must be an email address, like \"name@example.com\"';\n      case 'hostname':\n        return 'Must be a hostname, like \"example.com\"';\n      case 'ipv4':\n        return 'Must be an IPv4 address, like \"127.0.0.1\"';\n      case 'ipv6':\n        return 'Must be an IPv6 address, like \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\n      // case 'uri': case 'uri-reference': case 'uri-template':\n      case 'url':\n        return 'Must be a url, like \"http://www.example.com/page.html\"';\n      case 'uuid':\n        return 'Must be a uuid, like \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\n      case 'color':\n        return 'Must be a color, like \"#FFFFFF\" or \"rgb(255, 255, 255)\"';\n      case 'json-pointer':\n        return 'Must be a JSON Pointer, like \"/pointer/to/something\"';\n      case 'relative-json-pointer':\n        return 'Must be a relative JSON Pointer, like \"2/pointer/to/something\"';\n      case 'regex':\n        return 'Must be a regular expression, like \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\n      default:\n        return 'Must be a correctly formatted ' + error.requiredFormat;\n    }\n  },\n  minimum: 'Must be {{minimumValue}} or more',\n  exclusiveMinimum: 'Must be more than {{exclusiveMinimumValue}}',\n  maximum: 'Must be {{maximumValue}} or less',\n  exclusiveMaximum: 'Must be less than {{exclusiveMaximumValue}}',\n  multipleOf: function (error) {\n    if ((1 / error.multipleOfValue) % 10 === 0) {\n      const decimals = Math.log10(1 / error.multipleOfValue);\n      return `Must have ${decimals} or fewer decimal places.`;\n    } else {\n      return `Must be a multiple of ${error.multipleOfValue}.`;\n    }\n  },\n  minProperties: 'Must have {{minimumProperties}} or more items (current items: {{currentProperties}})',\n  maxProperties: 'Must have {{maximumProperties}} or fewer items (current items: {{currentProperties}})',\n  minItems: 'Must have {{minimumItems}} or more items (current items: {{currentItems}})',\n  maxItems: 'Must have {{maximumItems}} or fewer items (current items: {{currentItems}})',\n  uniqueItems: 'All items must be unique',\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\n};\n","export const frValidationMessages: any = { // French error messages\n  required: 'Est obligatoire.',\n  minLength: 'Doit avoir minimum {{minimumLength}} caractÃ¨res (actuellement: {{currentLength}})',\n  maxLength: 'Doit avoir maximum {{maximumLength}} caractÃ¨res (actuellement: {{currentLength}})',\n  pattern: 'Doit respecter: {{requiredPattern}}',\n  format: function (error) {\n    switch (error.requiredFormat) {\n      case 'date':\n        return 'Doit Ãªtre une date, tel que \"2000-12-31\"';\n      case 'time':\n        return 'Doit Ãªtre une heure, tel que \"16:20\" ou \"03:14:15.9265\"';\n      case 'date-time':\n        return 'Doit Ãªtre une date et une heure, tel que \"2000-03-14T01:59\" ou \"2000-03-14T01:59:26.535Z\"';\n      case 'email':\n        return 'Doit Ãªtre une adresse e-mail, tel que \"name@example.com\"';\n      case 'hostname':\n        return 'Doit Ãªtre un nom de domaine, tel que \"example.com\"';\n      case 'ipv4':\n        return 'Doit Ãªtre une adresse IPv4, tel que \"127.0.0.1\"';\n      case 'ipv6':\n        return 'Doit Ãªtre une adresse IPv6, tel que \"1234:5678:9ABC:DEF0:1234:5678:9ABC:DEF0\"';\n      // TODO: add examples for 'uri', 'uri-reference', and 'uri-template'\n      // case 'uri': case 'uri-reference': case 'uri-template':\n      case 'url':\n        return 'Doit Ãªtre une URL, tel que \"http://www.example.com/page.html\"';\n      case 'uuid':\n        return 'Doit Ãªtre un UUID, tel que \"12345678-9ABC-DEF0-1234-56789ABCDEF0\"';\n      case 'color':\n        return 'Doit Ãªtre une couleur, tel que \"#FFFFFF\" or \"rgb(255, 255, 255)\"';\n      case 'json-pointer':\n        return 'Doit Ãªtre un JSON Pointer, tel que \"/pointer/to/something\"';\n      case 'relative-json-pointer':\n        return 'Doit Ãªtre un relative JSON Pointer, tel que \"2/pointer/to/something\"';\n      case 'regex':\n        return 'Doit Ãªtre une expression rÃ©guliÃ¨re, tel que \"(1-)?\\\\d{3}-\\\\d{3}-\\\\d{4}\"';\n      default:\n        return 'Doit Ãªtre avoir le format correct: ' + error.requiredFormat;\n    }\n  },\n  minimum: 'Doit Ãªtre supÃ©rieur Ã  {{minimumValue}}',\n  exclusiveMinimum: 'Doit avoir minimum {{exclusiveMinimumValue}} charactÃ¨res',\n  maximum: 'Doit Ãªtre infÃ©rieur Ã  {{maximumValue}}',\n  exclusiveMaximum: 'Doit avoir maximum {{exclusiveMaximumValue}} charactÃ¨res',\n  multipleOf: function (error) {\n    if ((1 / error.multipleOfValue) % 10 === 0) {\n      const decimals = Math.log10(1 / error.multipleOfValue);\n      return `Doit comporter ${decimals} ou moins de decimales.`;\n    } else {\n      return `Doit Ãªtre un multiple de ${error.multipleOfValue}.`;\n    }\n  },\n  minProperties: 'Doit comporter au minimum {{minimumProperties}} Ã©lÃ©ments',\n  maxProperties: 'Doit comporter au maximum {{maximumProperties}} Ã©lÃ©ments',\n  minItems: 'Doit comporter au minimum {{minimumItems}} Ã©lÃ©ments',\n  maxItems: 'Doit comporter au maximum {{minimumItems}} Ã©lÃ©ments',\n  uniqueItems: 'Tous les Ã©lÃ©ments doivent Ãªtre uniques',\n  // Note: No default error messages for 'type', 'const', 'enum', or 'dependencies'\n};\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, FormArray, FormGroup } from '@angular/forms';\nimport { filter } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\nimport * as Ajv from 'ajv';\nimport * as _ from 'lodash';\n\nimport {\n  hasValue, isArray, isDefined, isEmpty, isObject, isString\n} from './shared/validator.functions';\nimport {\n  fixTitle, forEach, hasOwn, toTitleCase\n} from './shared/utility.functions';\nimport { JsonPointer } from './shared/jsonpointer.functions';\nimport {\n  buildSchemaFromData, buildSchemaFromLayout, removeRecursiveReferences,\n  resolveSchemaReferences\n} from './shared/json-schema.functions';\nimport {\n  buildFormGroup, buildFormGroupTemplate, formatFormData, getControl\n} from './shared/form-group.functions';\nimport { buildLayout, getLayoutNode } from './shared/layout.functions';\nimport { enValidationMessages } from './locale/en-validation-messages';\nimport { frValidationMessages } from './locale/fr-validation-messages';\n\nexport interface TitleMapItem {\n  name?: string; value?: any; checked?: boolean; group?: string; items?: TitleMapItem[];\n}\nexport interface ErrorMessages {\n  [control_name: string]: { message: string|Function|Object, code: string }[];\n}\n\n\n@Injectable()\nexport class JsonSchemaFormService {\n  JsonFormCompatibility = false;\n  ReactJsonSchemaFormCompatibility = false;\n  AngularSchemaFormCompatibility = false;\n  tpldata: any = {};\n\n  ajvOptions: any = { allErrors: true, jsonPointers: true, unknownFormats: 'ignore' };\n  ajv: any = new Ajv(this.ajvOptions); // AJV: Another JSON Schema Validator\n  validateFormData: any = null; // Compiled AJV function to validate active form's schema\n\n  formValues: any = {}; // Internal form data (may not have correct types)\n  data: any = {}; // Output form data (formValues, formatted with correct data types)\n  schema: any = {}; // Internal JSON Schema\n  layout: any[] = []; // Internal form layout\n  formGroupTemplate: any = {}; // Template used to create formGroup\n  formGroup: any = null; // Angular formGroup, which powers the reactive form\n  framework: any = null; // Active framework component\n  formOptions: any; // Active options, used to configure the form\n\n  validData: any = null; // Valid form data (or null) (=== isValid ? data : null)\n  isValid: boolean = null; // Is current form data valid?\n  ajvErrors: any = null; // Ajv errors for current data\n  validationErrors: any = null; // Any validation errors for current data\n  dataErrors: any = new Map(); //\n  formValueSubscription: any = null; // Subscription to formGroup.valueChanges observable (for un- and re-subscribing)\n  dataChanges: Subject<any> = new Subject(); // Form data observable\n  isValidChanges: Subject<any> = new Subject(); // isValid observable\n  validationErrorChanges: Subject<any> = new Subject(); // validationErrors observable\n\n  arrayMap: Map<string, number> = new Map(); // Maps arrays in data object and number of tuple values\n  dataMap: Map<string, any> = new Map(); // Maps paths in form data to schema and formGroup paths\n  dataRecursiveRefMap: Map<string, string> = new Map(); // Maps recursive reference points in form data\n  schemaRecursiveRefMap: Map<string, string> = new Map(); // Maps recursive reference points in schema\n  schemaRefLibrary: any = {}; // Library of schemas for resolving schema $refs\n  layoutRefLibrary: any = { '': null }; // Library of layout nodes for adding to form\n  templateRefLibrary: any = {}; // Library of formGroup templates for adding to form\n  hasRootReference = false; // Does the form include a recursive reference to itself?\n\n  language = 'en-US'; // Does the form include a recursive reference to itself?\n\n  // Default global form options\n  defaultFormOptions: any = {\n    addSubmit: 'auto', // Add a submit button if layout does not have one?\n      // for addSubmit: true = always, false = never,\n      // 'auto' = only if layout is undefined (form is built from schema alone)\n    debug: false, // Show debugging output?\n    disableInvalidSubmit: true, // Disable submit if form invalid?\n    formDisabled: false, // Set entire form as disabled? (not editable, and disables outputs)\n    formReadonly: false, // Set entire form as read only? (not editable, but outputs still enabled)\n    fieldsRequired: false, // (set automatically) Are there any required fields in the form?\n    framework: 'no-framework', // The framework to load\n    loadExternalAssets: false, // Load external css and JavaScript for framework?\n    pristine: { errors: true, success: true },\n    supressPropertyTitles: false,\n    setSchemaDefaults: 'auto', // Set fefault values from schema?\n      // true = always set (unless overridden by layout default or formValues)\n      // false = never set\n      // 'auto' = set in addable components, and everywhere if formValues not set\n    setLayoutDefaults: 'auto', // Set fefault values from layout?\n      // true = always set (unless overridden by formValues)\n      // false = never set\n      // 'auto' = set in addable components, and everywhere if formValues not set\n    validateOnRender: 'auto', // Validate fields immediately, before they are touched?\n      // true = validate all fields immediately\n      // false = only validate fields after they are touched by user\n      // 'auto' = validate fields with values immediately, empty fields after they are touched\n    widgets: {}, // Any custom widgets to load\n    defautWidgetOptions: { // Default options for form control widgets\n      listItems: 1, // Number of list items to initially add to arrays with no default value\n      addable: true, // Allow adding items to an array or $ref point?\n      orderable: true, // Allow reordering items within an array?\n      removable: true, // Allow removing items from an array or $ref point?\n      enableErrorState: true, // Apply 'has-error' class when field fails validation?\n      // disableErrorState: false, // Don't apply 'has-error' class when field fails validation?\n      enableSuccessState: true, // Apply 'has-success' class when field validates?\n      // disableSuccessState: false, // Don't apply 'has-success' class when field validates?\n      feedback: false, // Show inline feedback icons?\n      feedbackOnRender: false, // Show errorMessage on Render?\n      notitle: false, // Hide title?\n      disabled: false, // Set control as disabled? (not editable, and excluded from output)\n      readonly: false, // Set control as read only? (not editable, but included in output)\n      returnEmptyFields: true, // return values for fields that contain no data?\n      validationMessages: {} // set by setLanguage()\n    },\n  };\n\n  constructor() {\n    this.setLanguage(this.language);\n  }\n\n  setLanguage(language: string = 'en-US') {\n    this.language = language;\n    const validationMessages = language.slice(0, 2) === 'fr' ?\n      frValidationMessages : enValidationMessages;\n    this.defaultFormOptions.defautWidgetOptions.validationMessages =\n      _.cloneDeep(validationMessages);\n  }\n\n  getData() { return this.data; }\n\n  getSchema() { return this.schema; }\n\n  getLayout() { return this.layout; }\n\n  resetAllValues() {\n    this.JsonFormCompatibility = false;\n    this.ReactJsonSchemaFormCompatibility = false;\n    this.AngularSchemaFormCompatibility = false;\n    this.tpldata = {};\n    this.validateFormData = null;\n    this.formValues = {};\n    this.schema = {};\n    this.layout = [];\n    this.formGroupTemplate = {};\n    this.formGroup = null;\n    this.framework = null;\n    this.data = {};\n    this.validData = null;\n    this.isValid = null;\n    this.validationErrors = null;\n    this.arrayMap = new Map();\n    this.dataMap = new Map();\n    this.dataRecursiveRefMap = new Map();\n    this.schemaRecursiveRefMap = new Map();\n    this.layoutRefLibrary = {};\n    this.schemaRefLibrary = {};\n    this.templateRefLibrary = {};\n    this.formOptions = _.cloneDeep(this.defaultFormOptions);\n  }\n\n  /**\n   * 'buildRemoteError' function\n   *\n   * Example errors:\n   * {\n   *   last_name: [ {\n   *     message: 'Last name must by start with capital letter.',\n   *     code: 'capital_letter'\n   *   } ],\n   *   email: [ {\n   *     message: 'Email must be from example.com domain.',\n   *     code: 'special_domain'\n   *   }, {\n   *     message: 'Email must contain an @ symbol.',\n   *     code: 'at_symbol'\n   *   } ]\n   * }\n   * //{ErrorMessages} errors\n   */\n  buildRemoteError(errors: ErrorMessages) {\n    forEach(errors, (value, key) => {\n      if (key in this.formGroup.controls) {\n        for (const error of value) {\n          const err = {};\n          err[error['code']] = error['message'];\n          this.formGroup.get(key).setErrors(err, { emitEvent: true });\n        }\n      }\n    });\n  }\n\n  validateData(newValue: any, updateSubscriptions = true): void {\n\n    // Format raw form data to correct data types\n    this.data = formatFormData(\n      newValue, this.dataMap, this.dataRecursiveRefMap,\n      this.arrayMap, this.formOptions.returnEmptyFields\n    );\n    this.isValid = this.validateFormData(this.data);\n    this.validData = this.isValid ? this.data : null;\n    const compileErrors = errors => {\n      const compiledErrors = {};\n      (errors || []).forEach(error => {\n        if (!compiledErrors[error.dataPath]) { compiledErrors[error.dataPath] = []; }\n        compiledErrors[error.dataPath].push(error.message);\n      });\n      return compiledErrors;\n    };\n    this.ajvErrors = this.validateFormData.errors;\n    this.validationErrors = compileErrors(this.validateFormData.errors);\n    if (updateSubscriptions) {\n      this.dataChanges.next(this.data);\n      this.isValidChanges.next(this.isValid);\n      this.validationErrorChanges.next(this.ajvErrors);\n    }\n  }\n\n  buildFormGroupTemplate(formValues: any = null, setValues = true) {\n    this.formGroupTemplate = buildFormGroupTemplate(this, formValues, setValues);\n  }\n\n  buildFormGroup() {\n    this.formGroup = <FormGroup>buildFormGroup(this.formGroupTemplate);\n    if (this.formGroup) {\n      this.compileAjvSchema();\n      this.validateData(this.formGroup.value);\n\n      // Set up observables to emit data and validation info when form data changes\n      if (this.formValueSubscription) { this.formValueSubscription.unsubscribe(); }\n      this.formValueSubscription = this.formGroup.valueChanges\n        .subscribe(formValue => this.validateData(formValue));\n    }\n  }\n\n  buildLayout(widgetLibrary: any) {\n    this.layout = buildLayout(this, widgetLibrary);\n  }\n\n  setOptions(newOptions: any) {\n    if (isObject(newOptions)) {\n      const addOptions = _.cloneDeep(newOptions);\n      // Backward compatibility for 'defaultOptions' (renamed 'defautWidgetOptions')\n      if (isObject(addOptions.defaultOptions)) {\n        Object.assign(this.formOptions.defautWidgetOptions, addOptions.defaultOptions);\n        delete addOptions.defaultOptions;\n      }\n      if (isObject(addOptions.defautWidgetOptions)) {\n        Object.assign(this.formOptions.defautWidgetOptions, addOptions.defautWidgetOptions);\n        delete addOptions.defautWidgetOptions;\n      }\n      Object.assign(this.formOptions, addOptions);\n\n      // convert disableErrorState / disableSuccessState to enable...\n      const globalDefaults = this.formOptions.defautWidgetOptions;\n      ['ErrorState', 'SuccessState']\n        .filter(suffix => hasOwn(globalDefaults, 'disable' + suffix))\n        .forEach(suffix => {\n          globalDefaults['enable' + suffix] = !globalDefaults['disable' + suffix];\n          delete globalDefaults['disable' + suffix];\n        });\n    }\n  }\n\n  compileAjvSchema() {\n    if (!this.validateFormData) {\n\n      // if 'ui:order' exists in properties, move it to root before compiling with ajv\n      if (Array.isArray(this.schema.properties['ui:order'])) {\n        this.schema['ui:order'] = this.schema.properties['ui:order'];\n        delete this.schema.properties['ui:order'];\n      }\n      this.ajv.removeSchema(this.schema);\n      this.validateFormData = this.ajv.compile(this.schema);\n    }\n  }\n\n  buildSchemaFromData(data?: any, requireAllFields = false): any {\n    if (data) { return buildSchemaFromData(data, requireAllFields); }\n    this.schema = buildSchemaFromData(this.formValues, requireAllFields);\n  }\n\n  buildSchemaFromLayout(layout?: any): any {\n    if (layout) { return buildSchemaFromLayout(layout); }\n    this.schema = buildSchemaFromLayout(this.layout);\n  }\n\n\n  setTpldata(newTpldata: any = {}): void {\n    this.tpldata = newTpldata;\n  }\n\n  parseText(\n    text = '', value: any = {}, values: any = {}, key: number|string = null\n  ): string {\n    if (!text || !/{{.+?}}/.test(text)) { return text; }\n    return text.replace(/{{(.+?)}}/g, (...a) =>\n      this.parseExpression(a[1], value, values, key, this.tpldata)\n    );\n  }\n\n  parseExpression(\n    expression = '', value: any = {}, values: any = {},\n    key: number|string = null, tpldata: any = null\n  ) {\n    if (typeof expression !== 'string') { return ''; }\n    const index = typeof key === 'number' ? (key + 1) + '' : (key || '');\n    expression = expression.trim();\n    if ((expression[0] === '\\'' || expression[0] === '\"') &&\n      expression[0] === expression[expression.length - 1] &&\n      expression.slice(1, expression.length - 1).indexOf(expression[0]) === -1\n    ) {\n      return expression.slice(1, expression.length - 1);\n    }\n    if (expression === 'idx' || expression === '$index') { return index; }\n    if (expression === 'value' && !hasOwn(values, 'value')) { return value; }\n    if (['\"', '\\'', ' ', '||', '&&', '+'].every(delim => expression.indexOf(delim) === -1)) {\n      const pointer = JsonPointer.parseObjectPath(expression);\n      return pointer[0] === 'value' && JsonPointer.has(value, pointer.slice(1)) ?\n          JsonPointer.get(value, pointer.slice(1)) :\n        pointer[0] === 'values' && JsonPointer.has(values, pointer.slice(1)) ?\n          JsonPointer.get(values, pointer.slice(1)) :\n        pointer[0] === 'tpldata' && JsonPointer.has(tpldata, pointer.slice(1)) ?\n          JsonPointer.get(tpldata, pointer.slice(1)) :\n        JsonPointer.has(values, pointer) ? JsonPointer.get(values, pointer) : '';\n    }\n    if (expression.indexOf('[idx]') > -1) {\n      expression = expression.replace(/\\[idx\\]/g, <string>index);\n    }\n    if (expression.indexOf('[$index]') > -1) {\n      expression = expression.replace(/\\[$index\\]/g, <string>index);\n    }\n    // TODO: Improve expression evaluation by parsing quoted strings first\n    // let expressionArray = expression.match(/([^\"']+|\"[^\"]+\"|'[^']+')/g);\n    if (expression.indexOf('||') > -1) {\n      return expression.split('||').reduce((all, term) =>\n        all || this.parseExpression(term, value, values, key, tpldata), ''\n      );\n    }\n    if (expression.indexOf('&&') > -1) {\n      return expression.split('&&').reduce((all, term) =>\n        all && this.parseExpression(term, value, values, key, tpldata), ' '\n      ).trim();\n    }\n    if (expression.indexOf('+') > -1) {\n      return expression.split('+')\n        .map(term => this.parseExpression(term, value, values, key, tpldata))\n        .join('');\n    }\n    return '';\n  }\n\n  setArrayItemTitle(\n    parentCtx: any = {}, childNode: any = null, index: number = null\n  ): string {\n    const parentNode = parentCtx.layoutNode;\n    const parentValues: any = this.getFormControlValue(parentCtx);\n    const isArrayItem =\n      (parentNode.type || '').slice(-5) === 'array' && isArray(parentValues);\n    const text = JsonPointer.getFirst(\n      isArrayItem && childNode.type !== '$ref' ? [\n        [childNode, '/options/legend'],\n        [childNode, '/options/title'],\n        [parentNode, '/options/title'],\n        [parentNode, '/options/legend'],\n      ] : [\n        [childNode, '/options/title'],\n        [childNode, '/options/legend'],\n        [parentNode, '/options/title'],\n        [parentNode, '/options/legend']\n      ]\n    );\n    if (!text) { return text; }\n    const childValue = isArray(parentValues) && index < parentValues.length ?\n      parentValues[index] : parentValues;\n    return this.parseText(text, childValue, parentValues, index);\n  }\n\n  setItemTitle(ctx: any) {\n    return !ctx.options.title && /^(\\d+|-)$/.test(ctx.layoutNode.name) ?\n      null :\n      this.parseText(\n        ctx.options.title || toTitleCase(ctx.layoutNode.name),\n        this.getFormControlValue(this),\n        (this.getFormControlGroup(this) || <any>{}).value,\n        ctx.dataIndex[ctx.dataIndex.length - 1]\n      );\n  }\n\n  evaluateCondition(layoutNode: any, dataIndex: number[]): boolean {\n    const arrayIndex = dataIndex && dataIndex[dataIndex.length - 1];\n    let result = true;\n    if (hasValue((layoutNode.options || {}).condition)) {\n      if (typeof layoutNode.options.condition === 'string') {\n        let pointer = layoutNode.options.condition;\n        if (hasValue(arrayIndex)) {\n          pointer = pointer.replace('[arrayIndex]', `[${arrayIndex}]`);\n        }\n        pointer = JsonPointer.parseObjectPath(pointer);\n        result = !!JsonPointer.get(this.data, pointer);\n        if (!result && pointer[0] === 'model') {\n          result = !!JsonPointer.get({ model: this.data }, pointer);\n        }\n      } else if (typeof layoutNode.options.condition === 'function') {\n        result = layoutNode.options.condition(this.data);\n      } else if (typeof layoutNode.options.condition.functionBody === 'string') {\n        try {\n          const dynFn = new Function(\n            'model', 'arrayIndices', layoutNode.options.condition.functionBody\n          );\n          result = dynFn(this.data, dataIndex);\n        } catch (e) {\n          result = true;\n          console.error('condition functionBody errored out on evaluation: ' + layoutNode.options.condition.functionBody);\n        }\n      }\n    }\n    return result;\n  }\n\n  initializeControl(ctx: any, bind = true): boolean {\n    if (!isObject(ctx)) { return false; }\n    if (isEmpty(ctx.options)) {\n      ctx.options = !isEmpty((ctx.layoutNode || {}).options) ?\n        ctx.layoutNode.options : _.cloneDeep(this.formOptions);\n    }\n    ctx.formControl = this.getFormControl(ctx);\n    ctx.boundControl = bind && !!ctx.formControl;\n    if (ctx.formControl) {\n      ctx.controlName = this.getFormControlName(ctx);\n      ctx.controlValue = ctx.formControl.value;\n      ctx.controlDisabled = ctx.formControl.disabled;\n      ctx.options.errorMessage = ctx.formControl.status === 'VALID' ? null :\n        this.formatErrors(ctx.formControl.errors, ctx.options.validationMessages);\n      ctx.options.showErrors = this.formOptions.validateOnRender === true ||\n        (this.formOptions.validateOnRender === 'auto' && hasValue(ctx.controlValue));\n      ctx.formControl.statusChanges.subscribe(status =>\n        ctx.options.errorMessage = status === 'VALID' ? null :\n          this.formatErrors(ctx.formControl.errors, ctx.options.validationMessages)\n      );\n      ctx.formControl.valueChanges.subscribe(value => {\n        if (!_.isEqual(ctx.controlValue, value)) { ctx.controlValue = value; }\n      });\n    } else {\n      ctx.controlName = ctx.layoutNode.name;\n      ctx.controlValue = ctx.layoutNode.value || null;\n      const dataPointer = this.getDataPointer(ctx);\n      if (bind && dataPointer) {\n        console.error(`warning: control \"${dataPointer}\" is not bound to the Angular FormGroup.`);\n      }\n    }\n    return ctx.boundControl;\n  }\n\n  formatErrors(errors: any, validationMessages: any = {}): string {\n    if (isEmpty(errors)) { return null; }\n    if (!isObject(validationMessages)) { validationMessages = {}; }\n    const addSpaces = string => string[0].toUpperCase() + (string.slice(1) || '')\n      .replace(/([a-z])([A-Z])/g, '$1 $2').replace(/_/g, ' ');\n    const formatError = (error) => typeof error === 'object' ?\n      Object.keys(error).map(key =>\n        error[key] === true ? addSpaces(key) :\n        error[key] === false ? 'Not ' + addSpaces(key) :\n        addSpaces(key) + ': ' + formatError(error[key])\n      ).join(', ') :\n      addSpaces(error.toString());\n    const messages = [];\n    return Object.keys(errors)\n      // Hide 'required' error, unless it is the only one\n      .filter(errorKey => errorKey !== 'required' || Object.keys(errors).length === 1)\n      .map(errorKey =>\n        // If validationMessages is a string, return it\n        typeof validationMessages === 'string' ? validationMessages :\n        // If custom error message is a function, return function result\n        typeof validationMessages[errorKey] === 'function' ?\n          validationMessages[errorKey](errors[errorKey]) :\n        // If custom error message is a string, replace placeholders and return\n        typeof validationMessages[errorKey] === 'string' ?\n          // Does error message have any {{property}} placeholders?\n          !/{{.+?}}/.test(validationMessages[errorKey]) ?\n            validationMessages[errorKey] :\n            // Replace {{property}} placeholders with values\n            Object.keys(errors[errorKey])\n              .reduce((errorMessage, errorProperty) => errorMessage.replace(\n                new RegExp('{{' + errorProperty + '}}', 'g'),\n                errors[errorKey][errorProperty]\n              ), validationMessages[errorKey]) :\n          // If no custom error message, return formatted error data instead\n          addSpaces(errorKey) + ' Error: ' + formatError(errors[errorKey])\n      ).join('<br>');\n  }\n\n  updateValue(ctx: any, value: any): void {\n\n    // Set value of current control\n    ctx.controlValue = value;\n    if (ctx.boundControl) {\n      ctx.formControl.setValue(value);\n      ctx.formControl.markAsDirty();\n    }\n    ctx.layoutNode.value = value;\n\n    // Set values of any related controls in copyValueTo array\n    if (isArray(ctx.options.copyValueTo)) {\n      for (const item of ctx.options.copyValueTo) {\n        const targetControl = getControl(this.formGroup, item);\n        if (isObject(targetControl) && typeof targetControl.setValue === 'function') {\n          targetControl.setValue(value);\n          targetControl.markAsDirty();\n        }\n      }\n    }\n  }\n\n  updateArrayCheckboxList(ctx: any, checkboxList: TitleMapItem[]): void {\n    const formArray = <FormArray>this.getFormControl(ctx);\n\n    // Remove all existing items\n    while (formArray.value.length) { formArray.removeAt(0); }\n\n    // Re-add an item for each checked box\n    const refPointer = removeRecursiveReferences(\n      ctx.layoutNode.dataPointer + '/-', this.dataRecursiveRefMap, this.arrayMap\n    );\n    for (const checkboxItem of checkboxList) {\n      if (checkboxItem.checked) {\n        const newFormControl = buildFormGroup(this.templateRefLibrary[refPointer]);\n        newFormControl.setValue(checkboxItem.value);\n        formArray.push(newFormControl);\n      }\n    }\n    formArray.markAsDirty();\n  }\n\n  getFormControl(ctx: any): AbstractControl {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      ctx.layoutNode.type === '$ref'\n    ) { return null; }\n    return getControl(this.formGroup, this.getDataPointer(ctx));\n  }\n\n  getFormControlValue(ctx: any): AbstractControl {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      ctx.layoutNode.type === '$ref'\n    ) { return null; }\n    const control = getControl(this.formGroup, this.getDataPointer(ctx));\n    return control ? control.value : null;\n  }\n\n  getFormControlGroup(ctx: any): FormArray | FormGroup {\n    if (!ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer)) { return null; }\n    return getControl(this.formGroup, this.getDataPointer(ctx), true);\n  }\n\n  getFormControlName(ctx: any): string {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) || !hasValue(ctx.dataIndex)\n    ) { return null; }\n    return JsonPointer.toKey(this.getDataPointer(ctx));\n  }\n\n  getLayoutArray(ctx: any): any[] {\n    return JsonPointer.get(this.layout, this.getLayoutPointer(ctx), 0, -1);\n  }\n\n  getParentNode(ctx: any): any {\n    return JsonPointer.get(this.layout, this.getLayoutPointer(ctx), 0, -2);\n  }\n\n  getDataPointer(ctx: any): string {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) || !hasValue(ctx.dataIndex)\n    ) { return null; }\n    return JsonPointer.toIndexedPointer(\n      ctx.layoutNode.dataPointer, ctx.dataIndex, this.arrayMap\n    );\n  }\n\n  getLayoutPointer(ctx: any): string {\n    if (!hasValue(ctx.layoutIndex)) { return null; }\n    return '/' + ctx.layoutIndex.join('/items/');\n  }\n\n  isControlBound(ctx: any): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) || !hasValue(ctx.dataIndex)\n    ) { return false; }\n    const controlGroup = this.getFormControlGroup(ctx);\n    const name = this.getFormControlName(ctx);\n    return controlGroup ? hasOwn(controlGroup.controls, name) : false;\n  }\n\n  addItem(ctx: any, name?: string): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.$ref) ||\n      !hasValue(ctx.dataIndex) || !hasValue(ctx.layoutIndex)\n    ) { return false; }\n\n    // Create a new Angular form control from a template in templateRefLibrary\n    const newFormGroup = buildFormGroup(this.templateRefLibrary[ctx.layoutNode.$ref]);\n\n    // Add the new form control to the parent formArray or formGroup\n    if (ctx.layoutNode.arrayItem) { // Add new array item to formArray\n      (<FormArray>this.getFormControlGroup(ctx)).push(newFormGroup);\n    } else { // Add new $ref item to formGroup\n      (<FormGroup>this.getFormControlGroup(ctx))\n        .addControl(name || this.getFormControlName(ctx), newFormGroup);\n    }\n\n    // Copy a new layoutNode from layoutRefLibrary\n    const newLayoutNode = getLayoutNode(ctx.layoutNode, this);\n    newLayoutNode.arrayItem = ctx.layoutNode.arrayItem;\n    if (ctx.layoutNode.arrayItemType) {\n      newLayoutNode.arrayItemType = ctx.layoutNode.arrayItemType;\n    } else {\n      delete newLayoutNode.arrayItemType;\n    }\n    if (name) {\n      newLayoutNode.name = name;\n      newLayoutNode.dataPointer += '/' + JsonPointer.escape(name);\n      newLayoutNode.options.title = fixTitle(name);\n    }\n\n    // Add the new layoutNode to the form layout\n    JsonPointer.insert(this.layout, this.getLayoutPointer(ctx), newLayoutNode);\n\n    return true;\n  }\n\n  moveArrayItem(ctx: any, oldIndex: number, newIndex: number): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      !hasValue(ctx.dataIndex) || !hasValue(ctx.layoutIndex) ||\n      !isDefined(oldIndex) || !isDefined(newIndex) || oldIndex === newIndex\n    ) { return false; }\n\n    // Move item in the formArray\n    const formArray = <FormArray>this.getFormControlGroup(ctx);\n    const arrayItem = formArray.at(oldIndex);\n    formArray.removeAt(oldIndex);\n    formArray.insert(newIndex, arrayItem);\n    formArray.updateValueAndValidity();\n\n    // Move layout item\n    const layoutArray = this.getLayoutArray(ctx);\n    layoutArray.splice(newIndex, 0, layoutArray.splice(oldIndex, 1)[0]);\n    return true;\n  }\n\n  removeItem(ctx: any): boolean {\n    if (\n      !ctx.layoutNode || !isDefined(ctx.layoutNode.dataPointer) ||\n      !hasValue(ctx.dataIndex) || !hasValue(ctx.layoutIndex)\n    ) { return false; }\n\n    // Remove the Angular form control from the parent formArray or formGroup\n    if (ctx.layoutNode.arrayItem) { // Remove array item from formArray\n      (<FormArray>this.getFormControlGroup(ctx))\n        .removeAt(ctx.dataIndex[ctx.dataIndex.length - 1]);\n    } else { // Remove $ref item from formGroup\n      (<FormGroup>this.getFormControlGroup(ctx))\n        .removeControl(this.getFormControlName(ctx));\n    }\n\n    // Remove layoutNode from layout\n    JsonPointer.remove(this.layout, this.getLayoutPointer(ctx));\n    return true;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'add-reference-widget',\n  template: `\n    <button *ngIf=\"showAddButton\"\n      [class]=\"options?.fieldHtmlClass || ''\"\n      [disabled]=\"options?.readonly\"\n      (click)=\"addItem($event)\">\n      <span *ngIf=\"options?.icon\" [class]=\"options?.icon\"></span>\n      <span *ngIf=\"options?.title\" [innerHTML]=\"buttonText\"></span>\n    </button>`,\n    changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class AddReferenceComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  previousLayoutIndex: number[];\n  previousDataIndex: number[];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n  }\n\n  get showAddButton(): boolean {\n    return !this.layoutNode.arrayItem ||\n      this.layoutIndex[this.layoutIndex.length - 1] < this.options.maxItems;\n  }\n\n  addItem(event) {\n    event.preventDefault();\n    this.jsf.addItem(this);\n  }\n\n  get buttonText(): string {\n    const parent: any = {\n      dataIndex: this.dataIndex.slice(0, -1),\n      layoutIndex: this.layoutIndex.slice(0, -1),\n      layoutNode: this.jsf.getParentNode(this)\n    };\n    return parent.layoutNode.add ||\n      this.jsf.setArrayItemTitle(parent, this.layoutNode, this.itemCount);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  selector: 'one-of-widget',\n  template: ``,\n})\nexport class OneOfComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'button-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <button\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [name]=\"controlName\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (click)=\"updateValue($event)\">\n        <span *ngIf=\"options?.icon || options?.title\"\n          [class]=\"options?.icon\"\n          [innerHTML]=\"options?.title\"></span>\n      </button>\n    </div>`,\n})\nexport class ButtonComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    if (typeof this.options.onClick === 'function') {\n      this.options.onClick(event);\n    } else {\n      this.jsf.updateValue(this, event.target.value);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'checkbox-widget',\n  template: `\n    <label\n      [attr.for]=\"'control' + layoutNode?._id\"\n      [class]=\"options?.itemLabelHtmlClass || ''\">\n      <input *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [class]=\"(options?.fieldHtmlClass || '') + (isChecked ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        type=\"checkbox\">\n      <input *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [checked]=\"isChecked ? 'checked' : null\"\n        [class]=\"(options?.fieldHtmlClass || '') + (isChecked ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [value]=\"controlValue\"\n        type=\"checkbox\"\n        (change)=\"updateValue($event)\">\n      <span *ngIf=\"options?.title\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </label>`,\n})\nexport class CheckboxComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  trueValue: any = true;\n  falseValue: any = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (this.controlValue === null || this.controlValue === undefined) {\n      this.controlValue = this.options.title;\n    }\n  }\n\n  updateValue(event) {\n    event.preventDefault();\n    this.jsf.updateValue(this, event.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  get isChecked() {\n    return this.jsf.getFormControlValue(this) === this.trueValue;\n  }\n}\n","import * as _ from 'lodash';\n\n/**\n * 'convertSchemaToDraft6' function\n *\n * Converts a JSON Schema from draft 1 through 4 format to draft 6 format\n *\n * Inspired by on geraintluff's JSON Schema 3 to 4 compatibility function:\n *   https://github.com/geraintluff/json-schema-compatibility\n * Also uses suggestions from AJV's JSON Schema 4 to 6 migration guide:\n *   https://github.com/epoberezkin/ajv/releases/tag/5.0.0\n * And additional details from the official JSON Schema documentation:\n *   http://json-schema.org\n *\n * //  { object } originalSchema - JSON schema (draft 1, 2, 3, 4, or 6)\n * //  { OptionObject = {} } options - options: parent schema changed?, schema draft number?\n * // { object } - JSON schema (draft 6)\n */\nexport interface OptionObject { changed?: boolean, draft?: number };\nexport function convertSchemaToDraft6(schema, options: OptionObject = {}) {\n  let draft: number = options.draft || null;\n  let changed: boolean = options.changed || false;\n\n  if (typeof schema !== 'object') { return schema; }\n  if (typeof schema.map === 'function') {\n    return [ ...schema.map(subSchema => convertSchemaToDraft6(subSchema, { changed, draft })) ];\n  }\n  let newSchema = { ...schema };\n  const simpleTypes = ['array', 'boolean', 'integer', 'null', 'number', 'object', 'string'];\n\n  if (typeof newSchema.$schema === 'string' &&\n    /http\\:\\/\\/json\\-schema\\.org\\/draft\\-0\\d\\/schema\\#/.test(newSchema.$schema)\n  ) {\n    draft = newSchema.$schema[30];\n  }\n\n  // Convert v1-v2 'contentEncoding' to 'media.binaryEncoding'\n  // Note: This is only used in JSON hyper-schema (not regular JSON schema)\n  if (newSchema.contentEncoding) {\n    newSchema.media = { binaryEncoding: newSchema.contentEncoding };\n    delete newSchema.contentEncoding;\n    changed = true;\n  }\n\n  // Convert v1-v3 'extends' to 'allOf'\n  if (typeof newSchema.extends === 'object') {\n    newSchema.allOf = typeof newSchema.extends.map === 'function' ?\n      newSchema.extends.map(subSchema => convertSchemaToDraft6(subSchema, { changed, draft })) :\n      [ convertSchemaToDraft6(newSchema.extends, { changed, draft }) ];\n    delete newSchema.extends;\n    changed = true;\n  }\n\n  // Convert v1-v3 'disallow' to 'not'\n  if (newSchema.disallow) {\n    if (typeof newSchema.disallow === 'string') {\n      newSchema.not = { type: newSchema.disallow };\n    } else if (typeof newSchema.disallow.map === 'function') {\n      newSchema.not = {\n        anyOf: newSchema.disallow\n          .map(type => typeof type === 'object' ? type : { type })\n      };\n    }\n    delete newSchema.disallow;\n    changed = true;\n  }\n\n  // Convert v3 string 'dependencies' properties to arrays\n  if (typeof newSchema.dependencies === 'object' &&\n    Object.keys(newSchema.dependencies)\n      .some(key => typeof newSchema.dependencies[key] === 'string')\n  ) {\n    newSchema.dependencies = { ...newSchema.dependencies };\n    Object.keys(newSchema.dependencies)\n      .filter(key => typeof newSchema.dependencies[key] === 'string')\n      .forEach(key => newSchema.dependencies[key] = [ newSchema.dependencies[key] ]);\n    changed = true;\n  }\n\n  // Convert v1 'maxDecimal' to 'multipleOf'\n  if (typeof newSchema.maxDecimal === 'number') {\n    newSchema.multipleOf = 1 / Math.pow(10, newSchema.maxDecimal);\n    delete newSchema.divisibleBy;\n    changed = true;\n    if (!draft || draft === 2) { draft = 1; }\n  }\n\n  // Convert v2-v3 'divisibleBy' to 'multipleOf'\n  if (typeof newSchema.divisibleBy === 'number') {\n    newSchema.multipleOf = newSchema.divisibleBy;\n    delete newSchema.divisibleBy;\n    changed = true;\n  }\n\n  // Convert v1-v2 boolean 'minimumCanEqual' to 'exclusiveMinimum'\n  if (typeof newSchema.minimum === 'number' && newSchema.minimumCanEqual === false) {\n    newSchema.exclusiveMinimum = newSchema.minimum;\n    delete newSchema.minimum;\n    changed = true;\n    if (!draft) { draft = 2; }\n  } else if (typeof newSchema.minimumCanEqual === 'boolean') {\n    delete newSchema.minimumCanEqual;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Convert v3-v4 boolean 'exclusiveMinimum' to numeric\n  if (typeof newSchema.minimum === 'number' && newSchema.exclusiveMinimum === true) {\n    newSchema.exclusiveMinimum = newSchema.minimum;\n    delete newSchema.minimum;\n    changed = true;\n  } else if (typeof newSchema.exclusiveMinimum === 'boolean') {\n    delete newSchema.exclusiveMinimum;\n    changed = true;\n  }\n\n  // Convert v1-v2 boolean 'maximumCanEqual' to 'exclusiveMaximum'\n  if (typeof newSchema.maximum === 'number' && newSchema.maximumCanEqual === false) {\n    newSchema.exclusiveMaximum = newSchema.maximum;\n    delete newSchema.maximum;\n    changed = true;\n    if (!draft) { draft = 2; }\n  } else if (typeof newSchema.maximumCanEqual === 'boolean') {\n    delete newSchema.maximumCanEqual;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Convert v3-v4 boolean 'exclusiveMaximum' to numeric\n  if (typeof newSchema.maximum === 'number' && newSchema.exclusiveMaximum === true) {\n    newSchema.exclusiveMaximum = newSchema.maximum;\n    delete newSchema.maximum;\n    changed = true;\n  } else if (typeof newSchema.exclusiveMaximum === 'boolean') {\n    delete newSchema.exclusiveMaximum;\n    changed = true;\n  }\n\n  // Search object 'properties' for 'optional', 'required', and 'requires' items,\n  // and convert them into object 'required' arrays and 'dependencies' objects\n  if (typeof newSchema.properties === 'object') {\n    const properties = { ...newSchema.properties };\n    const requiredKeys = Array.isArray(newSchema.required) ?\n      new Set(newSchema.required) : new Set();\n\n    // Convert v1-v2 boolean 'optional' properties to 'required' array\n    if (draft === 1 || draft === 2 ||\n      Object.keys(properties).some(key => properties[key].optional === true)\n    ) {\n      Object.keys(properties)\n        .filter(key => properties[key].optional !== true)\n        .forEach(key => requiredKeys.add(key));\n      changed = true;\n      if (!draft) { draft = 2; }\n    }\n\n    // Convert v3 boolean 'required' properties to 'required' array\n    if (Object.keys(properties).some(key => properties[key].required === true)) {\n      Object.keys(properties)\n        .filter(key => properties[key].required === true)\n        .forEach(key => requiredKeys.add(key));\n      changed = true;\n    }\n\n    if (requiredKeys.size) { newSchema.required = Array.from(requiredKeys); }\n\n    // Convert v1-v2 array or string 'requires' properties to 'dependencies' object\n    if (Object.keys(properties).some(key => properties[key].requires)) {\n      const dependencies = typeof newSchema.dependencies === 'object' ?\n        { ...newSchema.dependencies } : {};\n      Object.keys(properties)\n        .filter(key => properties[key].requires)\n        .forEach(key => dependencies[key] =\n          typeof properties[key].requires === 'string' ?\n            [ properties[key].requires ] : properties[key].requires\n        );\n      newSchema.dependencies = dependencies;\n      changed = true;\n      if (!draft) { draft = 2; }\n    }\n\n    newSchema.properties = properties;\n  }\n\n  // Revove v1-v2 boolean 'optional' key\n  if (typeof newSchema.optional === 'boolean') {\n    delete newSchema.optional;\n    changed = true;\n    if (!draft) { draft = 2; }\n  }\n\n  // Revove v1-v2 'requires' key\n  if (newSchema.requires) {\n    delete newSchema.requires;\n  }\n\n  // Revove v3 boolean 'required' key\n  if (typeof newSchema.required === 'boolean') {\n    delete newSchema.required;\n  }\n\n  // Convert id to $id\n  if (typeof newSchema.id === 'string' && !newSchema.$id) {\n    if (newSchema.id.slice(-1) === '#') {\n      newSchema.id = newSchema.id.slice(0, -1);\n    }\n    newSchema.$id = newSchema.id + '-CONVERTED-TO-DRAFT-06#';\n    delete newSchema.id;\n    changed = true;\n  }\n\n  // Check if v1-v3 'any' or object types will be converted\n  if (newSchema.type && (typeof newSchema.type.every === 'function' ?\n    !newSchema.type.every(type => simpleTypes.includes(type)) :\n    !simpleTypes.includes(newSchema.type)\n  )) {\n    changed = true;\n  }\n\n  // If schema changed, update or remove $schema identifier\n  if (typeof newSchema.$schema === 'string' &&\n    /http\\:\\/\\/json\\-schema\\.org\\/draft\\-0[1-4]\\/schema\\#/.test(newSchema.$schema)\n  ) {\n    newSchema.$schema = 'http://json-schema.org/draft-06/schema#';\n    changed = true;\n  } else if (changed && typeof newSchema.$schema === 'string') {\n    const addToDescription = 'Converted to draft 6 from ' + newSchema.$schema;\n    if (typeof newSchema.description === 'string' && newSchema.description.length) {\n      newSchema.description += '\\n' + addToDescription;\n    } else {\n      newSchema.description = addToDescription\n    }\n    delete newSchema.$schema;\n  }\n\n  // Convert v1-v3 'any' and object types\n  if (newSchema.type && (typeof newSchema.type.every === 'function' ?\n    !newSchema.type.every(type => simpleTypes.includes(type)) :\n    !simpleTypes.includes(newSchema.type)\n  )) {\n    if (newSchema.type.length === 1) { newSchema.type = newSchema.type[0]; }\n    if (typeof newSchema.type === 'string') {\n      // Convert string 'any' type to array of all standard types\n      if (newSchema.type === 'any') {\n        newSchema.type = simpleTypes;\n      // Delete non-standard string type\n      } else {\n        delete newSchema.type;\n      }\n    } else if (typeof newSchema.type === 'object') {\n      if (typeof newSchema.type.every === 'function') {\n        // If array of strings, only allow standard types\n        if (newSchema.type.every(type => typeof type === 'string')) {\n          newSchema.type = newSchema.type.some(type => type === 'any') ?\n            newSchema.type = simpleTypes :\n            newSchema.type.filter(type => simpleTypes.includes(type));\n        // If type is an array with objects, convert the current schema to an 'anyOf' array\n        } else if (newSchema.type.length > 1) {\n          const arrayKeys = [ 'additionalItems', 'items', 'maxItems', 'minItems', 'uniqueItems', 'contains'];\n          const numberKeys = [ 'multipleOf', 'maximum', 'exclusiveMaximum', 'minimum', 'exclusiveMinimum'];\n          const objectKeys = [ 'maxProperties', 'minProperties', 'required', 'additionalProperties',\n            'properties', 'patternProperties', 'dependencies', 'propertyNames'];\n          const stringKeys = [ 'maxLength', 'minLength', 'pattern', 'format'];\n          const filterKeys = {\n            'array':   [ ...numberKeys, ...objectKeys, ...stringKeys ],\n            'integer': [  ...arrayKeys, ...objectKeys, ...stringKeys ],\n            'number':  [  ...arrayKeys, ...objectKeys, ...stringKeys ],\n            'object':  [  ...arrayKeys, ...numberKeys, ...stringKeys ],\n            'string':  [  ...arrayKeys, ...numberKeys, ...objectKeys ],\n            'all':     [  ...arrayKeys, ...numberKeys, ...objectKeys, ...stringKeys ],\n          };\n          const anyOf = [];\n          for (const type of newSchema.type) {\n            const newType = typeof type === 'string' ? { type } : { ...type };\n            Object.keys(newSchema)\n              .filter(key => !newType.hasOwnProperty(key) &&\n                ![ ...(filterKeys[newType.type] || filterKeys.all), 'type', 'default' ]\n                  .includes(key)\n              )\n              .forEach(key => newType[key] = newSchema[key]);\n            anyOf.push(newType);\n          }\n          newSchema = newSchema.hasOwnProperty('default') ?\n            { anyOf, default: newSchema.default } : { anyOf };\n        // If type is an object, merge it with the current schema\n        } else {\n          const typeSchema = newSchema.type;\n          delete newSchema.type;\n          Object.assign(newSchema, typeSchema);\n        }\n      }\n    } else {\n      delete newSchema.type;\n    }\n  }\n\n  // Convert sub schemas\n  Object.keys(newSchema)\n    .filter(key => typeof newSchema[key] === 'object')\n    .forEach(key => {\n      if (\n        [ 'definitions', 'dependencies', 'properties', 'patternProperties' ]\n          .includes(key) && typeof newSchema[key].map !== 'function'\n      ) {\n        const newKey = {};\n        Object.keys(newSchema[key]).forEach(subKey => newKey[subKey] =\n          convertSchemaToDraft6(newSchema[key][subKey], { changed, draft })\n        );\n        newSchema[key] = newKey;\n      } else if (\n        [ 'items', 'additionalItems', 'additionalProperties',\n          'allOf', 'anyOf', 'oneOf', 'not' ].includes(key)\n      ) {\n        newSchema[key] = convertSchemaToDraft6(newSchema[key], { changed, draft });\n      } else {\n        newSchema[key] = _.cloneDeep(newSchema[key]);\n      }\n    });\n\n  return newSchema;\n}\n","/**\n * 'dateToString' function\n *\n * //  { Date | string } date\n * //   options\n * // { string }\n */\nexport function dateToString(date, options: any = {}) {\n  const dateFormat = options.dateFormat || 'YYYY-MM-DD';\n  // TODO: Use options.locale to change default format and names\n  // const locale = options.locale || 'en-US';\n  if (typeof date === 'string') { date = stringToDate(date); }\n  if (Object.prototype.toString.call(date) !== '[object Date]') { return null; }\n  const longMonths = ['January', 'February', 'March', 'April', 'May', 'June',\n    'July', 'August', 'September', 'October', 'November', 'December'];\n  const shortMonths = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const longDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  const shortDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return dateFormat\n    .replace(/YYYY/ig, date.getFullYear() + '')\n    .replace(/YY/ig, (date.getFullYear() + '').slice(-2))\n    .replace(/MMMM/ig, longMonths[date.getMonth()])\n    .replace(/MMM/ig, shortMonths[date.getMonth()])\n    .replace(/MM/ig, ('0' + (date.getMonth() + 1)).slice(-2))\n    .replace(/M/ig, (date.getMonth() + 1) + '')\n    .replace(/DDDD/ig, longDays[date.getDay()])\n    .replace(/DDD/ig, shortDays[date.getDay()])\n    .replace(/DD/ig, ('0' + date.getDate()).slice(-2))\n    .replace(/D/ig, date.getDate() + '')\n    .replace(/S/ig, ordinal(date.getDate()));\n}\n\nexport function ordinal(number: number|string): string {\n  if (typeof number === 'number') { number = number + ''; }\n  const last = number.slice(-1);\n  const nextToLast = number.slice(-2, 1);\n  return (nextToLast !== '1' && { '1': 'st', '2': 'nd', '3': 'rd' }[last]) || 'th';\n}\n\n/**\n * 'stringToDate' function\n *\n * //  { string } dateString\n * // { Date }\n */\nexport function stringToDate(dateString) {\n  const getDate: string = findDate(dateString);\n  if (!getDate) { return null; }\n  let dateParts: number[] = [];\n  // Split x-y-z to [x, y, z]\n  if (/^\\d+[^\\d]\\d+[^\\d]\\d+$/.test(getDate)) {\n    dateParts = getDate.split(/[^\\d]/).map(part => +part);\n  // Split xxxxyyzz to [xxxx, yy, zz]\n  } else if (/^\\d{8}$/.test(getDate)) {\n    dateParts = [+getDate.slice(0, 4), +getDate.slice(4, 6), +getDate.slice(6)];\n  }\n  const thisYear = +(new Date().getFullYear() + '').slice(-2);\n  // Check for [YYYY, MM, DD]\n  if (dateParts[0] > 1000 && dateParts[0] < 2100 && dateParts[1] <= 12 && dateParts[2] <= 31) {\n    return new Date(dateParts[0], dateParts[1] - 1, dateParts[2]);\n  // Check for [MM, DD, YYYY]\n  } else if (dateParts[0] <= 12 && dateParts[1] <= 31 && dateParts[2] > 1000 && dateParts[2] < 2100) {\n    return new Date(dateParts[2], dateParts[0] - 1, dateParts[1]);\n  // Check for [MM, DD, YY]\n  } else if (dateParts[0] <= 12 && dateParts[1] <= 31 && dateParts[2] < 100) {\n    const year = (dateParts[2] <= thisYear ? 2000 : 1900) + dateParts[2];\n    return new Date(year, dateParts[0] - 1, dateParts[1]);\n  // Check for [YY, MM, DD]\n  } else if (dateParts[0] < 100 && dateParts[1] <= 12 && dateParts[2] <= 31) {\n    const year = (dateParts[0] <= thisYear ? 2000 : 1900) + dateParts[0];\n    return new Date(year, dateParts[1] - 1, dateParts[2]);\n  }\n  return null;\n}\n\n/**\n * 'findDate' function\n *\n * //  { string } text\n * // { string }\n */\nexport function findDate(text) {\n  if (!text) { return null; }\n  let foundDate: any[];\n  // Match ...YYYY-MM-DD...\n  foundDate = text.match(/(?:19|20)\\d\\d[-_\\\\\\/\\. ](?:0?\\d|1[012])[-_\\\\\\/\\. ](?:[012]?\\d|3[01])(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match ...MM-DD-YYYY...\n  foundDate = text.match(/(?:[012]?\\d|3[01])[-_\\\\\\/\\. ](?:0?\\d|1[012])[-_\\\\\\/\\. ](?:19|20)\\d\\d(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match MM-DD-YY...\n  foundDate = text.match(/^(?:[012]?\\d|3[01])[-_\\\\\\/\\. ](?:0?\\d|1[012])[-_\\\\\\/\\. ]\\d\\d(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match YY-MM-DD...\n  foundDate = text.match(/^\\d\\d[-_\\\\\\/\\. ](?:[012]?\\d|3[01])[-_\\\\\\/\\. ](?:0?\\d|1[012])(?!\\d)/);\n  if (foundDate) { return foundDate[0]; }\n  // Match YYYYMMDD...\n  foundDate = text.match(/^(?:19|20)\\d\\d(?:0\\d|1[012])(?:[012]\\d|3[01])/);\n  if (foundDate) { return foundDate[0]; }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormArray, AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService, TitleMapItem } from '../json-schema-form.service';\nimport { buildTitleMap } from '../shared';\n\n@Component({\n  selector: 'checkboxes-widget',\n  template: `\n    <label *ngIf=\"options?.title\"\n      [class]=\"options?.labelHtmlClass || ''\"\n      [style.display]=\"options?.notitle ? 'none' : ''\"\n      [innerHTML]=\"options?.title\"></label>\n\n    <!-- 'horizontal' = checkboxes-inline or checkboxbuttons -->\n    <div *ngIf=\"layoutOrientation === 'horizontal'\" [class]=\"options?.htmlClass || ''\">\n      <label *ngFor=\"let checkboxItem of checkboxList\"\n        [attr.for]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\n        [class]=\"(options?.itemLabelHtmlClass || '') + (checkboxItem.checked ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\">\n        <input type=\"checkbox\"\n          [attr.required]=\"options?.required\"\n          [checked]=\"checkboxItem.checked\"\n          [class]=\"options?.fieldHtmlClass || ''\"\n          [disabled]=\"controlDisabled\"\n          [id]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\n          [name]=\"checkboxItem?.name\"\n          [readonly]=\"options?.readonly ? 'readonly' : null\"\n          [value]=\"checkboxItem.value\"\n          (change)=\"updateValue($event)\">\n        <span [innerHTML]=\"checkboxItem.name\"></span>\n      </label>\n    </div>\n\n    <!-- 'vertical' = regular checkboxes -->\n    <div *ngIf=\"layoutOrientation === 'vertical'\">\n      <div *ngFor=\"let checkboxItem of checkboxList\" [class]=\"options?.htmlClass || ''\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id + '/' + checkboxItem.value\"\n          [class]=\"(options?.itemLabelHtmlClass || '') + (checkboxItem.checked ?\n            (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n            (' ' + (options?.style?.unselected || '')))\">\n          <input type=\"checkbox\"\n            [attr.required]=\"options?.required\"\n            [checked]=\"checkboxItem.checked\"\n            [class]=\"options?.fieldHtmlClass || ''\"\n            [disabled]=\"controlDisabled\"\n            [id]=\"options?.name + '/' + checkboxItem.value\"\n            [name]=\"checkboxItem?.name\"\n            [readonly]=\"options?.readonly ? 'readonly' : null\"\n            [value]=\"checkboxItem.value\"\n            (change)=\"updateValue($event)\">\n          <span [innerHTML]=\"checkboxItem?.name\"></span>\n        </label>\n      </div>\n    </div>`,\n})\nexport class CheckboxesComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  layoutOrientation: string;\n  formArray: AbstractControl;\n  checkboxList: TitleMapItem[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.layoutOrientation = (this.layoutNode.type === 'checkboxes-inline' ||\n      this.layoutNode.type === 'checkboxbuttons') ? 'horizontal' : 'vertical';\n    this.jsf.initializeControl(this);\n    this.checkboxList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames, this.options.enum, true\n    );\n    if (this.boundControl) {\n      const formArray = this.jsf.getFormControl(this);\n      this.checkboxList.forEach(checkboxItem =>\n        checkboxItem.checked = formArray.value.includes(checkboxItem.value)\n      );\n    }\n  }\n\n  updateValue(event) {\n    for (let checkboxItem of this.checkboxList) {\n      if (event.target.value === checkboxItem.value) {\n        checkboxItem.checked = event.target.checked;\n      }\n    }\n    if (this.boundControl) {\n      this.jsf.updateArrayCheckboxList(this, this.checkboxList);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  selector: 'file-widget',\n  template: ``,\n})\nexport class FileComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'input-widget',\n  template: `\n    <div [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <input *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [type]=\"layoutNode?.type\">\n      <input *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\">\n        <datalist *ngIf=\"options?.typeahead?.source\"\n          [id]=\"'control' + layoutNode?._id + 'Autocomplete'\">\n          <option *ngFor=\"let word of options?.typeahead?.source\" [value]=\"word\">\n        </datalist>\n    </div>`,\n})\nexport class InputComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: string;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  autoCompleteList: string[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'message-widget',\n  template: `\n    <span *ngIf=\"message\"\n      [class]=\"options?.labelHtmlClass || ''\"\n      [innerHTML]=\"message\"></span>`,\n})\nexport class MessageComponent implements OnInit {\n  options: any;\n  message: string = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.message = this.options.help || this.options.helpvalue ||\n      this.options.msg || this.options.message;\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'none-widget',\n  template: ``,\n})\nexport class NoneComponent {\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'number-widget',\n  template: `\n    <div [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <input *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [title]=\"lastValidNumber\"\n        [type]=\"layoutNode?.type === 'range' ? 'range' : 'number'\">\n      <input *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.required]=\"options?.required\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [title]=\"lastValidNumber\"\n        [type]=\"layoutNode?.type === 'range' ? 'range' : 'number'\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\">\n      <span *ngIf=\"layoutNode?.type === 'range'\" [innerHTML]=\"controlValue\"></span>\n    </div>`,\n})\nexport class NumberComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  allowNegative = true;\n  allowDecimal = true;\n  allowExponents = false;\n  lastValidNumber = '';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (this.layoutNode.dataType === 'integer') { this.allowDecimal = false; }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\nimport { buildTitleMap } from '../shared';\n\n@Component({\n  selector: 'radios-widget',\n  template: `\n    <label *ngIf=\"options?.title\"\n      [attr.for]=\"'control' + layoutNode?._id\"\n      [class]=\"options?.labelHtmlClass || ''\"\n      [style.display]=\"options?.notitle ? 'none' : ''\"\n      [innerHTML]=\"options?.title\"></label>\n\n    <!-- 'horizontal' = radios-inline or radiobuttons -->\n    <div *ngIf=\"layoutOrientation === 'horizontal'\"\n      [class]=\"options?.htmlClass || ''\">\n      <label *ngFor=\"let radioItem of radiosList\"\n        [attr.for]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n        [class]=\"(options?.itemLabelHtmlClass || '') +\n          ((controlValue + '' === radioItem?.value + '') ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + (options?.style?.unselected || '')))\">\n        <input type=\"radio\"\n          [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n          [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n          [attr.required]=\"options?.required\"\n          [checked]=\"radioItem?.value === controlValue\"\n          [class]=\"options?.fieldHtmlClass || ''\"\n          [disabled]=\"controlDisabled\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n          [name]=\"controlName\"\n          [value]=\"radioItem?.value\"\n          (change)=\"updateValue($event)\">\n        <span [innerHTML]=\"radioItem?.name\"></span>\n      </label>\n    </div>\n\n    <!-- 'vertical' = regular radios -->\n    <div *ngIf=\"layoutOrientation !== 'horizontal'\">\n      <div *ngFor=\"let radioItem of radiosList\"\n        [class]=\"options?.htmlClass || ''\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n          [class]=\"(options?.itemLabelHtmlClass || '') +\n            ((controlValue + '' === radioItem?.value + '') ?\n            (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n            (' ' + (options?.style?.unselected || '')))\">\n          <input type=\"radio\"\n            [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n            [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n            [attr.required]=\"options?.required\"\n            [checked]=\"radioItem?.value === controlValue\"\n            [class]=\"options?.fieldHtmlClass || ''\"\n            [disabled]=\"controlDisabled\"\n            [id]=\"'control' + layoutNode?._id + '/' + radioItem?.value\"\n            [name]=\"controlName\"\n            [value]=\"radioItem?.value\"\n            (change)=\"updateValue($event)\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </label>\n      </div>\n    </div>`,\n})\nexport class RadiosComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  layoutOrientation = 'vertical';\n  radiosList: any[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    if (this.layoutNode.type === 'radios-inline' ||\n      this.layoutNode.type === 'radiobuttons'\n    ) {\n      this.layoutOrientation = 'horizontal';\n    }\n    this.radiosList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, true\n    );\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, Host } from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\nimport { hasValue, JsonPointer } from '../shared';\n\n@Component({\n  selector: 'root-widget',\n  template: `\n    <div *ngFor=\"let layoutItem of layout; let i = index\"\n      [class.form-flex-item]=\"isFlexItem\"\n      [style.align-self]=\"(layoutItem.options || {})['align-self']\"\n      [style.flex-basis]=\"getFlexAttribute(layoutItem, 'flex-basis')\"\n      [style.flex-grow]=\"getFlexAttribute(layoutItem, 'flex-grow')\"\n      [style.flex-shrink]=\"getFlexAttribute(layoutItem, 'flex-shrink')\"\n      [style.order]=\"(layoutItem.options || {}).order\">\n      <div\n        [dataIndex]=\"layoutItem?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutItem\"\n        [orderable]=\"isDraggable(layoutItem)\">\n        <select-framework-widget *ngIf=\"showWidget(layoutItem)\"\n          [dataIndex]=\"layoutItem?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\n          [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n          [layoutNode]=\"layoutItem\"></select-framework-widget>\n      </div>\n    </div>`,\n  styles: [`\n    [draggable=true] {\n      transition: all 150ms cubic-bezier(.4, 0, .2, 1);\n    }\n    [draggable=true]:hover {\n      cursor: move;\n      box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);\n      position: relative; z-index: 10;\n      margin-top: -1px;\n      margin-left: -1px;\n      margin-right: 1px;\n      margin-bottom: 1px;\n    }\n    [draggable=true].drag-target-top {\n      box-shadow: 0 -2px 0 #000;\n      position: relative; z-index: 20;\n    }\n    [draggable=true].drag-target-bottom {\n      box-shadow: 0 2px 0 #000;\n      position: relative; z-index: 20;\n    }\n  `],\n})\nexport class RootComponent {\n  options: any;\n  @Input() dataIndex: number[];\n  @Input() layoutIndex: number[];\n  @Input() layout: any[];\n  @Input() isOrderable: boolean;\n  @Input() isFlexItem = false;\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  isDraggable(node: any): boolean {\n    return node.arrayItem && node.type !== '$ref' &&\n      node.arrayItemType === 'list' && this.isOrderable !== false;\n  }\n\n  // Set attributes for flexbox child\n  // (container attributes are set in section.component)\n  getFlexAttribute(node: any, attribute: string) {\n    const index = ['flex-grow', 'flex-shrink', 'flex-basis'].indexOf(attribute);\n    return ((node.options || {}).flex || '').split(/\\s+/)[index] ||\n      (node.options || {})[attribute] || ['1', '1', 'auto'][index];\n  }\n\n  showWidget(layoutNode: any): boolean {\n    return this.jsf.evaluateCondition(layoutNode, this.dataIndex);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { toTitleCase } from '../shared';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'section-widget',\n  template: `\n    <div *ngIf=\"containerType === 'div'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\">\n      <label *ngIf=\"sectionTitle\"\n        class=\"legend\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></label>\n      <root-widget *ngIf=\"expanded\"\n        [dataIndex]=\"dataIndex\"\n        [layout]=\"layoutNode.items\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [isOrderable]=\"options?.orderable\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"></root-widget>\n    </div>\n    <fieldset *ngIf=\"containerType === 'fieldset'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\"\n      [disabled]=\"options?.readonly\">\n      <legend *ngIf=\"sectionTitle\"\n        class=\"legend\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></legend>\n      <div *ngIf=\"options?.messageLocation !== 'bottom'\">\n        <p *ngIf=\"options?.description\"\n        class=\"help-block\"\n        [class]=\"options?.labelHelpBlockClass || ''\"\n        [innerHTML]=\"options?.description\"></p>\n      </div>\n      <root-widget *ngIf=\"expanded\"\n        [dataIndex]=\"dataIndex\"\n        [layout]=\"layoutNode.items\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [isOrderable]=\"options?.orderable\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"></root-widget>\n      <div *ngIf=\"options?.messageLocation === 'bottom'\">\n        <p *ngIf=\"options?.description\"\n        class=\"help-block\"\n        [class]=\"options?.labelHelpBlockClass || ''\"\n        [innerHTML]=\"options?.description\"></p>\n      </div>\n    </fieldset>`,\n  styles: [`\n    .legend { font-weight: bold; }\n    .expandable > legend:before, .expandable > label:before  { content: 'â¶'; padding-right: .3em; }\n    .expanded > legend:before, .expanded > label:before  { content: 'â¼'; padding-right: .2em; }\n  `],\n})\nexport class SectionComponent implements OnInit {\n  options: any;\n  expanded = true;\n  containerType: string;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  get sectionTitle() {\n    return this.options.notitle ? null : this.jsf.setItemTitle(this);\n  }\n\n  ngOnInit() {\n    this.jsf.initializeControl(this);\n    this.options = this.layoutNode.options || {};\n    this.expanded = typeof this.options.expanded === 'boolean' ?\n      this.options.expanded : !this.options.expandable;\n    switch (this.layoutNode.type) {\n      case 'fieldset': case 'array': case 'tab': case 'advancedfieldset':\n      case 'authfieldset': case 'optionfieldset': case 'selectfieldset':\n        this.containerType = 'fieldset';\n      break;\n      default: // 'div', 'flex', 'section', 'conditional', 'actions', 'tagsinput'\n        this.containerType = 'div';\n      break;\n    }\n  }\n\n  toggleExpanded() {\n    if (this.options.expandable) { this.expanded = !this.expanded; }\n  }\n\n  // Set attributes for flexbox container\n  // (child attributes are set in root.component)\n  getFlexAttribute(attribute: string) {\n    const flexActive: boolean =\n      this.layoutNode.type === 'flex' ||\n      !!this.options.displayFlex ||\n      this.options.display === 'flex';\n    if (attribute !== 'flex' && !flexActive) { return null; }\n    switch (attribute) {\n      case 'is-flex':\n        return flexActive;\n      case 'display':\n        return flexActive ? 'flex' : 'initial';\n      case 'flex-direction': case 'flex-wrap':\n        const index = ['flex-direction', 'flex-wrap'].indexOf(attribute);\n        return (this.options['flex-flow'] || '').split(/\\s+/)[index] ||\n          this.options[attribute] || ['column', 'nowrap'][index];\n      case 'justify-content': case 'align-items': case 'align-content':\n        return this.options[attribute];\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\nimport { buildTitleMap, isArray } from '../shared';\n\n@Component({\n  selector: 'select-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <select *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <option *ngIf=\"!isArray(selectItem?.items)\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </option>\n          <optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <option *ngFor=\"let subItem of selectItem.items\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </option>\n          </optgroup>\n        </ng-template>\n      </select>\n      <select *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        (change)=\"updateValue($event)\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <option *ngIf=\"!isArray(selectItem?.items)\"\n            [selected]=\"selectItem?.value === controlValue\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </option>\n          <optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <option *ngFor=\"let subItem of selectItem.items\"\n              [attr.selected]=\"subItem?.value === controlValue\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </option>\n          </optgroup>\n        </ng-template>\n      </select>\n    </div>`,\n})\nexport class SelectComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  selectList: any[] = [];\n  isArray = isArray;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.selectList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, !!this.options.required, !!this.options.flatList\n    );\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import {\n  Component, ComponentFactoryResolver, ComponentRef, Input,\n  OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'select-framework-widget',\n  template: `<div #widgetContainer></div>`,\n})\nexport class SelectFrameworkComponent implements OnChanges, OnInit {\n  newComponent: ComponentRef<any> = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n  @ViewChild('widgetContainer', { read: ViewContainerRef })\n    widgetContainer: ViewContainerRef;\n\n  constructor(\n    private componentFactory: ComponentFactoryResolver,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.updateComponent();\n  }\n\n  ngOnChanges() {\n    this.updateComponent();\n  }\n\n  updateComponent() {\n    if (!this.newComponent && this.jsf.framework) {\n      this.newComponent = this.widgetContainer.createComponent(\n        this.componentFactory.resolveComponentFactory(this.jsf.framework)\n      );\n    }\n    if (this.newComponent) {\n      for (let input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n        this.newComponent.instance[input] = this[input];\n      }\n    }\n  }\n}\n","import {\n  Component, ComponentFactoryResolver, ComponentRef, Input,\n  OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'select-widget-widget',\n  template: `<div #widgetContainer></div>`,\n})\nexport class SelectWidgetComponent implements OnChanges, OnInit {\n  newComponent: ComponentRef<any> = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n  @ViewChild('widgetContainer', { read: ViewContainerRef })\n    widgetContainer: ViewContainerRef;\n\n  constructor(\n    private componentFactory: ComponentFactoryResolver,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.updateComponent();\n  }\n\n  ngOnChanges() {\n    this.updateComponent();\n  }\n\n  updateComponent() {\n    if (!this.newComponent && (this.layoutNode || {}).widget) {\n      this.newComponent = this.widgetContainer.createComponent(\n        this.componentFactory.resolveComponentFactory(this.layoutNode.widget)\n      );\n    }\n    if (this.newComponent) {\n      for (let input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n        this.newComponent.instance[input] = this[input];\n      }\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\nimport { hasOwn } from '../shared/utility.functions';\n\n@Component({\n  selector: 'submit-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <input\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (click)=\"updateValue($event)\">\n    </div>`,\n})\nexport class SubmitComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (hasOwn(this.options, 'disabled')) {\n      this.controlDisabled = this.options.disabled;\n    } else if (this.jsf.formOptions.disableInvalidSubmit) {\n      this.controlDisabled = !this.jsf.isValid;\n      this.jsf.isValidChanges.subscribe(isValid => this.controlDisabled = !isValid);\n    }\n    if (this.controlValue === null || this.controlValue === undefined) {\n      this.controlValue = this.options.title;\n    }\n  }\n\n  updateValue(event) {\n    if (typeof this.options.onClick === 'function') {\n      this.options.onClick(event);\n    } else {\n      this.jsf.updateValue(this, event.target.value);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'tabs-widget',\n  template: `\n    <ul\n      [class]=\"options?.labelHtmlClass || ''\">\n      <li *ngFor=\"let item of layoutNode?.items; let i = index\"\n        [class]=\"(options?.itemLabelHtmlClass || '') + (selectedItem === i ?\n          (' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')) :\n          (' ' + options?.style?.unselected))\"\n        role=\"presentation\"\n        data-tabs>\n        <a *ngIf=\"showAddTab || item.type !== '$ref'\"\n           [class]=\"'nav-link' + (selectedItem === i ? (' ' + options?.activeClass + ' ' + options?.style?.selected) :\n            (' ' + options?.style?.unselected))\"\n          [innerHTML]=\"setTabTitle(item, i)\"\n          (click)=\"select(i)\"></a>\n      </li>\n    </ul>\n\n    <div *ngFor=\"let layoutItem of layoutNode?.items; let i = index\"\n      [class]=\"options?.htmlClass || ''\">\n\n      <select-framework-widget *ngIf=\"selectedItem === i\"\n        [class]=\"(options?.fieldHtmlClass || '') +\n          ' ' + (options?.activeClass || '') +\n          ' ' + (options?.style?.selected || '')\"\n        [dataIndex]=\"layoutNode?.dataType === 'array' ? (dataIndex || []).concat(i) : dataIndex\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutItem\"></select-framework-widget>\n\n    </div>`,\n  styles: [` a { cursor: pointer; } `],\n})\nexport class TabsComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  selectedItem = 0;\n  showAddTab = true;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.itemCount = this.layoutNode.items.length - 1;\n    this.updateControl();\n  }\n\n  select(index) {\n    if (this.layoutNode.items[index].type === '$ref') {\n      this.itemCount = this.layoutNode.items.length;\n      this.jsf.addItem({\n        layoutNode: this.layoutNode.items[index],\n        layoutIndex: this.layoutIndex.concat(index),\n        dataIndex: this.dataIndex.concat(index)\n      });\n      this.updateControl();\n    };\n    this.selectedItem = index;\n  }\n\n  updateControl() {\n    const lastItem = this.layoutNode.items[this.layoutNode.items.length - 1];\n    if (lastItem.type === '$ref' &&\n      this.itemCount >= (lastItem.options.maxItems || 1000)\n    ) {\n      this.showAddTab = false;\n    }\n  }\n\n  setTabTitle(item: any, index: number): string {\n    return this.jsf.setArrayItemTitle(this, item, index);\n  }\n}\n","import {\n  Component, ComponentFactoryResolver, ComponentRef, Input,\n  OnChanges, OnInit, ViewChild, ViewContainerRef\n} from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'template-widget',\n  template: `<div #widgetContainer></div>`,\n})\nexport class TemplateComponent implements OnInit, OnChanges {\n  newComponent: ComponentRef<any> = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n  @ViewChild('widgetContainer', { read: ViewContainerRef })\n    widgetContainer: ViewContainerRef;\n\n  constructor(\n    private componentFactory: ComponentFactoryResolver,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.updateComponent();\n  }\n\n  ngOnChanges() {\n    this.updateComponent();\n  }\n\n  updateComponent() {\n    if (!this.newComponent && this.layoutNode.options.template) {\n      this.newComponent = this.widgetContainer.createComponent(\n        this.componentFactory.resolveComponentFactory(this.layoutNode.options.template)\n      );\n    }\n    if (this.newComponent) {\n      for (let input of ['layoutNode', 'layoutIndex', 'dataIndex']) {\n        this.newComponent.instance[input] = this[input];\n      }\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'textarea-widget',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\">\n      <label *ngIf=\"options?.title\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <textarea *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"></textarea>\n      <textarea *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [attr.placeholder]=\"options?.placeholder\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [class]=\"options?.fieldHtmlClass || ''\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\">{{controlValue}}</textarea>\n    </div>`,\n})\nexport class TextareaComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { hasOwn } from '../shared/utility.functions';\n\nimport { AddReferenceComponent } from './add-reference.component';\nimport { OneOfComponent } from './one-of.component';\nimport { ButtonComponent } from './button.component';\nimport { CheckboxComponent } from './checkbox.component';\nimport { CheckboxesComponent } from './checkboxes.component';\nimport { FileComponent } from './file.component';\nimport { HiddenComponent } from './hidden.component';\nimport { InputComponent } from './input.component';\nimport { MessageComponent } from './message.component';\nimport { NoneComponent } from './none.component';\nimport { NumberComponent } from './number.component';\nimport { RadiosComponent } from './radios.component';\nimport { RootComponent } from './root.component';\nimport { SectionComponent } from './section.component';\nimport { SelectComponent } from './select.component';\nimport { SelectFrameworkComponent } from './select-framework.component';\nimport { SelectWidgetComponent } from './select-widget.component';\nimport { SubmitComponent } from './submit.component';\nimport { TabComponent } from './tab.component';\nimport { TabsComponent } from './tabs.component';\nimport { TemplateComponent } from './template.component';\nimport { TextareaComponent } from './textarea.component';\n\n@Injectable()\nexport class WidgetLibraryService {\n\n  defaultWidget = 'text';\n  widgetLibrary: any = {\n\n  // Angular JSON Schema Form administrative widgets\n    'none': NoneComponent, // Placeholder, for development - displays nothing\n    'root': RootComponent, // Form root, renders a complete layout\n    'select-framework': SelectFrameworkComponent, // Applies the selected framework to a specified widget\n    'select-widget': SelectWidgetComponent, // Displays a specified widget\n    '$ref': AddReferenceComponent, // Button to add a new array item or $ref element\n\n  // Free-form text HTML 'input' form control widgets <input type=\"...\">\n    'email': 'text',\n    'integer': 'number', // Note: 'integer' is not a recognized HTML input type\n    'number': NumberComponent,\n    'password': 'text',\n    'search': 'text',\n    'tel': 'text',\n    'text': InputComponent,\n    'url': 'text',\n\n  // Controlled text HTML 'input' form control widgets <input type=\"...\">\n    'color': 'text',\n    'date': 'text',\n    'datetime': 'text',\n    'datetime-local': 'text',\n    'month': 'text',\n    'range': 'number',\n    'time': 'text',\n    'week': 'text',\n\n  // Non-text HTML 'input' form control widgets <input type=\"...\">\n    // 'button': <input type=\"button\"> not used, use <button> instead\n    'checkbox': CheckboxComponent, // TODO: Set ternary = true for 3-state ??\n    'file': FileComponent, // TODO: Finish 'file' widget\n    'hidden': 'text',\n    'image': 'text', // TODO: Figure out how to handle these\n    'radio': 'radios',\n    'reset': 'submit', // TODO: Figure out how to handle these\n    'submit': SubmitComponent,\n\n  // Other (non-'input') HTML form control widgets\n    'button': ButtonComponent,\n    'select': SelectComponent,\n    // 'option': automatically generated by select widgets\n    // 'optgroup': automatically generated by select widgets\n    'textarea': TextareaComponent,\n\n  // HTML form control widget sets\n    'checkboxes': CheckboxesComponent, // Grouped list of checkboxes\n    'checkboxes-inline': 'checkboxes', // Checkboxes in one line\n    'checkboxbuttons': 'checkboxes', // Checkboxes as html buttons\n    'radios': RadiosComponent, // Grouped list of radio buttons\n    'radios-inline': 'radios', // Radio controls in one line\n    'radiobuttons': 'radios', // Radio controls as html buttons\n\n  // HTML Layout widgets\n    // 'label': automatically added to data widgets\n    // 'legend': automatically added to fieldsets\n    'section': SectionComponent, // Just a div <div>\n    'div': 'section', // Still just a div <div>\n    'fieldset': 'section', // A fieldset, with an optional legend <fieldset>\n    'flex': 'section', // A flexbox container <div style=\"display: flex\">\n\n  // Non-HTML layout widgets\n    'one-of': OneOfComponent, // A select box that changes another input\n                              // TODO: Finish 'one-of' widget\n    'array': 'section', // A list you can add, remove and reorder <fieldset>\n    'tabarray': 'tabs', // A tabbed version of array\n    'tab': 'section', // A tab group, similar to a fieldset or section <fieldset>\n    'tabs': TabsComponent, // A tabbed set of panels with different controls\n    'message': MessageComponent, // Insert arbitrary html\n    'help': 'message', // Insert arbitrary html\n    'msg': 'message', // Insert arbitrary html\n    'html': 'message', // Insert arbitrary html\n    'template': TemplateComponent, // Insert a custom Angular component\n\n  // Widgets included for compatibility with JSON Form API\n    'advancedfieldset': 'section', // Adds 'Advanced settings' title <fieldset>\n    'authfieldset': 'section', // Adds 'Authentication settings' title <fieldset>\n    'optionfieldset': 'one-of', // Option control, displays selected sub-item <fieldset>\n    'selectfieldset': 'one-of', // Select control, displays selected sub-item <fieldset>\n    'conditional': 'section', // Identical to 'section' (depeciated) <div>\n    'actions': 'section', // Horizontal button list, can only submit, uses buttons as items <div>\n    'tagsinput': 'section', // For entering short text tags <div>\n    // See: http://ulion.github.io/jsonform/playground/?example=fields-checkboxbuttons\n\n  // Widgets included for compatibility with React JSON Schema Form API\n    'updown': 'number',\n    'date-time': 'datetime-local',\n    'alt-datetime': 'datetime-local',\n    'alt-date': 'date',\n\n  // Widgets included for compatibility with Angular Schema Form API\n    'wizard': 'section', // TODO: Sequential panels with \"Next\" and \"Previous\" buttons\n\n  // Widgets included for compatibility with other libraries\n    'textline': 'text',\n\n  // Recommended 3rd-party add-on widgets (TODO: create wrappers for these...)\n    // 'ng2-select': Select control replacement - http://valor-software.com/ng2-select/\n    // 'flatpickr': Flatpickr date picker - https://github.com/chmln/flatpickr\n    // 'pikaday': Pikaday date picker - https://github.com/dbushell/Pikaday\n    // 'spectrum': Spectrum color picker - http://bgrins.github.io/spectrum\n    // 'bootstrap-slider': Bootstrap Slider range control - https://github.com/seiyria/bootstrap-slider\n    // 'ace': ACE code editor - https://ace.c9.io\n    // 'ckeditor': CKEditor HTML / rich text editor - http://ckeditor.com\n    // 'tinymce': TinyMCE HTML / rich text editor - https://www.tinymce.com\n    // 'imageselect': Bootstrap drop-down image selector - http://silviomoreto.github.io/bootstrap-select\n    // 'wysihtml5': HTML editor - http://jhollingworth.github.io/bootstrap-wysihtml5\n    // 'quill': Quill HTML / rich text editor (?) - https://quilljs.com\n  };\n  registeredWidgets: any = { };\n  frameworkWidgets: any = { };\n  activeWidgets: any = { };\n\n  constructor() {\n    this.setActiveWidgets();\n  }\n\n  setActiveWidgets(): boolean {\n    this.activeWidgets = Object.assign(\n      { }, this.widgetLibrary, this.frameworkWidgets, this.registeredWidgets\n    );\n    for (const widgetName of Object.keys(this.activeWidgets)) {\n      let widget: any = this.activeWidgets[widgetName];\n      // Resolve aliases\n      if (typeof widget === 'string') {\n        const usedAliases: string[] = [];\n        while (typeof widget === 'string' && !usedAliases.includes(widget)) {\n          usedAliases.push(widget);\n          widget = this.activeWidgets[widget];\n        }\n        if (typeof widget !== 'string') {\n          this.activeWidgets[widgetName] = widget;\n        }\n      }\n    }\n    return true;\n  }\n\n  setDefaultWidget(type: string): boolean {\n    if (!this.hasWidget(type)) { return false; }\n    this.defaultWidget = type;\n    return true;\n  }\n\n  hasWidget(type: string, widgetSet = 'activeWidgets'): boolean {\n    if (!type || typeof type !== 'string') { return false; }\n    return hasOwn(this[widgetSet], type);\n  }\n\n  hasDefaultWidget(type: string): boolean {\n    return this.hasWidget(type, 'widgetLibrary');\n  }\n\n  registerWidget(type: string, widget: any): boolean {\n    if (!type || !widget || typeof type !== 'string') { return false; }\n    this.registeredWidgets[type] = widget;\n    return this.setActiveWidgets();\n  }\n\n  unRegisterWidget(type: string): boolean {\n    if (!hasOwn(this.registeredWidgets, type)) { return false; }\n    delete this.registeredWidgets[type];\n    return this.setActiveWidgets();\n  }\n\n  unRegisterAllWidgets(unRegisterFrameworkWidgets = true): boolean {\n    this.registeredWidgets = { };\n    if (unRegisterFrameworkWidgets) { this.frameworkWidgets = { }; }\n    return this.setActiveWidgets();\n  }\n\n  registerFrameworkWidgets(widgets: any): boolean {\n    if (widgets === null || typeof widgets !== 'object') { widgets = { }; }\n    this.frameworkWidgets = widgets;\n    return this.setActiveWidgets();\n  }\n\n  unRegisterFrameworkWidgets(): boolean {\n    if (Object.keys(this.frameworkWidgets).length) {\n      this.frameworkWidgets = { };\n      return this.setActiveWidgets();\n    }\n    return false;\n  }\n\n  getWidget(type?: string, widgetSet = 'activeWidgets'): any {\n    if (this.hasWidget(type, widgetSet)) {\n      return this[widgetSet][type];\n    } else if (this.hasWidget(this.defaultWidget, widgetSet)) {\n      return this[widgetSet][this.defaultWidget];\n    } else {\n      return null;\n    }\n  }\n\n  getAllWidgets(): any {\n    return {\n      widgetLibrary: this.widgetLibrary,\n      registeredWidgets: this.registeredWidgets,\n      frameworkWidgets: this.frameworkWidgets,\n      activeWidgets: this.activeWidgets,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Framework {\n  name: string;\n  framework: any;\n  widgets?: { [key: string]: any } = {};\n  stylesheets?: string[] = [];\n  scripts?: string[] = [];\n};\n","import { Inject, Injectable } from '@angular/core';\n\nimport { WidgetLibraryService } from '../widget-library/widget-library.service';\nimport { hasOwn } from '../shared/utility.functions';\n\nimport { Framework } from './framework';\n\n// Possible future frameworks:\n// - Foundation 6:\n//   http://justindavis.co/2017/06/15/using-foundation-6-in-angular-4/\n//   https://github.com/zurb/foundation-sites\n// - Semantic UI:\n//   https://github.com/edcarroll/ng2-semantic-ui\n//   https://github.com/vladotesanovic/ngSemantic\n\n@Injectable()\nexport class FrameworkLibraryService {\n  activeFramework: Framework = null;\n  stylesheets: (HTMLStyleElement|HTMLLinkElement)[];\n  scripts: HTMLScriptElement[];\n  loadExternalAssets = false;\n  defaultFramework: string;\n  frameworkLibrary: { [name: string]: Framework } = {};\n\n  constructor(\n    @Inject(Framework) private frameworks: any[],\n    @Inject(WidgetLibraryService) private widgetLibrary: WidgetLibraryService\n  ) {\n    this.frameworks.forEach(framework =>\n      this.frameworkLibrary[framework.name] = framework\n    );\n    this.defaultFramework = this.frameworks[0].name;\n    this.setFramework(this.defaultFramework);\n  }\n\n  public setLoadExternalAssets(loadExternalAssets = true): void {\n    this.loadExternalAssets = !!loadExternalAssets;\n  }\n\n  public setFramework(\n    framework: string|Framework = this.defaultFramework,\n    loadExternalAssets = this.loadExternalAssets\n  ): boolean {\n    this.activeFramework =\n      typeof framework === 'string' && this.hasFramework(framework) ?\n        this.frameworkLibrary[framework] :\n      typeof framework === 'object' && hasOwn(framework, 'framework') ?\n        framework :\n        this.frameworkLibrary[this.defaultFramework];\n    return this.registerFrameworkWidgets(this.activeFramework);\n  }\n\n  registerFrameworkWidgets(framework: Framework): boolean {\n    return hasOwn(framework, 'widgets') ?\n      this.widgetLibrary.registerFrameworkWidgets(framework.widgets) :\n      this.widgetLibrary.unRegisterFrameworkWidgets();\n  }\n\n  public hasFramework(type: string): boolean {\n    return hasOwn(this.frameworkLibrary, type);\n  }\n\n  public getFramework(): any {\n    if (!this.activeFramework) { this.setFramework('default', true); }\n    return this.activeFramework.framework;\n  }\n\n  public getFrameworkWidgets(): any {\n    return this.activeFramework.widgets || {};\n  }\n\n  public getFrameworkStylesheets(load: boolean = this.loadExternalAssets): string[] {\n    return (load && this.activeFramework.stylesheets) || [];\n  }\n\n  public getFrameworkScripts(load: boolean = this.loadExternalAssets): string[] {\n    return (load && this.activeFramework.scripts) || [];\n  }\n}\n","import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter,\n  forwardRef, Input, Output, OnChanges, OnInit\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\nimport * as _ from 'lodash';\n\nimport { FrameworkLibraryService } from './framework-library/framework-library.service';\nimport { WidgetLibraryService } from './widget-library/widget-library.service';\nimport { JsonSchemaFormService } from './json-schema-form.service';\nimport { convertSchemaToDraft6 } from './shared/convert-schema-to-draft6.function';\nimport { resolveSchemaReferences } from './shared/json-schema.functions';\nimport {\n  hasValue, inArray, isArray, isEmpty, isNumber, isObject\n} from './shared/validator.functions';\nimport { forEach, hasOwn } from './shared/utility.functions';\nimport { JsonPointer } from './shared/jsonpointer.functions';\n\nexport const JSON_SCHEMA_FORM_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => JsonSchemaFormComponent),\n  multi: true,\n};\n\n/**\n * @module 'JsonSchemaFormComponent' - Angular JSON Schema Form\n *\n * Root module of the Angular JSON Schema Form client-side library,\n * an Angular library which generates an HTML form from a JSON schema\n * structured data model and/or a JSON Schema Form layout description.\n *\n * This library also validates input data by the user, using both validators on\n * individual controls to provide real-time feedback while the user is filling\n * out the form, and then validating the entire input against the schema when\n * the form is submitted to make sure the returned JSON data object is valid.\n *\n * This library is similar to, and mostly API compatible with:\n *\n * - JSON Schema Form's Angular Schema Form library for AngularJs\n *   http://schemaform.io\n *   http://schemaform.io/examples/bootstrap-example.html (examples)\n *\n * - Mozilla's react-jsonschema-form library for React\n *   https://github.com/mozilla-services/react-jsonschema-form\n *   https://mozilla-services.github.io/react-jsonschema-form (examples)\n *\n * - Joshfire's JSON Form library for jQuery\n *   https://github.com/joshfire/jsonform\n *   http://ulion.github.io/jsonform/playground (examples)\n *\n * This library depends on:\n *  - Angular (obviously)                  https://angular.io\n *  - lodash, JavaScript utility library   https://github.com/lodash/lodash\n *  - ajv, Another JSON Schema validator   https://github.com/epoberezkin/ajv\n *\n * In addition, the Example Playground also depends on:\n *  - brace, Browserified Ace editor       http://thlorenz.github.io/brace\n */\n@Component({\n  selector: 'json-schema-form',\n  template: `\n    <div *ngFor=\"let stylesheet of stylesheets\">\n      <link rel=\"stylesheet\" [href]=\"stylesheet\">\n    </div>\n    <div *ngFor=\"let script of scripts\">\n      <script type=\"text/javascript\" [src]=\"script\"></script>\n    </div>\n    <form class=\"json-schema-form\" (ngSubmit)=\"submitForm()\">\n      <root-widget [layout]=\"jsf?.layout\"></root-widget>\n    </form>\n    <div *ngIf=\"debug || jsf?.formOptions?.debug\">\n      Debug output: <pre>{{debugOutput}}</pre>\n    </div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // Adding 'JsonSchemaFormService' here, instead of in the module,\n  // creates a separate instance of the service for each component\n  providers:  [ JsonSchemaFormService, JSON_SCHEMA_FORM_VALUE_ACCESSOR ],\n})\nexport class JsonSchemaFormComponent implements ControlValueAccessor, OnChanges, OnInit {\n  debugOutput: any; // Debug information, if requested\n  formValueSubscription: any = null;\n  formInitialized = false;\n  objectWrap = false; // Is non-object input schema wrapped in an object?\n\n  formValuesInput: string; // Name of the input providing the form data\n  previousInputs: { // Previous input values, to detect which input triggers onChanges\n    schema: any, layout: any[], data: any, options: any, framework: any|string,\n    widgets: any, form: any, model: any, JSONSchema: any, UISchema: any,\n    formData: any, loadExternalAssets: boolean, debug: boolean,\n  } = {\n    schema: null, layout: null, data: null, options: null, framework: null,\n    widgets: null, form: null, model: null, JSONSchema: null, UISchema: null,\n    formData: null, loadExternalAssets: null, debug: null,\n  };\n\n  // Recommended inputs\n  @Input() schema: any; // The JSON Schema\n  @Input() layout: any[]; // The form layout\n  @Input() data: any; // The form data\n  @Input() options: any; // The global form options\n  @Input() framework: any|string; // The framework to load\n  @Input() widgets: any; // Any custom widgets to load\n\n  // Alternate combined single input\n  @Input() form: any; // For testing, and JSON Schema Form API compatibility\n\n  // Angular Schema Form API compatibility input\n  @Input() model: any; // Alternate input for form data\n\n  // React JSON Schema Form API compatibility inputs\n  @Input() JSONSchema: any; // Alternate input for JSON Schema\n  @Input() UISchema: any; // UI schema - alternate form layout format\n  @Input() formData: any; // Alternate input for form data\n\n  @Input() ngModel: any; // Alternate input for Angular forms\n\n  @Input() language: string; // Language\n\n  // Development inputs, for testing and debugging\n  @Input() loadExternalAssets: boolean; // Load external framework assets?\n  @Input() debug: boolean; // Show debug information?\n\n  @Input()\n  get value(): any {\n    return this.objectWrap ? this.jsf.data['1'] : this.jsf.data;\n  }\n  set value(value: any) {\n    this.setFormValues(value, false);\n  }\n\n  // Outputs\n  @Output() onChanges = new EventEmitter<any>(); // Live unvalidated internal form data\n  @Output() onSubmit = new EventEmitter<any>(); // Complete validated form data\n  @Output() isValid = new EventEmitter<boolean>(); // Is current data valid?\n  @Output() validationErrors = new EventEmitter<any>(); // Validation errors (if any)\n  @Output() formSchema = new EventEmitter<any>(); // Final schema used to create form\n  @Output() formLayout = new EventEmitter<any>(); // Final layout used to create form\n\n  // Outputs for possible 2-way data binding\n  // Only the one input providing the initial form data will be bound.\n  // If there is no inital data, input '{}' to activate 2-way data binding.\n  // There is no 2-way binding if inital data is combined inside the 'form' input.\n  @Output() dataChange = new EventEmitter<any>();\n  @Output() modelChange = new EventEmitter<any>();\n  @Output() formDataChange = new EventEmitter<any>();\n  @Output() ngModelChange = new EventEmitter<any>();\n\n  onChange: Function;\n  onTouched: Function;\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private frameworkLibrary: FrameworkLibraryService,\n    private widgetLibrary: WidgetLibraryService,\n    public jsf: JsonSchemaFormService,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  get stylesheets(): SafeResourceUrl[] {\n    const stylesheets = this.frameworkLibrary.getFrameworkStylesheets();\n    const load = this.sanitizer.bypassSecurityTrustResourceUrl;\n    return stylesheets.map(stylesheet => load(stylesheet));\n  }\n\n  get scripts(): SafeResourceUrl[] {\n    const scripts = this.frameworkLibrary.getFrameworkScripts();\n    const load = this.sanitizer.bypassSecurityTrustResourceUrl;\n    return scripts.map(script => load(script));\n  }\n\n  ngOnInit() {\n    this.updateForm();\n  }\n\n  ngOnChanges() {\n    this.updateForm();\n  }\n\n  writeValue(value: any) {\n    this.setFormValues(value, false);\n    if (!this.formValuesInput) { this.formValuesInput = 'ngModel'; }\n  }\n\n  registerOnChange(fn: Function) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: Function) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (this.jsf.formOptions.formDisabled !== !!isDisabled) {\n      this.jsf.formOptions.formDisabled = !!isDisabled;\n      this.initializeForm();\n    }\n  }\n\n  updateForm() {\n    if (!this.formInitialized || !this.formValuesInput ||\n      (this.language && this.language !== this.jsf.language)\n    ) {\n      this.initializeForm();\n    } else {\n      if (this.language && this.language !== this.jsf.language) {\n        this.jsf.setLanguage(this.language);\n      }\n\n      // Get names of changed inputs\n      let changedInput = Object.keys(this.previousInputs)\n        .filter(input => this.previousInputs[input] !== this[input]);\n      let resetFirst = true;\n      if (changedInput.length === 1 && changedInput[0] === 'form' &&\n        this.formValuesInput.startsWith('form.')\n      ) {\n        // If only 'form' input changed, get names of changed keys\n        changedInput = Object.keys(this.previousInputs.form || {})\n          .filter(key => !_.isEqual(this.previousInputs.form[key], this.form[key]))\n          .map(key => `form.${key}`);\n        resetFirst = false;\n      }\n\n      // If only input values have changed, update the form values\n      if (changedInput.length === 1 && changedInput[0] === this.formValuesInput) {\n        if (this.formValuesInput.indexOf('.') === -1) {\n          this.setFormValues(this[this.formValuesInput], resetFirst);\n        } else {\n          const [input, key] = this.formValuesInput.split('.');\n          this.setFormValues(this[input][key], resetFirst);\n        }\n\n      // If anything else has changed, re-render the entire form\n      } else if (changedInput.length) {\n        this.initializeForm();\n        if (this.onChange) { this.onChange(this.jsf.formValues); }\n        if (this.onTouched) { this.onTouched(this.jsf.formValues); }\n      }\n\n      // Update previous inputs\n      Object.keys(this.previousInputs)\n        .filter(input => this.previousInputs[input] !== this[input])\n        .forEach(input => this.previousInputs[input] = this[input]);\n    }\n  }\n\n  setFormValues(formValues: any, resetFirst = true) {\n    if (formValues) {\n      const newFormValues = this.objectWrap ? formValues['1'] : formValues;\n      if (!this.jsf.formGroup) {\n        this.jsf.formValues = formValues;\n        this.activateForm();\n      } else if (resetFirst) {\n        this.jsf.formGroup.reset();\n      }\n      if (this.jsf.formGroup) {\n        this.jsf.formGroup.patchValue(newFormValues);\n      }\n      if (this.onChange) { this.onChange(newFormValues); }\n      if (this.onTouched) { this.onTouched(newFormValues); }\n    } else {\n      this.jsf.formGroup.reset();\n    }\n  }\n\n  submitForm() {\n    const validData = this.jsf.validData;\n    this.onSubmit.emit(this.objectWrap ? validData['1'] : validData);\n  }\n\n  /**\n   * 'initializeForm' function\n   *\n   * - Update 'schema', 'layout', and 'formValues', from inputs.\n   *\n   * - Create 'schemaRefLibrary' and 'schemaRecursiveRefMap'\n   *   to resolve schema $ref links, including recursive $ref links.\n   *\n   * - Create 'dataRecursiveRefMap' to resolve recursive links in data\n   *   and corectly set output formats for recursively nested values.\n   *\n   * - Create 'layoutRefLibrary' and 'templateRefLibrary' to store\n   *   new layout nodes and formGroup elements to use when dynamically\n   *   adding form components to arrays and recursive $ref points.\n   *\n   * - Create 'dataMap' to map the data to the schema and template.\n   *\n   * - Create the master 'formGroupTemplate' then from it 'formGroup'\n   *   the Angular formGroup used to control the reactive form.\n   */\n  initializeForm() {\n    if (\n      this.schema || this.layout || this.data || this.form || this.model ||\n      this.JSONSchema || this.UISchema || this.formData || this.ngModel ||\n      this.jsf.data\n    ) {\n\n      this.jsf.resetAllValues();  // Reset all form values to defaults\n      this.initializeOptions();   // Update options\n      this.initializeSchema();    // Update schema, schemaRefLibrary,\n                                  // schemaRecursiveRefMap, & dataRecursiveRefMap\n      this.initializeLayout();    // Update layout, layoutRefLibrary,\n      this.initializeData();      // Update formValues\n      this.activateForm();        // Update dataMap, templateRefLibrary,\n                                  // formGroupTemplate, formGroup\n\n      // Uncomment individual lines to output debugging information to console:\n      // (These always work.)\n      // console.log('loading form...');\n      // console.log('schema', this.jsf.schema);\n      // console.log('layout', this.jsf.layout);\n      // console.log('options', this.options);\n      // console.log('formValues', this.jsf.formValues);\n      // console.log('formGroupTemplate', this.jsf.formGroupTemplate);\n      // console.log('formGroup', this.jsf.formGroup);\n      // console.log('formGroup.value', this.jsf.formGroup.value);\n      // console.log('schemaRefLibrary', this.jsf.schemaRefLibrary);\n      // console.log('layoutRefLibrary', this.jsf.layoutRefLibrary);\n      // console.log('templateRefLibrary', this.jsf.templateRefLibrary);\n      // console.log('dataMap', this.jsf.dataMap);\n      // console.log('arrayMap', this.jsf.arrayMap);\n      // console.log('schemaRecursiveRefMap', this.jsf.schemaRecursiveRefMap);\n      // console.log('dataRecursiveRefMap', this.jsf.dataRecursiveRefMap);\n\n      // Uncomment individual lines to output debugging information to browser:\n      // (These only work if the 'debug' option has also been set to 'true'.)\n      if (this.debug || this.jsf.formOptions.debug) {\n        const vars: any[] = [];\n        // vars.push(this.jsf.schema);\n        // vars.push(this.jsf.layout);\n        // vars.push(this.options);\n        // vars.push(this.jsf.formValues);\n        // vars.push(this.jsf.formGroup.value);\n        // vars.push(this.jsf.formGroupTemplate);\n        // vars.push(this.jsf.formGroup);\n        // vars.push(this.jsf.schemaRefLibrary);\n        // vars.push(this.jsf.layoutRefLibrary);\n        // vars.push(this.jsf.templateRefLibrary);\n        // vars.push(this.jsf.dataMap);\n        // vars.push(this.jsf.arrayMap);\n        // vars.push(this.jsf.schemaRecursiveRefMap);\n        // vars.push(this.jsf.dataRecursiveRefMap);\n        this.debugOutput = vars.map(v => JSON.stringify(v, null, 2)).join('\\n');\n      }\n      this.formInitialized = true;\n    }\n  }\n\n  /**\n   * 'initializeOptions' function\n   *\n   * Initialize 'options' (global form options) and set framework\n   * Combine available inputs:\n   * 1. options - recommended\n   * 2. form.options - Single input style\n   */\n  private initializeOptions() {\n    if (this.language && this.language !== this.jsf.language) {\n      this.jsf.setLanguage(this.language);\n    }\n    this.jsf.setOptions({ debug: !!this.debug });\n    let loadExternalAssets: boolean = this.loadExternalAssets || false;\n    let framework: any = this.framework || 'default';\n    if (isObject(this.options)) {\n      this.jsf.setOptions(this.options);\n      loadExternalAssets = this.options.loadExternalAssets || loadExternalAssets;\n      framework = this.options.framework || framework;\n    }\n    if (isObject(this.form) && isObject(this.form.options)) {\n      this.jsf.setOptions(this.form.options);\n      loadExternalAssets = this.form.options.loadExternalAssets || loadExternalAssets;\n      framework = this.form.options.framework || framework;\n    }\n    if (isObject(this.widgets)) {\n      this.jsf.setOptions({ widgets: this.widgets });\n    }\n    this.frameworkLibrary.setLoadExternalAssets(loadExternalAssets);\n    this.frameworkLibrary.setFramework(framework);\n    this.jsf.framework = this.frameworkLibrary.getFramework();\n    if (isObject(this.jsf.formOptions.widgets)) {\n      for (const widget of Object.keys(this.jsf.formOptions.widgets)) {\n        this.widgetLibrary.registerWidget(widget, this.jsf.formOptions.widgets[widget]);\n      }\n    }\n    if (isObject(this.form) && isObject(this.form.tpldata)) {\n      this.jsf.setTpldata(this.form.tpldata);\n    }\n  }\n\n  /**\n   * 'initializeSchema' function\n   *\n   * Initialize 'schema'\n   * Use first available input:\n   * 1. schema - recommended / Angular Schema Form style\n   * 2. form.schema - Single input / JSON Form style\n   * 3. JSONSchema - React JSON Schema Form style\n   * 4. form.JSONSchema - For testing single input React JSON Schema Forms\n   * 5. form - For testing single schema-only inputs\n   *\n   * ... if no schema input found, the 'activateForm' function, below,\n   *     will make two additional attempts to build a schema\n   * 6. If layout input - build schema from layout\n   * 7. If data input - build schema from data\n   */\n  private initializeSchema() {\n\n    // TODO: update to allow non-object schemas\n\n    if (isObject(this.schema)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.schema = _.cloneDeep(this.schema);\n    } else if (hasOwn(this.form, 'schema') && isObject(this.form.schema)) {\n      this.jsf.schema = _.cloneDeep(this.form.schema);\n    } else if (isObject(this.JSONSchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.jsf.schema = _.cloneDeep(this.JSONSchema);\n    } else if (hasOwn(this.form, 'JSONSchema') && isObject(this.form.JSONSchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.jsf.schema = _.cloneDeep(this.form.JSONSchema);\n    } else if (hasOwn(this.form, 'properties') && isObject(this.form.properties)) {\n      this.jsf.schema = _.cloneDeep(this.form);\n    } else if (isObject(this.form)) {\n      // TODO: Handle other types of form input\n    }\n\n    if (!isEmpty(this.jsf.schema)) {\n\n      // If other types also allowed, render schema as an object\n      if (inArray('object', this.jsf.schema.type)) {\n        this.jsf.schema.type = 'object';\n      }\n\n      // Wrap non-object schemas in object.\n      if (hasOwn(this.jsf.schema, 'type') && this.jsf.schema.type !== 'object') {\n        this.jsf.schema = {\n          'type': 'object',\n          'properties': { 1: this.jsf.schema }\n        };\n        this.objectWrap = true;\n      } else if (!hasOwn(this.jsf.schema, 'type')) {\n\n        // Add type = 'object' if missing\n        if (isObject(this.jsf.schema.properties) ||\n          isObject(this.jsf.schema.patternProperties) ||\n          isObject(this.jsf.schema.additionalProperties)\n        ) {\n          this.jsf.schema.type = 'object';\n\n        // Fix JSON schema shorthand (JSON Form style)\n        } else {\n          this.jsf.JsonFormCompatibility = true;\n          this.jsf.schema = {\n            'type': 'object',\n            'properties': this.jsf.schema\n          };\n        }\n      }\n\n      // If needed, update JSON Schema to draft 6 format, including\n      // draft 3 (JSON Form style) and draft 4 (Angular Schema Form style)\n      this.jsf.schema = convertSchemaToDraft6(this.jsf.schema);\n\n      // Initialize ajv and compile schema\n      this.jsf.compileAjvSchema();\n\n      // Create schemaRefLibrary, schemaRecursiveRefMap, dataRecursiveRefMap, & arrayMap\n      this.jsf.schema = resolveSchemaReferences(\n        this.jsf.schema, this.jsf.schemaRefLibrary, this.jsf.schemaRecursiveRefMap,\n        this.jsf.dataRecursiveRefMap, this.jsf.arrayMap\n      );\n      if (hasOwn(this.jsf.schemaRefLibrary, '')) {\n        this.jsf.hasRootReference = true;\n      }\n\n      // TODO: (?) Resolve external $ref links\n      // // Create schemaRefLibrary & schemaRecursiveRefMap\n      // this.parser.bundle(this.schema)\n      //   .then(schema => this.schema = resolveSchemaReferences(\n      //     schema, this.jsf.schemaRefLibrary,\n      //     this.jsf.schemaRecursiveRefMap, this.jsf.dataRecursiveRefMap\n      //   ));\n    }\n  }\n\n  /**\n   * 'initializeData' function\n   *\n   * Initialize 'formValues'\n   * defulat or previously submitted values used to populate form\n   * Use first available input:\n   * 1. data - recommended\n   * 2. model - Angular Schema Form style\n   * 3. form.value - JSON Form style\n   * 4. form.data - Single input style\n   * 5. formData - React JSON Schema Form style\n   * 6. form.formData - For easier testing of React JSON Schema Forms\n   * 7. (none) no data - initialize data from schema and layout defaults only\n   */\n  private initializeData() {\n    if (hasValue(this.data)) {\n      this.jsf.formValues = _.cloneDeep(this.data);\n      this.formValuesInput = 'data';\n    } else if (hasValue(this.model)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.formValues = _.cloneDeep(this.model);\n      this.formValuesInput = 'model';\n    } else if (hasValue(this.ngModel)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.formValues = _.cloneDeep(this.ngModel);\n      this.formValuesInput = 'ngModel';\n    } else if (isObject(this.form) && hasValue(this.form.value)) {\n      this.jsf.JsonFormCompatibility = true;\n      this.jsf.formValues = _.cloneDeep(this.form.value);\n      this.formValuesInput = 'form.value';\n    } else if (isObject(this.form) && hasValue(this.form.data)) {\n      this.jsf.formValues = _.cloneDeep(this.form.data);\n      this.formValuesInput = 'form.data';\n    } else if (hasValue(this.formData)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.formValuesInput = 'formData';\n    } else if (hasOwn(this.form, 'formData') && hasValue(this.form.formData)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      this.jsf.formValues = _.cloneDeep(this.form.formData);\n      this.formValuesInput = 'form.formData';\n    } else {\n      this.formValuesInput = null;\n    }\n  }\n\n  /**\n   * 'initializeLayout' function\n   *\n   * Initialize 'layout'\n   * Use first available array input:\n   * 1. layout - recommended\n   * 2. form - Angular Schema Form style\n   * 3. form.form - JSON Form style\n   * 4. form.layout - Single input style\n   * 5. (none) no layout - set default layout instead\n   *    (full layout will be built later from the schema)\n   *\n   * Also, if alternate layout formats are available,\n   * import from 'UISchema' or 'customFormItems'\n   * used for React JSON Schema Form and JSON Form API compatibility\n   * Use first available input:\n   * 1. UISchema - React JSON Schema Form style\n   * 2. form.UISchema - For testing single input React JSON Schema Forms\n   * 2. form.customFormItems - JSON Form style\n   * 3. (none) no input - don't import\n   */\n  private initializeLayout() {\n\n    // Rename JSON Form-style 'options' lists to\n    // Angular Schema Form-style 'titleMap' lists.\n    const fixJsonFormOptions = (layout: any): any => {\n      if (isObject(layout) || isArray(layout)) {\n        forEach(layout, (value, key) => {\n          if (hasOwn(value, 'options') && isObject(value.options)) {\n            value.titleMap = value.options;\n            delete value.options;\n          }\n        }, 'top-down');\n      }\n      return layout;\n    };\n\n    // Check for layout inputs and, if found, initialize form layout\n    if (isArray(this.layout)) {\n      this.jsf.layout = _.cloneDeep(this.layout);\n    } else if (isArray(this.form)) {\n      this.jsf.AngularSchemaFormCompatibility = true;\n      this.jsf.layout = _.cloneDeep(this.form);\n    } else if (this.form && isArray(this.form.form)) {\n      this.jsf.JsonFormCompatibility = true;\n      this.jsf.layout = fixJsonFormOptions(_.cloneDeep(this.form.form));\n    } else if (this.form && isArray(this.form.layout)) {\n      this.jsf.layout = _.cloneDeep(this.form.layout);\n    } else {\n      this.jsf.layout = ['*'];\n    }\n\n    // Check for alternate layout inputs\n    let alternateLayout: any = null;\n    if (isObject(this.UISchema)) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      alternateLayout = _.cloneDeep(this.UISchema);\n    } else if (hasOwn(this.form, 'UISchema')) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      alternateLayout = _.cloneDeep(this.form.UISchema);\n    } else if (hasOwn(this.form, 'uiSchema')) {\n      this.jsf.ReactJsonSchemaFormCompatibility = true;\n      alternateLayout = _.cloneDeep(this.form.uiSchema);\n    } else if (hasOwn(this.form, 'customFormItems')) {\n      this.jsf.JsonFormCompatibility = true;\n      alternateLayout = fixJsonFormOptions(_.cloneDeep(this.form.customFormItems));\n    }\n\n    // if alternate layout found, copy alternate layout options into schema\n    if (alternateLayout) {\n      JsonPointer.forEachDeep(alternateLayout, (value, pointer) => {\n        const schemaPointer = pointer\n          .replace(/\\//g, '/properties/')\n          .replace(/\\/properties\\/items\\/properties\\//g, '/items/properties/')\n          .replace(/\\/properties\\/titleMap\\/properties\\//g, '/titleMap/properties/');\n        if (hasValue(value) && hasValue(pointer)) {\n          let key = JsonPointer.toKey(pointer);\n          const groupPointer = (JsonPointer.parse(schemaPointer) || []).slice(0, -2);\n          let itemPointer: string | string[];\n\n          // If 'ui:order' object found, copy into object schema root\n          if (key.toLowerCase() === 'ui:order') {\n            itemPointer = [...groupPointer, 'ui:order'];\n\n          // Copy other alternate layout options to schema 'x-schema-form',\n          // (like Angular Schema Form options) and remove any 'ui:' prefixes\n          } else {\n            if (key.slice(0, 3).toLowerCase() === 'ui:') { key = key.slice(3); }\n            itemPointer = [...groupPointer, 'x-schema-form', key];\n          }\n          if (JsonPointer.has(this.jsf.schema, groupPointer) &&\n            !JsonPointer.has(this.jsf.schema, itemPointer)\n          ) {\n            JsonPointer.set(this.jsf.schema, itemPointer, value);\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * 'activateForm' function\n   *\n   * ...continued from 'initializeSchema' function, above\n   * If 'schema' has not been initialized (i.e. no schema input found)\n   * 6. If layout input - build schema from layout input\n   * 7. If data input - build schema from data input\n   *\n   * Create final layout,\n   * build the FormGroup template and the Angular FormGroup,\n   * subscribe to changes,\n   * and activate the form.\n   */\n  private activateForm() {\n\n    // If 'schema' not initialized\n    if (isEmpty(this.jsf.schema)) {\n\n      // TODO: If full layout input (with no '*'), build schema from layout\n      // if (!this.jsf.layout.includes('*')) {\n      //   this.jsf.buildSchemaFromLayout();\n      // } else\n\n      // If data input, build schema from data\n      if (!isEmpty(this.jsf.formValues)) {\n        this.jsf.buildSchemaFromData();\n      }\n    }\n\n    if (!isEmpty(this.jsf.schema)) {\n\n      // If not already initialized, initialize ajv and compile schema\n      this.jsf.compileAjvSchema();\n\n      // Update all layout elements, add values, widgets, and validators,\n      // replace any '*' with a layout built from all schema elements,\n      // and update the FormGroup template with any new validators\n      this.jsf.buildLayout(this.widgetLibrary);\n\n      // Build the Angular FormGroup template from the schema\n      this.jsf.buildFormGroupTemplate(this.jsf.formValues);\n\n      // Build the real Angular FormGroup from the FormGroup template\n      this.jsf.buildFormGroup();\n    }\n\n    if (this.jsf.formGroup) {\n\n      // Reset initial form values\n      if (!isEmpty(this.jsf.formValues) &&\n        this.jsf.formOptions.setSchemaDefaults !== true &&\n        this.jsf.formOptions.setLayoutDefaults !== true\n      ) {\n        this.setFormValues(this.jsf.formValues);\n      }\n\n      // TODO: Figure out how to display calculated values without changing object data\n      // See http://ulion.github.io/jsonform/playground/?example=templating-values\n      // Calculate references to other fields\n      // if (!isEmpty(this.jsf.formGroup.value)) {\n      //   forEach(this.jsf.formGroup.value, (value, key, object, rootObject) => {\n      //     if (typeof value === 'string') {\n      //       object[key] = this.jsf.parseText(value, value, rootObject, key);\n      //     }\n      //   }, 'top-down');\n      // }\n\n      // Subscribe to form changes to output live data, validation, and errors\n      this.jsf.dataChanges.subscribe(data => {\n        this.onChanges.emit(this.objectWrap ? data['1'] : data);\n        if (this.formValuesInput && this.formValuesInput.indexOf('.') === -1) {\n          this[`${this.formValuesInput}Change`].emit(this.objectWrap ? data['1'] : data);\n        }\n      });\n\n      // Trigger change detection on statusChanges to show updated errors\n      this.jsf.formGroup.statusChanges.subscribe(() => this.changeDetector.markForCheck());\n      this.jsf.isValidChanges.subscribe(isValid => this.isValid.emit(isValid));\n      this.jsf.validationErrorChanges.subscribe(err => this.validationErrors.emit(err));\n\n      // Output final schema, final layout, and initial data\n      this.formSchema.emit(this.jsf.schema);\n      this.formLayout.emit(this.jsf.layout);\n      this.onChanges.emit(this.objectWrap ? this.jsf.data['1'] : this.jsf.data);\n\n      // If validateOnRender, output initial validation and any errors\n      const validateOnRender =\n        JsonPointer.get(this.jsf, '/formOptions/validateOnRender');\n      if (validateOnRender) { // validateOnRender === 'auto' || true\n        const touchAll = (control) => {\n          if (validateOnRender === true || hasValue(control.value)) {\n            control.markAsTouched();\n          }\n          Object.keys(control.controls || {})\n            .forEach(key => touchAll(control.controls[key]));\n        };\n        touchAll(this.jsf.formGroup);\n        this.isValid.emit(this.jsf.isValid);\n        this.validationErrors.emit(this.jsf.ajvErrors);\n      }\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'no-framework',\n  template: `\n    <select-widget-widget\n      [dataIndex]=\"dataIndex\"\n      [layoutIndex]=\"layoutIndex\"\n      [layoutNode]=\"layoutNode\"></select-widget-widget>`,\n})\nexport class NoFrameworkComponent {\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n}\n","import { Injectable } from '@angular/core';\n\nimport { Framework } from '../framework';\n\n// No framework - plain HTML controls (styles from form layout only)\nimport { NoFrameworkComponent } from './no-framework.component';\n\n@Injectable()\nexport class NoFramework extends Framework {\n  name = 'no-framework';\n\n  framework = NoFrameworkComponent;\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'hidden-widget',\n  template: `\n    <input *ngIf=\"boundControl\"\n      [formControl]=\"formControl\"\n      [id]=\"'control' + layoutNode?._id\"\n      [name]=\"controlName\"\n      type=\"hidden\">\n    <input *ngIf=\"!boundControl\"\n      [disabled]=\"controlDisabled\"\n      [name]=\"controlName\"\n      [id]=\"'control' + layoutNode?._id\"\n      type=\"hidden\"\n      [value]=\"controlValue\">`,\n})\nexport class HiddenComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.jsf.initializeControl(this);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n@Component({\n  selector: 'tab-widget',\n  template: `\n    <div [class]=\"options?.htmlClass || ''\">\n      <root-widget\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [layout]=\"layoutNode.items\"></root-widget>\n    </div>`,\n})\nexport class TabComponent implements OnInit {\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n  }\n}\n","import { Directive, ElementRef, Input, NgZone, OnInit } from '@angular/core';\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\n\n/**\n * OrderableDirective\n *\n * Enables array elements to be reordered by dragging and dropping.\n *\n * Only works for arrays that have at least two elements.\n *\n * Also detects arrays-within-arrays, and correctly moves either\n * the child array element or the parent array element,\n * depending on the drop targert.\n *\n * Listeners for movable element being dragged:\n * - dragstart: add 'dragging' class to element, set effectAllowed = 'move'\n * - dragover: set dropEffect = 'move'\n * - dragend: remove 'dragging' class from element\n *\n * Listeners for stationary items being dragged over:\n * - dragenter: add 'drag-target-...' classes to element\n * - dragleave: remove 'drag-target-...' classes from element\n * - drop: remove 'drag-target-...' classes from element, move dropped array item\n */\n@Directive({\n  selector: '[orderable]',\n})\nexport class OrderableDirective implements OnInit {\n  arrayLayoutIndex: string;\n  element: any;\n  overParentElement = false;\n  overChildElement = false;\n  @Input() orderable: boolean;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private elementRef: ElementRef,\n    private jsf: JsonSchemaFormService,\n    private ngZone: NgZone\n  ) { }\n\n  ngOnInit() {\n    if (this.orderable && this.layoutNode && this.layoutIndex && this.dataIndex) {\n      this.element = this.elementRef.nativeElement;\n      this.element.draggable = true;\n      this.arrayLayoutIndex = 'move:' + this.layoutIndex.slice(0, -1).toString();\n\n      this.ngZone.runOutsideAngular(() => {\n\n        // Listeners for movable element being dragged:\n\n        this.element.addEventListener('dragstart', (event) => {\n          event.dataTransfer.effectAllowed = 'move';\n          // Hack to bypass stupid HTML drag-and-drop dataTransfer protection\n          // so drag source info will be available on dragenter\n          const sourceArrayIndex = this.dataIndex[this.dataIndex.length - 1];\n          sessionStorage.setItem(this.arrayLayoutIndex, sourceArrayIndex + '');\n        });\n\n        this.element.addEventListener('dragover', (event) => {\n          if (event.preventDefault) { event.preventDefault(); }\n          event.dataTransfer.dropEffect = 'move';\n          return false;\n        });\n\n        // Listeners for stationary items being dragged over:\n\n        this.element.addEventListener('dragenter', (event) => {\n          // Part 1 of a hack, inspired by Dragster, to simulate mouseover and mouseout\n          // behavior while dragging items - http://bensmithett.github.io/dragster/\n          if (this.overParentElement) {\n            return this.overChildElement = true;\n          } else {\n            this.overParentElement = true;\n          }\n\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\n          if (sourceArrayIndex !== null) {\n            if (this.dataIndex[this.dataIndex.length - 1] < +sourceArrayIndex) {\n              this.element.classList.add('drag-target-top');\n            } else if (this.dataIndex[this.dataIndex.length - 1] > +sourceArrayIndex) {\n              this.element.classList.add('drag-target-bottom');\n            }\n          }\n        });\n\n        this.element.addEventListener('dragleave', (event) => {\n          // Part 2 of the Dragster hack\n          if (this.overChildElement) {\n            this.overChildElement = false;\n          } else if (this.overParentElement) {\n            this.overParentElement = false;\n          }\n\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\n          if (!this.overParentElement && !this.overChildElement && sourceArrayIndex !== null) {\n            this.element.classList.remove('drag-target-top');\n            this.element.classList.remove('drag-target-bottom');\n          }\n        });\n\n        this.element.addEventListener('drop', (event) => {\n          this.element.classList.remove('drag-target-top');\n          this.element.classList.remove('drag-target-bottom');\n          // Confirm that drop target is another item in the same array as source item\n          const sourceArrayIndex = sessionStorage.getItem(this.arrayLayoutIndex);\n          const destArrayIndex = this.dataIndex[this.dataIndex.length - 1];\n          if (sourceArrayIndex !== null && +sourceArrayIndex !== destArrayIndex) {\n            // Move array item\n            this.jsf.moveArrayItem(this, +sourceArrayIndex, destArrayIndex);\n          }\n          sessionStorage.removeItem(this.arrayLayoutIndex);\n          return false;\n        });\n\n      });\n    }\n  }\n}\n","import { AddReferenceComponent } from './add-reference.component';\nimport { OneOfComponent } from './one-of.component';\nimport { ButtonComponent } from './button.component';\nimport { CheckboxComponent } from './checkbox.component';\nimport { CheckboxesComponent } from './checkboxes.component';\nimport { FileComponent } from './file.component';\nimport { HiddenComponent } from './hidden.component';\nimport { InputComponent } from './input.component';\nimport { MessageComponent } from './message.component';\nimport { NoneComponent } from './none.component';\nimport { NumberComponent } from './number.component';\nimport { RadiosComponent } from './radios.component';\nimport { RootComponent } from './root.component';\nimport { SectionComponent } from './section.component';\nimport { SelectComponent } from './select.component';\nimport { SelectFrameworkComponent } from './select-framework.component';\nimport { SelectWidgetComponent } from './select-widget.component';\nimport { SubmitComponent } from './submit.component';\nimport { TabComponent } from './tab.component';\nimport { TabsComponent } from './tabs.component';\nimport { TemplateComponent } from './template.component';\nimport { TextareaComponent } from './textarea.component';\n\nexport const BASIC_WIDGETS = [\n  AddReferenceComponent, OneOfComponent, ButtonComponent, CheckboxComponent,\n  CheckboxesComponent, FileComponent, HiddenComponent, InputComponent,\n  MessageComponent, NoneComponent, NumberComponent, RadiosComponent,\n  RootComponent, SectionComponent, SelectComponent, SelectFrameworkComponent,\n  SelectWidgetComponent, SubmitComponent, TabComponent, TabsComponent,\n  TemplateComponent, TextareaComponent\n];\n\nexport { AddReferenceComponent } from './add-reference.component';\nexport { OneOfComponent } from './one-of.component';\nexport { ButtonComponent } from './button.component';\nexport { CheckboxComponent } from './checkbox.component';\nexport { CheckboxesComponent } from './checkboxes.component';\nexport { FileComponent } from './file.component';\nexport { HiddenComponent } from './hidden.component';\nexport { InputComponent } from './input.component';\nexport { MessageComponent } from './message.component';\nexport { NoneComponent } from './none.component';\nexport { NumberComponent } from './number.component';\nexport { OrderableDirective } from './orderable.directive';\nexport { RadiosComponent } from './radios.component';\nexport { RootComponent } from './root.component';\nexport { SectionComponent } from './section.component';\nexport { SelectComponent } from './select.component';\nexport { SelectFrameworkComponent } from './select-framework.component';\nexport { SelectWidgetComponent } from './select-widget.component';\nexport { SubmitComponent } from './submit.component';\nexport { TabComponent } from './tab.component';\nexport { TabsComponent } from './tabs.component';\nexport { TemplateComponent } from './template.component';\nexport { TextareaComponent } from './textarea.component';\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../json-schema-form.service';\n\nimport { BASIC_WIDGETS } from './index';\nimport { OrderableDirective } from './orderable.directive';\n\n@NgModule({\n  imports:         [ CommonModule, FormsModule, ReactiveFormsModule ],\n  declarations:    [ ...BASIC_WIDGETS, OrderableDirective ],\n  exports:         [ ...BASIC_WIDGETS, OrderableDirective ],\n  entryComponents: [ ...BASIC_WIDGETS ],\n  providers:       [ JsonSchemaFormService ]\n})\nexport class WidgetLibraryModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: WidgetLibraryModule,\n      providers: [ JsonSchemaFormService ]\n    };\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { Framework } from '../framework';\n// No framework - plain HTML controls (styles from form layout only)\nimport { NoFrameworkComponent } from './no-framework.component';\nimport { NoFramework } from './no.framework';\n\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { FrameworkLibraryService } from '../framework-library.service';\n\n@NgModule({\n  imports: [CommonModule, WidgetLibraryModule],\n  declarations: [NoFrameworkComponent],\n  exports: [NoFrameworkComponent],\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\n    { provide: Framework, useClass: NoFramework, multi: true }\n  ],\n  entryComponents: [NoFrameworkComponent]\n})\nexport class NoFrameworkModule { }\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { hasValue, JsonPointer } from '../../shared';\n\n@Component({\n  selector: 'flex-layout-root-widget',\n  template: `\n    <div *ngFor=\"let layoutNode of layout; let i = index\"\n      [class.form-flex-item]=\"isFlexItem\"\n      [style.flex-grow]=\"getFlexAttribute(layoutNode, 'flex-grow')\"\n      [style.flex-shrink]=\"getFlexAttribute(layoutNode, 'flex-shrink')\"\n      [style.flex-basis]=\"getFlexAttribute(layoutNode, 'flex-basis')\"\n      [style.align-self]=\"(layoutNode?.options || {})['align-self']\"\n      [style.order]=\"layoutNode?.options?.order\"\n      [fxFlex]=\"layoutNode?.options?.fxFlex\"\n      [fxFlexOrder]=\"layoutNode?.options?.fxFlexOrder\"\n      [fxFlexOffset]=\"layoutNode?.options?.fxFlexOffset\"\n      [fxFlexAlign]=\"layoutNode?.options?.fxFlexAlign\">\n      <select-framework-widget *ngIf=\"showWidget(layoutNode)\"\n        [dataIndex]=\"layoutNode?.arrayItem ? (dataIndex || []).concat(i) : (dataIndex || [])\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutNode\"></select-framework-widget>\n    <div>`,\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class FlexLayoutRootComponent {\n  @Input() dataIndex: number[];\n  @Input() layoutIndex: number[];\n  @Input() layout: any[];\n  @Input() isFlexItem = false;\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  removeItem(item) {\n    this.jsf.removeItem(item);\n  }\n\n  // Set attributes for flexbox child\n  // (container attributes are set in flex-layout-section.component)\n  getFlexAttribute(node: any, attribute: string) {\n    const index = ['flex-grow', 'flex-shrink', 'flex-basis'].indexOf(attribute);\n    return ((node.options || {}).flex || '').split(/\\s+/)[index] ||\n      (node.options || {})[attribute] || ['1', '1', 'auto'][index];\n  }\n\n  showWidget(layoutNode: any): boolean {\n    return this.jsf.evaluateCondition(layoutNode, this.dataIndex);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { toTitleCase } from '../../shared';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  selector: 'flex-layout-section-widget',\n  template: `\n    <div *ngIf=\"containerType === 'div'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\">\n      <label *ngIf=\"sectionTitle\"\n        [class]=\"'legend ' + (options?.labelHtmlClass || '')\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></label>\n      <flex-layout-root-widget *ngIf=\"expanded\"\n        [layout]=\"layoutNode.items\"\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [fxLayout]=\"getFlexAttribute('layout')\"\n        [fxLayoutGap]=\"options?.fxLayoutGap\"\n        [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n        [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>\n\n    <fieldset *ngIf=\"containerType === 'fieldset'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\"\n      [disabled]=\"options?.readonly\">\n      <legend *ngIf=\"sectionTitle\"\n        [class]=\"'legend ' + (options?.labelHtmlClass || '')\"\n        [innerHTML]=\"sectionTitle\"\n        (click)=\"toggleExpanded()\"></legend>\n      <flex-layout-root-widget *ngIf=\"expanded\"\n        [layout]=\"layoutNode.items\"\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [isFlexItem]=\"getFlexAttribute('is-flex')\"\n        [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n        [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n        [style.display]=\"getFlexAttribute('display')\"\n        [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n        [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n        [style.justify-content]=\"getFlexAttribute('justify-content')\"\n        [style.align-items]=\"getFlexAttribute('align-items')\"\n        [style.align-content]=\"getFlexAttribute('align-content')\"\n        [fxLayout]=\"getFlexAttribute('layout')\"\n        [fxLayoutGap]=\"options?.fxLayoutGap\"\n        [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n        [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </fieldset>\n\n    <mat-card *ngIf=\"containerType === 'card'\"\n      [class]=\"options?.htmlClass || ''\"\n      [class.expandable]=\"options?.expandable && !expanded\"\n      [class.expanded]=\"options?.expandable && expanded\">\n      <mat-card-header *ngIf=\"sectionTitle\">\n        <legend\n          [class]=\"'legend ' + (options?.labelHtmlClass || '')\"\n          [innerHTML]=\"sectionTitle\"\n          (click)=\"toggleExpanded()\"></legend>\n      </mat-card-header>\n      <mat-card-content *ngIf=\"expanded\">\n        <fieldset [disabled]=\"options?.readonly\">\n          <flex-layout-root-widget *ngIf=\"expanded\"\n            [layout]=\"layoutNode.items\"\n            [dataIndex]=\"dataIndex\"\n            [layoutIndex]=\"layoutIndex\"\n            [isFlexItem]=\"getFlexAttribute('is-flex')\"\n            [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n            [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n            [style.display]=\"getFlexAttribute('display')\"\n            [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n            [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n            [style.justify-content]=\"getFlexAttribute('justify-content')\"\n            [style.align-items]=\"getFlexAttribute('align-items')\"\n            [style.align-content]=\"getFlexAttribute('align-content')\"\n            [fxLayout]=\"getFlexAttribute('layout')\"\n            [fxLayoutGap]=\"options?.fxLayoutGap\"\n            [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n            [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n          </fieldset>\n      </mat-card-content>\n      <mat-card-footer>\n        <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n          [innerHTML]=\"options?.errorMessage\"></mat-error>\n      </mat-card-footer>\n    </mat-card>\n\n    <mat-expansion-panel *ngIf=\"containerType === 'expansion-panel'\"\n      [expanded]=\"expanded\"\n      [hideToggle]=\"!options?.expandable\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          <legend *ngIf=\"sectionTitle\"\n            [class]=\"options?.labelHtmlClass\"\n            [innerHTML]=\"sectionTitle\"\n            (click)=\"toggleExpanded()\"></legend>\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <fieldset [disabled]=\"options?.readonly\">\n        <flex-layout-root-widget *ngIf=\"expanded\"\n          [layout]=\"layoutNode.items\"\n          [dataIndex]=\"dataIndex\"\n          [layoutIndex]=\"layoutIndex\"\n          [isFlexItem]=\"getFlexAttribute('is-flex')\"\n          [class.form-flex-column]=\"getFlexAttribute('flex-direction') === 'column'\"\n          [class.form-flex-row]=\"getFlexAttribute('flex-direction') === 'row'\"\n          [style.display]=\"getFlexAttribute('display')\"\n          [style.flex-direction]=\"getFlexAttribute('flex-direction')\"\n          [style.flex-wrap]=\"getFlexAttribute('flex-wrap')\"\n          [style.justify-content]=\"getFlexAttribute('justify-content')\"\n          [style.align-items]=\"getFlexAttribute('align-items')\"\n          [style.align-content]=\"getFlexAttribute('align-content')\"\n          [fxLayout]=\"getFlexAttribute('layout')\"\n          [fxLayoutGap]=\"options?.fxLayoutGap\"\n          [fxLayoutAlign]=\"options?.fxLayoutAlign\"\n          [attr.fxFlexFill]=\"options?.fxLayoutAlign\"></flex-layout-root-widget>\n      </fieldset>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </mat-expansion-panel>`,\n  styles: [`\n    fieldset { border: 0; margin: 0; padding: 0; }\n    .legend { font-weight: bold; }\n    .expandable > .legend:before { content: 'â¶'; padding-right: .3em; }\n    .expanded > .legend:before { content: 'â¼'; padding-right: .2em; }\n  `],\n})\nexport class FlexLayoutSectionComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  expanded = true;\n  containerType = 'div';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  get sectionTitle() {\n    return this.options.notitle ? null : this.jsf.setItemTitle(this);\n  }\n\n  ngOnInit() {\n    this.jsf.initializeControl(this);\n    this.options = this.layoutNode.options || {};\n    this.expanded = typeof this.options.expanded === 'boolean' ?\n      this.options.expanded : !this.options.expandable;\n    switch (this.layoutNode.type) {\n      case 'section': case 'array': case 'fieldset': case 'advancedfieldset':\n      case 'authfieldset': case 'optionfieldset': case 'selectfieldset':\n        this.containerType = 'fieldset';\n        break;\n      case 'card':\n        this.containerType = 'card';\n        break;\n      case 'expansion-panel':\n        this.containerType = 'expansion-panel';\n        break;\n      default: // 'div', 'flex', 'tab', 'conditional', 'actions'\n        this.containerType = 'div';\n    }\n  }\n\n  toggleExpanded() {\n    if (this.options.expandable) { this.expanded = !this.expanded; }\n  }\n\n  // Set attributes for flexbox container\n  // (child attributes are set in flex-layout-root.component)\n  getFlexAttribute(attribute: string) {\n    const flexActive: boolean =\n      this.layoutNode.type === 'flex' ||\n      !!this.options.displayFlex ||\n      this.options.display === 'flex';\n    // if (attribute !== 'flex' && !flexActive) { return null; }\n    switch (attribute) {\n      case 'is-flex':\n        return flexActive;\n      case 'display':\n        return flexActive ? 'flex' : 'initial';\n      case 'flex-direction': case 'flex-wrap':\n        const index = ['flex-direction', 'flex-wrap'].indexOf(attribute);\n        return (this.options['flex-flow'] || '').split(/\\s+/)[index] ||\n          this.options[attribute] || ['column', 'nowrap'][index];\n      case 'justify-content': case 'align-items': case 'align-content':\n        return this.options[attribute];\n      case 'layout':\n        return (this.options.fxLayout || 'row') +\n          this.options.fxLayoutWrap ? ' ' + this.options.fxLayoutWrap : '';\n\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  selector: 'material-add-reference-widget',\n  template: `\n    <section [class]=\"options?.htmlClass || ''\" align=\"end\">\n      <button mat-raised-button *ngIf=\"showAddButton\"\n        [color]=\"options?.color || 'accent'\"\n        [disabled]=\"options?.readonly\"\n        (click)=\"addItem($event)\">\n        <span *ngIf=\"options?.icon\" [class]=\"options?.icon\"></span>\n        <span *ngIf=\"options?.title\" [innerHTML]=\"buttonText\"></span>\n      </button>\n    </section>`,\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class MaterialAddReferenceComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  previousLayoutIndex: number[];\n  previousDataIndex: number[];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n  }\n\n  get showAddButton(): boolean {\n    return !this.layoutNode.arrayItem ||\n      this.layoutIndex[this.layoutIndex.length - 1] < this.options.maxItems;\n  }\n\n  addItem(event) {\n    event.preventDefault();\n    this.jsf.addItem(this);\n  }\n\n  get buttonText(): string {\n    const parent: any = {\n      dataIndex: this.dataIndex.slice(0, -1),\n      layoutIndex: this.layoutIndex.slice(0, -1),\n      layoutNode: this.jsf.getParentNode(this),\n    };\n    return parent.layoutNode.add ||\n      this.jsf.setArrayItemTitle(parent, this.layoutNode, this.itemCount);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  selector: 'material-one-of-widget',\n  template: ``,\n})\nexport class MaterialOneOfComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { hasOwn } from '../../shared/utility.functions';\n\n@Component({\n  selector: 'material-button-widget',\n  template: `\n    <div class=\"button-row\" [class]=\"options?.htmlClass || ''\">\n      <button mat-raised-button\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [color]=\"options?.color || 'primary'\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (click)=\"updateValue($event)\">\n        <mat-icon *ngIf=\"options?.icon\" class=\"mat-24\">{{options?.icon}}</mat-icon>\n        <span *ngIf=\"options?.title\" [innerHTML]=\"options?.title\"></span>\n      </button>\n    </div>`,\n    styles: [` button { margin-top: 10px; } `],\n})\nexport class MaterialButtonComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (hasOwn(this.options, 'disabled')) {\n      this.controlDisabled = this.options.disabled;\n    } else if (this.jsf.formOptions.disableInvalidSubmit) {\n      this.controlDisabled = !this.jsf.isValid;\n      this.jsf.isValidChanges.subscribe(isValid => this.controlDisabled = !isValid);\n    }\n  }\n\n  updateValue(event) {\n    if (typeof this.options.onClick === 'function') {\n      this.options.onClick(event);\n    } else {\n      this.jsf.updateValue(this, event.target.value);\n    }\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { buildTitleMap } from '../../shared';\n\n@Component({\n  selector: 'material-button-group-widget',\n  template: `\n    <div>\n      <div *ngIf=\"options?.title\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id\"\n          [class]=\"options?.labelHtmlClass || ''\"\n          [style.display]=\"options?.notitle ? 'none' : ''\"\n          [innerHTML]=\"options?.title\"></label>\n      </div>\n      <mat-button-toggle-group\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [name]=\"controlName\"\n        [value]=\"controlValue\"\n        [vertical]=\"!!options.vertical\">\n        <mat-button-toggle *ngFor=\"let radioItem of radiosList\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.name\"\n          [value]=\"radioItem?.value\"\n          (click)=\"updateValue(radioItem?.value)\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </mat-button-toggle>\n      </mat-button-toggle-group>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>`,\n    styles: [` mat-error { font-size: 75%; } `],\n})\nexport class MaterialButtonGroupComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  radiosList: any[] = [];\n  vertical = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.radiosList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, true\n    );\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(value) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { hasOwn } from './../../shared/utility.functions';\n\n@Component({\n  selector: 'material-checkbox-widget',\n  template: `\n    <mat-checkbox *ngIf=\"boundControl && !showSlideToggle\"\n      [formControl]=\"formControl\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      (blur)=\"options.showErrors = true\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-checkbox>\n    <mat-checkbox *ngIf=\"!boundControl && !showSlideToggle\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [disabled]=\"controlDisabled || options?.readonly\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      [checked]=\"isChecked\"\n      (blur)=\"options.showErrors = true\"\n      (change)=\"updateValue($event)\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-checkbox>\n    <mat-slide-toggle *ngIf=\"boundControl && showSlideToggle\"\n      [formControl]=\"formControl\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      (blur)=\"options.showErrors = true\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-slide-toggle>\n    <mat-slide-toggle *ngIf=\"!boundControl && showSlideToggle\"\n      align=\"left\"\n      [color]=\"options?.color || 'primary'\"\n      [disabled]=\"controlDisabled || options?.readonly\"\n      [id]=\"'control' + layoutNode?._id\"\n      labelPosition=\"after\"\n      [name]=\"controlName\"\n      [checked]=\"isChecked\"\n      (blur)=\"options.showErrors = true\"\n      (change)=\"updateValue($event)\">\n      <span *ngIf=\"options?.title\"\n        class=\"checkbox-name\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></span>\n    </mat-slide-toggle>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    .checkbox-name { white-space: nowrap; }\n    mat-error { font-size: 75%; }\n  `],\n})\nexport class MaterialCheckboxComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  trueValue: any = true;\n  falseValue: any = false;\n  showSlideToggle = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this, !this.options.readonly);\n    if (this.controlValue === null || this.controlValue === undefined) {\n      this.controlValue = false;\n      this.jsf.updateValue(this, this.falseValue);\n    }\n    if (this.layoutNode.type === 'slide-toggle' ||\n      this.layoutNode.format === 'slide-toggle'\n    ) {\n      this.showSlideToggle = true;\n    }\n  }\n\n  updateValue(event) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, event.checked ? this.trueValue : this.falseValue);\n  }\n\n  get isChecked() {\n    return this.jsf.getFormControlValue(this) === this.trueValue;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormArray, AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService, TitleMapItem } from '../../json-schema-form.service';\nimport { buildFormGroup, buildTitleMap, hasOwn, JsonPointer } from '../../shared';\n\n// TODO: Change this to use a Selection List instead?\n// https://material.angular.io/components/list/overview\n\n@Component({\n  selector: 'material-checkboxes-widget',\n  template: `\n    <div>\n      <mat-checkbox type=\"checkbox\"\n        [checked]=\"allChecked\"\n        [color]=\"options?.color || 'primary'\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [indeterminate]=\"someChecked\"\n        [name]=\"options?.name\"\n        (blur)=\"options.showErrors = true\"\n        (change)=\"updateAllValues($event)\">\n        <span class=\"checkbox-name\" [innerHTML]=\"options?.name\"></span>\n      </mat-checkbox>\n      <label *ngIf=\"options?.title\"\n        class=\"title\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [style.display]=\"options?.notitle ? 'none' : ''\"\n        [innerHTML]=\"options?.title\"></label>\n      <ul class=\"checkbox-list\" [class.horizontal-list]=\"horizontalList\">\n        <li *ngFor=\"let checkboxItem of checkboxList\"\n          [class]=\"options?.htmlClass || ''\">\n          <mat-checkbox type=\"checkbox\"\n            [(ngModel)]=\"checkboxItem.checked\"\n            [color]=\"options?.color || 'primary'\"\n            [disabled]=\"controlDisabled || options?.readonly\"\n            [name]=\"checkboxItem?.name\"\n            (blur)=\"options.showErrors = true\"\n            (change)=\"updateValue()\">\n            <span class=\"checkbox-name\" [innerHTML]=\"checkboxItem?.name\"></span>\n          </mat-checkbox>\n        </li>\n      </ul>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>`,\n  styles: [`\n    .title { font-weight: bold; }\n    .checkbox-list { list-style-type: none; }\n    .horizontal-list > li { display: inline-block; margin-right: 10px; zoom: 1; }\n    .checkbox-name { white-space: nowrap; }\n    mat-error { font-size: 75%; }\n  `],\n})\nexport class MaterialCheckboxesComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  horizontalList = false;\n  formArray: AbstractControl;\n  checkboxList: TitleMapItem[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.horizontalList = this.layoutNode.type === 'checkboxes-inline' ||\n      this.layoutNode.type === 'checkboxbuttons';\n    this.jsf.initializeControl(this);\n    this.checkboxList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames, this.options.enum, true\n    );\n    if (this.boundControl) {\n      const formArray = this.jsf.getFormControl(this);\n      for (let checkboxItem of this.checkboxList) {\n        checkboxItem.checked = formArray.value.includes(checkboxItem.value);\n      }\n    }\n  }\n\n  get allChecked(): boolean {\n    return this.checkboxList.filter(t => t.checked).length === this.checkboxList.length;\n  }\n\n  get someChecked(): boolean {\n    const checkedItems = this.checkboxList.filter(t => t.checked).length;\n    return checkedItems > 0 && checkedItems < this.checkboxList.length;\n  }\n\n  updateValue() {\n    this.options.showErrors = true;\n    if (this.boundControl) {\n      this.jsf.updateArrayCheckboxList(this, this.checkboxList);\n    }\n  }\n\n  updateAllValues(event: any) {\n    this.options.showErrors = true;\n    this.checkboxList.forEach(t => t.checked = event.checked);\n    this.updateValue();\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  selector: 'material-chip-list-widget',\n  template: ``,\n})\nexport class MaterialChipListComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit, OnChanges } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { dateToString, hasOwn, stringToDate } from '../../shared';\n\n@Component({\n  selector: 'material-datepicker-widget',\n  template: `\n    <mat-form-field [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <input matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [id]=\"'control' + layoutNode?._id\"\n        [max]=\"options?.maximum\"\n        [matDatepicker]=\"picker\"\n        [min]=\"options?.minimum\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        (blur)=\"options.showErrors = true\">\n      <input matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [id]=\"'control' + layoutNode?._id\"\n        [max]=\"options?.maximum\"\n        [matDatepicker]=\"picker\"\n        [min]=\"options?.minimum\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [value]=\"dateValue\"\n        (blur)=\"options.showErrors = true\"\n        (change)=\"updateValue($event)\"\n        (input)=\"updateValue($event)\">\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    </mat-form-field>\n    <mat-datepicker #picker\n      (selectedChanged)=\"updateValue($event)\"></mat-datepicker>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialDatepickerComponent implements OnInit, OnChanges {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  dateValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  autoCompleteList: string[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this, !this.options.readonly);\n    this.setControlDate(this.controlValue);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  ngOnChanges() {\n    this.setControlDate(this.controlValue);\n  }\n\n  setControlDate(dateString: string) {\n    this.dateValue = stringToDate(dateString);\n  }\n\n  updateValue(event) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, dateToString(event, this.options));\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  selector: 'material-file-widget',\n  template: ``,\n})\nexport class MaterialFileComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  selector: 'material-input-widget',\n  template: `\n    <mat-form-field\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\n      [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <input matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"layoutNode?.type\"\n        (blur)=\"options.showErrors = true\">\n      <input matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"layoutNode?.type\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\"\n        (blur)=\"options.showErrors = true\">\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n      <mat-autocomplete *ngIf=\"options?.typeahead?.source\">\n        <mat-option *ngFor=\"let word of options?.typeahead?.source\"\n          [value]=\"word\">{{word}}</mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialInputComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: string;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  autoCompleteList: string[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  selector: 'material-number-widget',\n  template: `\n    <mat-form-field\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\n      [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <input matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"'number'\"\n        (blur)=\"options.showErrors = true\">\n      <input matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.max]=\"options?.maximum\"\n        [attr.min]=\"options?.minimum\"\n        [attr.step]=\"options?.multipleOf || options?.step || 'any'\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [type]=\"'number'\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\"\n        (blur)=\"options.showErrors = true\">\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"layoutNode?.type === 'range'\" align=\"start\"\n        [innerHTML]=\"controlValue\"></mat-hint>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialNumberComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  allowNegative = true;\n  allowDecimal = true;\n  allowExponents = false;\n  lastValidNumber = '';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (this.layoutNode.dataType === 'integer') { this.allowDecimal = false; }\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { buildTitleMap } from '../../shared';\n\n@Component({\n  selector: 'material-radios-widget',\n  template: `\n    <div>\n      <div *ngIf=\"options?.title\">\n        <label\n          [attr.for]=\"'control' + layoutNode?._id\"\n          [class]=\"options?.labelHtmlClass || ''\"\n          [style.display]=\"options?.notitle ? 'none' : ''\"\n          [innerHTML]=\"options?.title\"></label>\n      </div>\n      <mat-radio-group *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [style.flex-direction]=\"flexDirection\"\n        [name]=\"controlName\"\n        (blur)=\"options.showErrors = true\">\n        <mat-radio-button *ngFor=\"let radioItem of radiosList\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.name\"\n          [value]=\"radioItem?.value\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </mat-radio-button>\n      </mat-radio-group>\n      <mat-radio-group *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.readonly]=\"options?.readonly ? 'readonly' : null\"\n        [attr.required]=\"options?.required\"\n        [style.flex-direction]=\"flexDirection\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [name]=\"controlName\"\n        [value]=\"controlValue\">\n        <mat-radio-button *ngFor=\"let radioItem of radiosList\"\n          [id]=\"'control' + layoutNode?._id + '/' + radioItem?.name\"\n          [value]=\"radioItem?.value\"\n          (click)=\"updateValue(radioItem?.value)\">\n          <span [innerHTML]=\"radioItem?.name\"></span>\n        </mat-radio-button>\n      </mat-radio-group>\n      <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n        [innerHTML]=\"options?.errorMessage\"></mat-error>\n    </div>`,\n  styles: [`\n    mat-radio-group { display: inline-flex; }\n    mat-radio-button { margin: 2px; }\n    mat-error { font-size: 75%; }\n  `]\n})\nexport class MaterialRadiosComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  flexDirection = 'column';\n  radiosList: any[] = [];\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    if (this.layoutNode.type === 'radios-inline') {\n      this.flexDirection = 'row';\n    }\n    this.radiosList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, true\n    );\n    this.jsf.initializeControl(this, !this.options.readonly);\n  }\n\n  updateValue(value) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { buildTitleMap, isArray } from '../../shared';\n\n@Component({\n  selector: 'material-select-widget',\n  template: `\n    <mat-form-field\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\n      [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <mat-select *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.name]=\"controlName\"\n        [id]=\"'control' + layoutNode?._id\"\n        [multiple]=\"options?.multiple\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        (blur)=\"options.showErrors = true\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <mat-option *ngIf=\"!isArray(selectItem?.items)\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </mat-option>\n          <mat-optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <mat-option *ngFor=\"let subItem of selectItem.items\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </mat-option>\n          </mat-optgroup>\n        </ng-template>\n      </mat-select>\n      <mat-select *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.name]=\"controlName\"\n        [disabled]=\"controlDisabled || options?.readonly\"\n        [id]=\"'control' + layoutNode?._id\"\n        [multiple]=\"options?.multiple\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [required]=\"options?.required\"\n        [style.width]=\"'100%'\"\n        [value]=\"controlValue\"\n        (blur)=\"options.showErrors = true\"\n        (change)=\"updateValue($event)\">\n        <ng-template ngFor let-selectItem [ngForOf]=\"selectList\">\n          <mat-option *ngIf=\"!isArray(selectItem?.items)\"\n            [attr.selected]=\"selectItem?.value === controlValue\"\n            [value]=\"selectItem?.value\">\n            <span [innerHTML]=\"selectItem?.name\"></span>\n          </mat-option>\n          <mat-optgroup *ngIf=\"isArray(selectItem?.items)\"\n            [label]=\"selectItem?.group\">\n            <mat-option *ngFor=\"let subItem of selectItem.items\"\n              [attr.selected]=\"subItem?.value === controlValue\"\n              [value]=\"subItem?.value\">\n              <span [innerHTML]=\"subItem?.name\"></span>\n            </mat-option>\n          </mat-optgroup>\n        </ng-template>\n      </mat-select>\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialSelectComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  selectList: any[] = [];\n  isArray = isArray;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.selectList = buildTitleMap(\n      this.options.titleMap || this.options.enumNames,\n      this.options.enum, !!this.options.required, !!this.options.flatList\n    );\n    this.jsf.initializeControl(this, !this.options.readonly);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, event.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  selector: 'material-slider-widget',\n  template: `\n    <mat-slider thumbLabel *ngIf=\"boundControl\"\n      [formControl]=\"formControl\"\n      [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n      [id]=\"'control' + layoutNode?._id\"\n      [max]=\"options?.maximum\"\n      [min]=\"options?.minimum\"\n      [step]=\"options?.multipleOf || options?.step || 'any'\"\n      [style.width]=\"'100%'\"\n      (blur)=\"options.showErrors = true\"></mat-slider>\n    <mat-slider thumbLabel *ngIf=\"!boundControl\"\n      [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n      [disabled]=\"controlDisabled || options?.readonly\"\n      [id]=\"'control' + layoutNode?._id\"\n      [max]=\"options?.maximum\"\n      [min]=\"options?.minimum\"\n      [step]=\"options?.multipleOf || options?.step || 'any'\"\n      [style.width]=\"'100%'\"\n      [value]=\"controlValue\"\n      (blur)=\"options.showErrors = true\"\n      (change)=\"updateValue($event)\"></mat-slider>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n    styles: [` mat-error { font-size: 75%; } `],\n})\nexport class MaterialSliderComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  allowNegative = true;\n  allowDecimal = true;\n  allowExponents = false;\n  lastValidNumber = '';\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this, !this.options.readonly);\n  }\n\n  updateValue(event) {\n    this.options.showErrors = true;\n    this.jsf.updateValue(this, event.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n// TODO: Add this control\n\n@Component({\n  selector: 'material-stepper-widget',\n  template: ``,\n})\nexport class MaterialStepperComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  selector: 'material-tabs-widget',\n  template: `\n    <nav mat-tab-nav-bar\n      [attr.aria-label]=\"options?.label || options?.title || ''\"\n      [style.width]=\"'100%'\">\n        <a mat-tab-link *ngFor=\"let item of layoutNode?.items; let i = index\"\n          [active]=\"selectedItem === i\"\n          (click)=\"select(i)\">\n          <span *ngIf=\"showAddTab || item.type !== '$ref'\"\n            [innerHTML]=\"setTabTitle(item, i)\"></span>\n        </a>\n    </nav>\n    <div *ngFor=\"let layoutItem of layoutNode?.items; let i = index\"\n      [class]=\"options?.htmlClass || ''\">\n      <select-framework-widget *ngIf=\"selectedItem === i\"\n        [class]=\"(options?.fieldHtmlClass || '') + ' ' + (options?.activeClass || '') + ' ' + (options?.style?.selected || '')\"\n        [dataIndex]=\"layoutNode?.dataType === 'array' ? (dataIndex || []).concat(i) : dataIndex\"\n        [layoutIndex]=\"(layoutIndex || []).concat(i)\"\n        [layoutNode]=\"layoutItem\"></select-framework-widget>\n    </div>`,\n  styles: [` a { cursor: pointer; } `],\n})\nexport class MaterialTabsComponent implements OnInit {\n  options: any;\n  itemCount: number;\n  selectedItem = 0;\n  showAddTab = true;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.itemCount = this.layoutNode.items.length - 1;\n    this.updateControl();\n  }\n\n  select(index) {\n    if (this.layoutNode.items[index].type === '$ref') {\n      this.jsf.addItem({\n        layoutNode: this.layoutNode.items[index],\n        layoutIndex: this.layoutIndex.concat(index),\n        dataIndex: this.dataIndex.concat(index)\n      });\n      this.updateControl();\n    };\n    this.selectedItem = index;\n  }\n\n  updateControl() {\n    this.itemCount = this.layoutNode.items.length - 1;\n    const lastItem = this.layoutNode.items[this.layoutNode.items.length - 1];\n    this.showAddTab = lastItem.type === '$ref' &&\n      this.itemCount < (lastItem.options.maxItems || 1000);\n  }\n\n  setTabTitle(item: any, index: number): string {\n    return this.jsf.setArrayItemTitle(this, item, index);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\n\n@Component({\n  selector: 'material-textarea-widget',\n  template: `\n    <mat-form-field\n      [class]=\"options?.htmlClass || ''\"\n      [floatLabel]=\"options?.floatLabel || (options?.notitle ? 'never' : 'auto')\"\n      [style.width]=\"'100%'\">\n      <span matPrefix *ngIf=\"options?.prefix || options?.fieldAddonLeft\"\n        [innerHTML]=\"options?.prefix || options?.fieldAddonLeft\"></span>\n      <textarea matInput *ngIf=\"boundControl\"\n        [formControl]=\"formControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [required]=\"options?.required\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [style.width]=\"'100%'\"\n        (blur)=\"options.showErrors = true\"></textarea>\n      <textarea matInput *ngIf=\"!boundControl\"\n        [attr.aria-describedby]=\"'control' + layoutNode?._id + 'Status'\"\n        [attr.list]=\"'control' + layoutNode?._id + 'Autocomplete'\"\n        [attr.maxlength]=\"options?.maxLength\"\n        [attr.minlength]=\"options?.minLength\"\n        [attr.pattern]=\"options?.pattern\"\n        [required]=\"options?.required\"\n        [disabled]=\"controlDisabled\"\n        [id]=\"'control' + layoutNode?._id\"\n        [name]=\"controlName\"\n        [placeholder]=\"options?.notitle ? options?.placeholder : options?.title\"\n        [readonly]=\"options?.readonly ? 'readonly' : null\"\n        [style.width]=\"'100%'\"\n        [value]=\"controlValue\"\n        (input)=\"updateValue($event)\"\n        (blur)=\"options.showErrors = true\"></textarea>\n      <span matSuffix *ngIf=\"options?.suffix || options?.fieldAddonRight\"\n        [innerHTML]=\"options?.suffix || options?.fieldAddonRight\"></span>\n      <mat-hint *ngIf=\"options?.description && (!options?.showErrors || !options?.errorMessage)\"\n        align=\"end\" [innerHTML]=\"options?.description\"></mat-hint>\n    </mat-form-field>\n    <mat-error *ngIf=\"options?.showErrors && options?.errorMessage\"\n      [innerHTML]=\"options?.errorMessage\"></mat-error>`,\n  styles: [`\n    mat-error { font-size: 75%; margin-top: -1rem; margin-bottom: 0.5rem; }\n    ::ng-deep mat-form-field .mat-form-field-wrapper .mat-form-field-flex\n      .mat-form-field-infix { width: initial; }\n  `],\n})\nexport class MaterialTextareaComponent implements OnInit {\n  formControl: AbstractControl;\n  controlName: string;\n  controlValue: any;\n  controlDisabled = false;\n  boundControl = false;\n  options: any;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  ngOnInit() {\n    this.options = this.layoutNode.options || {};\n    this.jsf.initializeControl(this);\n    if (!this.options.notitle && !this.options.description && this.options.placeholder) {\n      this.options.description = this.options.placeholder;\n    }\n  }\n\n  updateValue(event) {\n    this.jsf.updateValue(this, event.target.value);\n  }\n}\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit } from '@angular/core';\n\nimport * as _ from 'lodash';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { hasOwn, isArray, isDefined, toTitleCase } from '../../shared';\n\n@Component({\n  selector: 'material-design-framework',\n  template: `\n    <div\n      [class.array-item]=\"widgetLayoutNode?.arrayItem && widgetLayoutNode?.type !== '$ref'\"\n      [orderable]=\"isOrderable\"\n      [dataIndex]=\"dataIndex\"\n      [layoutIndex]=\"layoutIndex\"\n      [layoutNode]=\"widgetLayoutNode\">\n      <svg *ngIf=\"showRemoveButton\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"18\" width=\"18\" viewBox=\"0 0 24 24\"\n        class=\"close-button\"\n        (click)=\"removeItem()\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"/>\n      </svg>\n      <select-widget-widget\n        [dataIndex]=\"dataIndex\"\n        [layoutIndex]=\"layoutIndex\"\n        [layoutNode]=\"widgetLayoutNode\"></select-widget-widget>\n    </div>\n    <div class=\"spacer\" *ngIf=\"widgetLayoutNode?.arrayItem && widgetLayoutNode?.type !== '$ref'\"></div>`,\n  styles: [`\n    .array-item {\n      border-radius: 2px;\n      box-shadow: 0 3px 1px -2px rgba(0,0,0,.2),\n                  0 2px 2px  0   rgba(0,0,0,.14),\n                  0 1px 5px  0   rgba(0,0,0,.12);\n      padding: 6px;\n      position: relative;\n      transition: all 280ms cubic-bezier(.4, 0, .2, 1);\n    }\n    .close-button {\n      cursor: pointer;\n      position: absolute;\n      top: 6px;\n      right: 6px;\n      fill: rgba(0,0,0,.4);\n      visibility: hidden;\n      z-index: 500;\n    }\n    .close-button:hover { fill: rgba(0,0,0,.8); }\n    .array-item:hover > .close-button { visibility: visible; }\n    .spacer { margin: 6px 0; }\n    [draggable=true]:hover {\n      box-shadow: 0 5px 5px -3px rgba(0,0,0,.2),\n                  0 8px 10px 1px rgba(0,0,0,.14),\n                  0 3px 14px 2px rgba(0,0,0,.12);\n      cursor: move;\n      z-index: 10;\n    }\n    [draggable=true].drag-target-top {\n      box-shadow: 0 -2px 0 #000;\n      position: relative; z-index: 20;\n    }\n    [draggable=true].drag-target-bottom {\n      box-shadow: 0 2px 0 #000;\n      position: relative; z-index: 20;\n    }\n  `],\n})\nexport class MaterialDesignFrameworkComponent implements OnInit, OnChanges {\n  frameworkInitialized = false;\n  inputType: string;\n  options: any; // Options used in this framework\n  widgetLayoutNode: any; // layoutNode passed to child widget\n  widgetOptions: any; // Options passed to child widget\n  formControl: any = null;\n  parentArray: any = null;\n  isOrderable = false;\n  dynamicTitle: string = null;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private jsf: JsonSchemaFormService\n  ) { }\n\n  get showRemoveButton(): boolean {\n    if (!this.layoutNode || !this.widgetOptions.removable ||\n      this.widgetOptions.readonly || this.layoutNode.type === '$ref'\n    ) { return false; }\n    if (this.layoutNode.recursiveReference) { return true; }\n    if (!this.layoutNode.arrayItem || !this.parentArray) { return false; }\n    // If array length <= minItems, don't allow removing any items\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\n      // For removable list items, allow removing any item\n      this.layoutNode.arrayItemType === 'list' ? true :\n      // For removable tuple items, only allow removing last item in list\n      this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2;\n  }\n\n  ngOnInit() {\n    this.initializeFramework();\n  }\n\n  ngOnChanges() {\n    if (!this.frameworkInitialized) { this.initializeFramework(); }\n    if (this.dynamicTitle) { this.updateTitle(); }\n  }\n\n  initializeFramework() {\n    if (this.layoutNode) {\n      this.options = _.cloneDeep(this.layoutNode.options || {});\n      this.widgetLayoutNode = {\n        ...this.layoutNode,\n        options: _.cloneDeep(this.layoutNode.options || {})\n      };\n      this.widgetOptions = this.widgetLayoutNode.options;\n      this.formControl = this.jsf.getFormControl(this);\n\n      if (\n        isDefined(this.widgetOptions.minimum) &&\n        isDefined(this.widgetOptions.maximum) &&\n        this.widgetOptions.multipleOf >= 1\n      ) {\n        this.layoutNode.type = 'range';\n      }\n\n      if (\n        !['$ref', 'advancedfieldset', 'authfieldset', 'button', 'card',\n          'checkbox', 'expansion-panel', 'help', 'message', 'msg', 'section',\n          'submit', 'tabarray', 'tabs'].includes(this.layoutNode.type) &&\n        /{{.+?}}/.test(this.widgetOptions.title || '')\n      ) {\n        this.dynamicTitle = this.widgetOptions.title;\n        this.updateTitle();\n      }\n\n      if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\n        this.parentArray = this.jsf.getParentNode(this);\n        if (this.parentArray) {\n          this.isOrderable =\n            this.parentArray.type.slice(0, 3) !== 'tab' &&\n            this.layoutNode.arrayItemType === 'list' &&\n            !this.widgetOptions.readonly &&\n            this.parentArray.options.orderable;\n        }\n      }\n\n      this.frameworkInitialized = true;\n    } else {\n      this.options = {};\n    }\n  }\n\n  updateTitle() {\n    this.widgetLayoutNode.options.title = this.jsf.parseText(\n      this.dynamicTitle,\n      this.jsf.getFormControlValue(this),\n      this.jsf.getFormControlGroup(this).value,\n      this.dataIndex[this.dataIndex.length - 1]\n    );\n  }\n\n  removeItem() {\n    this.jsf.removeItem(this);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Framework } from '../framework';\n\n// Material Design Framework\n// https://github.com/angular/material2\nimport { FlexLayoutRootComponent } from './flex-layout-root.component';\nimport { FlexLayoutSectionComponent } from './flex-layout-section.component';\nimport { MaterialAddReferenceComponent } from './material-add-reference.component';\nimport { MaterialOneOfComponent } from './material-one-of.component';\nimport { MaterialButtonComponent } from './material-button.component';\nimport { MaterialButtonGroupComponent } from './material-button-group.component';\nimport { MaterialCheckboxComponent } from './material-checkbox.component';\nimport { MaterialCheckboxesComponent } from './material-checkboxes.component';\nimport { MaterialChipListComponent } from './material-chip-list.component';\nimport { MaterialDatepickerComponent } from './material-datepicker.component';\nimport { MaterialFileComponent } from './material-file.component';\nimport { MaterialInputComponent } from './material-input.component';\nimport { MaterialNumberComponent } from './material-number.component';\nimport { MaterialRadiosComponent } from './material-radios.component';\nimport { MaterialSelectComponent } from './material-select.component';\nimport { MaterialSliderComponent } from './material-slider.component';\nimport { MaterialStepperComponent } from './material-stepper.component';\nimport { MaterialTabsComponent } from './material-tabs.component';\nimport { MaterialTextareaComponent } from './material-textarea.component';\nimport { MaterialDesignFrameworkComponent } from './material-design-framework.component';\n\n@Injectable()\nexport class MaterialDesignFramework extends Framework {\n  name = 'material-design';\n\n  framework = MaterialDesignFrameworkComponent;\n\n  stylesheets = [\n    '//fonts.googleapis.com/icon?family=Material+Icons',\n    '//fonts.googleapis.com/css?family=Roboto:300,400,500,700',\n  ];\n\n  widgets = {\n    'root':            FlexLayoutRootComponent,\n    'section':         FlexLayoutSectionComponent,\n    '$ref':            MaterialAddReferenceComponent,\n    'button':          MaterialButtonComponent,\n    'button-group':    MaterialButtonGroupComponent,\n    'checkbox':        MaterialCheckboxComponent,\n    'checkboxes':      MaterialCheckboxesComponent,\n    'chip-list':       MaterialChipListComponent,\n    'date':            MaterialDatepickerComponent,\n    'file':            MaterialFileComponent,\n    'number':          MaterialNumberComponent,\n    'one-of':          MaterialOneOfComponent,\n    'radios':          MaterialRadiosComponent,\n    'select':          MaterialSelectComponent,\n    'slider':          MaterialSliderComponent,\n    'stepper':         MaterialStepperComponent,\n    'tabs':            MaterialTabsComponent,\n    'text':            MaterialInputComponent,\n    'textarea':        MaterialTextareaComponent,\n    'alt-date':        'date',\n    'any-of':          'one-of',\n    'card':            'section',\n    'color':           'text',\n    'expansion-panel': 'section',\n    'hidden':          'none',\n    'image':           'none',\n    'integer':         'number',\n    'radiobuttons':    'button-group',\n    'range':           'slider',\n    'submit':          'button',\n    'tagsinput':       'chip-list',\n    'wizard':          'stepper',\n  };\n}\n","import { FlexLayoutRootComponent } from './flex-layout-root.component';\nimport { FlexLayoutSectionComponent } from './flex-layout-section.component';\nimport { MaterialAddReferenceComponent } from './material-add-reference.component';\nimport { MaterialOneOfComponent } from './material-one-of.component';\nimport { MaterialButtonComponent } from './material-button.component';\nimport { MaterialButtonGroupComponent } from './material-button-group.component';\nimport { MaterialCheckboxComponent } from './material-checkbox.component';\nimport { MaterialCheckboxesComponent } from './material-checkboxes.component';\nimport { MaterialChipListComponent } from './material-chip-list.component';\nimport { MaterialDatepickerComponent } from './material-datepicker.component';\nimport { MaterialFileComponent } from './material-file.component';\nimport { MaterialInputComponent } from './material-input.component';\nimport { MaterialNumberComponent } from './material-number.component';\nimport { MaterialRadiosComponent } from './material-radios.component';\nimport { MaterialSelectComponent } from './material-select.component';\nimport { MaterialSliderComponent } from './material-slider.component';\nimport { MaterialStepperComponent } from './material-stepper.component';\nimport { MaterialTabsComponent } from './material-tabs.component';\nimport { MaterialTextareaComponent } from './material-textarea.component';\n\nimport { MaterialDesignFrameworkComponent } from './material-design-framework.component';\n\nexport const MATERIAL_FRAMEWORK_COMPONENTS = [\n  FlexLayoutRootComponent, FlexLayoutSectionComponent,\n  MaterialAddReferenceComponent, MaterialOneOfComponent,\n  MaterialButtonComponent, MaterialButtonGroupComponent,\n  MaterialCheckboxComponent, MaterialCheckboxesComponent,\n  MaterialChipListComponent, MaterialDatepickerComponent,\n  MaterialFileComponent, MaterialInputComponent, MaterialNumberComponent,\n  MaterialRadiosComponent, MaterialSelectComponent, MaterialSliderComponent,\n  MaterialStepperComponent, MaterialTabsComponent, MaterialTextareaComponent,\n  MaterialDesignFrameworkComponent\n];\n\nexport { FlexLayoutRootComponent } from './flex-layout-root.component';\nexport { FlexLayoutSectionComponent } from './flex-layout-section.component';\nexport { MaterialAddReferenceComponent } from './material-add-reference.component';\nexport { MaterialOneOfComponent } from './material-one-of.component';\nexport { MaterialButtonComponent } from './material-button.component';\nexport { MaterialButtonGroupComponent } from './material-button-group.component';\nexport { MaterialCheckboxComponent } from './material-checkbox.component';\nexport { MaterialCheckboxesComponent } from './material-checkboxes.component';\nexport { MaterialChipListComponent } from './material-chip-list.component';\nexport { MaterialDatepickerComponent } from './material-datepicker.component';\nexport { MaterialFileComponent } from './material-file.component';\nexport { MaterialInputComponent } from './material-input.component';\nexport { MaterialNumberComponent } from './material-number.component';\nexport { MaterialRadiosComponent } from './material-radios.component';\nexport { MaterialSelectComponent } from './material-select.component';\nexport { MaterialSliderComponent } from './material-slider.component';\nexport { MaterialStepperComponent } from './material-stepper.component';\nexport { MaterialTabsComponent } from './material-tabs.component';\nexport { MaterialTextareaComponent } from './material-textarea.component';\n\nexport { MaterialDesignFrameworkComponent } from './material-design-framework.component';\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { WidgetLibraryModule } from './widget-library/widget-library.module';\n\nimport { JsonSchemaFormComponent } from './json-schema-form.component';\n\nimport { NoFrameworkModule } from './framework-library/no-framework/no-framework.module';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, ReactiveFormsModule,\n    WidgetLibraryModule, NoFrameworkModule\n  ],\n  declarations: [JsonSchemaFormComponent],\n  exports: [JsonSchemaFormComponent, WidgetLibraryModule]\n})\nexport class JsonSchemaFormModule {}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n  MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatCardModule,\n  MatCheckboxModule, MatChipsModule, MatDatepickerModule, MatExpansionModule,\n  MatFormFieldModule, MatIconModule, MatInputModule, MatNativeDateModule,\n  MatRadioModule, MatSelectModule, MatSliderModule, MatSlideToggleModule,\n  MatStepperModule, MatTabsModule, MatTooltipModule,\n} from '@angular/material';\nexport const ANGULAR_MATERIAL_MODULES = [\n  MatAutocompleteModule, MatButtonModule, MatButtonToggleModule, MatCardModule,\n  MatCheckboxModule, MatChipsModule, MatDatepickerModule, MatExpansionModule,\n  MatFormFieldModule, MatIconModule, MatInputModule, MatNativeDateModule,\n  MatRadioModule, MatSelectModule, MatSliderModule, MatSlideToggleModule,\n  MatStepperModule, MatTabsModule, MatTooltipModule,\n];\n/**\n * unused @angular/material modules:\n * MatDialogModule, MatGridListModule, MatListModule, MatMenuModule,\n * MatPaginatorModule, MatProgressBarModule, MatProgressSpinnerModule,\n * MatSidenavModule, MatSnackBarModule, MatSortModule, MatTableModule,\n * MatToolbarModule,\n */\n\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { Framework } from '../framework';\nimport { MATERIAL_FRAMEWORK_COMPONENTS } from './index';\nimport { MaterialDesignFramework } from './material-design.framework';\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\nimport { JsonSchemaFormModule } from '../../json-schema-form.module';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { FrameworkLibraryService } from '../framework-library.service';\n\n@NgModule({\n  imports: [\n    CommonModule, FormsModule, ReactiveFormsModule, FlexLayoutModule,\n    ...ANGULAR_MATERIAL_MODULES, WidgetLibraryModule, JsonSchemaFormModule\n  ],\n  declarations: [...MATERIAL_FRAMEWORK_COMPONENTS],\n  exports: [JsonSchemaFormModule, ...MATERIAL_FRAMEWORK_COMPONENTS],\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\n    { provide: Framework, useClass: MaterialDesignFramework, multi: true }\n  ],\n  entryComponents: [...MATERIAL_FRAMEWORK_COMPONENTS]\n})\nexport class MaterialDesignFrameworkModule { }\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit } from '@angular/core';\n\nimport * as _ from 'lodash';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { addClasses, inArray } from '../../shared';\n\n/**\n * Bootstrap 3 framework for Angular JSON Schema Form.\n *\n */\n@Component({\n  selector: 'bootstrap-3-framework',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\"\n      [class.has-feedback]=\"options?.feedback && options?.isInputWidget &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-error]=\"options?.enableErrorState && formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-success]=\"options?.enableSuccessState && !formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\">\n\n      <button *ngIf=\"showRemoveButton\"\n        class=\"close pull-right\"\n        type=\"button\"\n        (click)=\"removeItem()\">\n        <span aria-hidden=\"true\">&times;</span>\n        <span class=\"sr-only\">Close</span>\n      </button>\n      <div *ngIf=\"options?.messageLocation === 'top'\">\n          <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n\n      <label *ngIf=\"options?.title && layoutNode?.type !== 'tab'\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [class.sr-only]=\"options?.notitle\"\n        [innerHTML]=\"options?.title\"></label>\n      <p *ngIf=\"layoutNode?.type === 'submit' && jsf?.formOptions?.fieldsRequired\">\n        <strong class=\"text-danger\">*</strong> = required fields\n      </p>\n      <div [class.input-group]=\"options?.fieldAddonLeft || options?.fieldAddonRight\">\n        <span *ngIf=\"options?.fieldAddonLeft\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonLeft\"></span>\n\n        <select-widget-widget\n          [layoutNode]=\"widgetLayoutNode\"\n          [dataIndex]=\"dataIndex\"\n          [layoutIndex]=\"layoutIndex\"></select-widget-widget>\n\n        <span *ngIf=\"options?.fieldAddonRight\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonRight\"></span>\n      </div>\n\n      <span *ngIf=\"options?.feedback && options?.isInputWidget &&\n          !options?.fieldAddonRight && !layoutNode.arrayItem &&\n          (formControl?.dirty || options?.feedbackOnRender)\"\n        [class.glyphicon-ok]=\"options?.enableSuccessState && !formControl?.errors\"\n        [class.glyphicon-remove]=\"options?.enableErrorState && formControl?.errors\"\n        aria-hidden=\"true\"\n        class=\"form-control-feedback glyphicon\"></span>\n      <div *ngIf=\"options?.messageLocation !== 'top'\">\n        <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n    </div>\n\n    <div *ngIf=\"debug && debugOutput\">debug: <pre>{{debugOutput}}</pre></div>\n  `,\n  styles: [`\n    :host /deep/ .list-group-item .form-control-feedback { top: 40; }\n    :host /deep/ .checkbox,\n    :host /deep/ .radio { margin-top: 0; margin-bottom: 0; }\n    :host /deep/ .checkbox-inline,\n    :host /deep/ .checkbox-inline + .checkbox-inline,\n    :host /deep/ .checkbox-inline + .radio-inline,\n    :host /deep/ .radio-inline,\n    :host /deep/ .radio-inline + .radio-inline,\n    :host /deep/ .radio-inline + .checkbox-inline { margin-left: 0; margin-right: 10px; }\n    :host /deep/ .checkbox-inline:last-child,\n    :host /deep/ .radio-inline:last-child { margin-right: 0; }\n    :host /deep/ .ng-invalid.ng-touched { border: 1px solid #f44336; }\n  `],\n})\nexport class Bootstrap3FrameworkComponent implements OnInit, OnChanges {\n  frameworkInitialized = false;\n  widgetOptions: any; // Options passed to child widget\n  widgetLayoutNode: any; // layoutNode passed to child widget\n  options: any; // Options used in this framework\n  formControl: any = null;\n  debugOutput: any = '';\n  debug: any = '';\n  parentArray: any = null;\n  isOrderable = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    public jsf: JsonSchemaFormService\n  ) { }\n\n  get showRemoveButton(): boolean {\n    if (!this.options.removable || this.options.readonly ||\n      this.layoutNode.type === '$ref'\n    ) { return false; }\n    if (this.layoutNode.recursiveReference) { return true; }\n    if (!this.layoutNode.arrayItem || !this.parentArray) { return false; }\n    // If array length <= minItems, don't allow removing any items\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\n      // For removable list items, allow removing any item\n      this.layoutNode.arrayItemType === 'list' ? true :\n      // For removable tuple items, only allow removing last item in list\n      this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2;\n  }\n\n  ngOnInit() {\n    this.initializeFramework();\n    if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\n      this.parentArray = this.jsf.getParentNode(this);\n      if (this.parentArray) {\n        this.isOrderable = this.layoutNode.arrayItemType === 'list' &&\n          !this.options.readonly && this.parentArray.options.orderable;\n      }\n    }\n  }\n\n  ngOnChanges() {\n    if (!this.frameworkInitialized) { this.initializeFramework(); }\n  }\n\n  initializeFramework() {\n    if (this.layoutNode) {\n      this.options = _.cloneDeep(this.layoutNode.options);\n      this.widgetLayoutNode = {\n        ...this.layoutNode,\n        options: _.cloneDeep(this.layoutNode.options)\n      };\n      this.widgetOptions = this.widgetLayoutNode.options;\n      this.formControl = this.jsf.getFormControl(this);\n\n      this.options.isInputWidget = inArray(this.layoutNode.type, [\n        'button', 'checkbox', 'checkboxes-inline', 'checkboxes', 'color',\n        'date', 'datetime-local', 'datetime', 'email', 'file', 'hidden',\n        'image', 'integer', 'month', 'number', 'password', 'radio',\n        'radiobuttons', 'radios-inline', 'radios', 'range', 'reset', 'search',\n        'select', 'submit', 'tel', 'text', 'textarea', 'time', 'url', 'week'\n      ]);\n\n      this.options.title = this.setTitle();\n\n      this.options.htmlClass =\n        addClasses(this.options.htmlClass, 'schema-form-' + this.layoutNode.type);\n      if (this.layoutNode.type !== 'flex')  {\n          this.options.htmlClass =\n            this.layoutNode.type === 'array' ?\n              addClasses(this.options.htmlClass, 'list-group') :\n            this.layoutNode.arrayItem && this.layoutNode.type !== '$ref' ?\n              addClasses(this.options.htmlClass, 'list-group-item') :\n              addClasses(this.options.htmlClass, 'form-group');\n      }\n      this.widgetOptions.htmlClass = '';\n      this.options.labelHtmlClass =\n        addClasses(this.options.labelHtmlClass, 'control-label');\n      this.widgetOptions.activeClass =\n        addClasses(this.widgetOptions.activeClass, 'active');\n      this.options.fieldAddonLeft =\n        this.options.fieldAddonLeft || this.options.prepend;\n      this.options.fieldAddonRight =\n        this.options.fieldAddonRight || this.options.append;\n\n      // Add asterisk to titles if required\n      if (this.options.title && this.layoutNode.type !== 'tab' &&\n        !this.options.notitle && this.options.required  &&\n        !this.options.title.includes('*')\n      ) {\n        this.options.title += ' <strong class=\"text-danger\">*</strong>';\n      }\n      // Set miscelaneous styles and settings for each control type\n      switch (this.layoutNode.type) {\n        // Checkbox controls\n        case 'checkbox': case 'checkboxes':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'checkbox');\n        break;\n        case 'checkboxes-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'checkbox');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'checkbox-inline');\n        break;\n        // Radio controls\n        case 'radio': case 'radios':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'radio');\n        break;\n        case 'radios-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'radio');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'radio-inline');\n        break;\n        // Button sets - checkboxbuttons and radiobuttons\n        case 'checkboxbuttons': case 'radiobuttons':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'btn-group');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'btn');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, this.options.style || 'btn-default');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'sr-only');\n        break;\n        // Single button controls\n        case 'button': case 'submit':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-info');\n        break;\n        // Containers - arrays and fieldsets\n        case 'array': case 'fieldset': case 'section': case 'conditional':\n        case 'advancedfieldset': case 'authfieldset':\n        case 'selectfieldset': case 'optionfieldset':\n          this.options.messageLocation = 'top';\n        break;\n        case 'tabarray': case 'tabs':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'tab-content');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'tab-pane');\n          this.widgetOptions.labelHtmlClass = addClasses(\n            this.widgetOptions.labelHtmlClass, 'nav nav-tabs');\n        break;\n        // 'Add' buttons - references\n        case '$ref':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn pull-right');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-default');\n          this.options.icon = 'glyphicon glyphicon-plus';\n        break;\n        // Default - including regular inputs\n        default:\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'form-control');\n      }\n\n      if (this.formControl) {\n        this.updateHelpBlock(this.formControl.status);\n        this.formControl.statusChanges.subscribe(status => this.updateHelpBlock(status));\n\n        if (this.options.debug) {\n          const vars: any[] = [];\n          this.debugOutput = _.map(vars, thisVar => JSON.stringify(thisVar, null, 2)).join('\\n');\n        }\n      }\n      this.frameworkInitialized = true;\n    }\n\n  }\n\n  updateHelpBlock(status) {\n    this.options.helpBlock = status === 'INVALID' &&\n      this.options.enableErrorState && this.formControl.errors &&\n      (this.formControl.dirty || this.options.feedbackOnRender) ?\n        this.jsf.formatErrors(this.formControl.errors, this.options.validationMessages) :\n        this.options.description || this.options.help || null;\n  }\n\n  setTitle(): string {\n    switch (this.layoutNode.type) {\n      case 'button': case 'checkbox': case 'section': case 'help': case 'msg':\n      case 'submit': case 'message': case 'tabarray': case 'tabs': case '$ref':\n        return null;\n      case 'advancedfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Advanced options';\n        return null;\n      case 'authfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Authentication settings';\n        return null;\n      case 'fieldset':\n        this.widgetOptions.title = this.options.title;\n        return null;\n      default:\n        this.widgetOptions.title = null;\n        return this.jsf.setItemTitle(this);\n    }\n  }\n\n  removeItem() {\n    this.jsf.removeItem(this);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Framework } from '../framework';\n\n// Bootstrap 3 Framework\n// https://github.com/valor-software/ng2-bootstrap\nimport { Bootstrap3FrameworkComponent } from './bootstrap-3-framework.component';\n\n@Injectable()\nexport class Bootstrap3Framework extends Framework {\n  name = 'bootstrap-3';\n\n  framework = Bootstrap3FrameworkComponent;\n\n  stylesheets = [\n    '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css',\n    '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css',\n  ];\n\n  scripts = [\n    '//ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js',\n    '//ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js',\n    '//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js',\n  ];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { Framework } from '../framework';\nimport { Bootstrap3FrameworkComponent } from './bootstrap-3-framework.component';\nimport { Bootstrap3Framework } from './bootstrap-3.framework';\n\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\nimport { JsonSchemaFormModule } from '../../json-schema-form.module';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { FrameworkLibraryService } from '../framework-library.service';\n\n\n@NgModule({\n  imports: [JsonSchemaFormModule, CommonModule, WidgetLibraryModule],\n  declarations: [Bootstrap3FrameworkComponent],\n  exports: [JsonSchemaFormModule, Bootstrap3FrameworkComponent],\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\n    { provide: Framework, useClass: Bootstrap3Framework, multi: true }\n  ],\n  entryComponents: [Bootstrap3FrameworkComponent]\n})\nexport class Bootstrap3FrameworkModule { }\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit } from '@angular/core';\n\nimport * as _ from 'lodash';\n\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport {\n  addClasses, hasOwn, inArray, isArray, JsonPointer, toTitleCase\n} from '../../shared';\n\n/**\n * Bootstrap 4 framework for Angular JSON Schema Form.\n *\n */\n@Component({\n  selector: 'bootstrap-4-framework',\n  template: `\n    <div\n      [class]=\"options?.htmlClass || ''\"\n      [class.has-feedback]=\"options?.feedback && options?.isInputWidget &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-error]=\"options?.enableErrorState && formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\"\n      [class.has-success]=\"options?.enableSuccessState && !formControl?.errors &&\n        (formControl?.dirty || options?.feedbackOnRender)\">\n\n      <button *ngIf=\"showRemoveButton\"\n        class=\"close pull-right\"\n        type=\"button\"\n        (click)=\"removeItem()\">\n        <span aria-hidden=\"true\">&times;</span>\n        <span class=\"sr-only\">Close</span>\n      </button>\n      <div *ngIf=\"options?.messageLocation === 'top'\">\n        <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n\n      <label *ngIf=\"options?.title && layoutNode?.type !== 'tab'\"\n        [attr.for]=\"'control' + layoutNode?._id\"\n        [class]=\"options?.labelHtmlClass || ''\"\n        [class.sr-only]=\"options?.notitle\"\n        [innerHTML]=\"options?.title\"></label>\n      <p *ngIf=\"layoutNode?.type === 'submit' && jsf?.formOptions?.fieldsRequired\">\n        <strong class=\"text-danger\">*</strong> = required fields\n      </p>\n      <div [class.input-group]=\"options?.fieldAddonLeft || options?.fieldAddonRight\">\n        <span *ngIf=\"options?.fieldAddonLeft\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonLeft\"></span>\n\n        <select-widget-widget\n          [layoutNode]=\"widgetLayoutNode\"\n          [dataIndex]=\"dataIndex\"\n          [layoutIndex]=\"layoutIndex\"></select-widget-widget>\n\n        <span *ngIf=\"options?.fieldAddonRight\"\n          class=\"input-group-addon\"\n          [innerHTML]=\"options?.fieldAddonRight\"></span>\n      </div>\n\n      <span *ngIf=\"options?.feedback && options?.isInputWidget &&\n          !options?.fieldAddonRight && !layoutNode.arrayItem &&\n          (formControl?.dirty || options?.feedbackOnRender)\"\n        [class.glyphicon-ok]=\"options?.enableSuccessState && !formControl?.errors\"\n        [class.glyphicon-remove]=\"options?.enableErrorState && formControl?.errors\"\n        aria-hidden=\"true\"\n        class=\"form-control-feedback glyphicon\"></span>\n      <div *ngIf=\"options?.messageLocation !== 'top'\">\n        <p *ngIf=\"options?.helpBlock\"\n          class=\"help-block\"\n          [innerHTML]=\"options?.helpBlock\"></p>\n      </div>\n    </div>\n\n    <div *ngIf=\"debug && debugOutput\">debug: <pre>{{debugOutput}}</pre></div>\n  `,\n  styles: [`\n    :host /deep/ .list-group-item .form-control-feedback { top: 40px; }\n    :host /deep/ .checkbox,\n    :host /deep/ .radio { margin-top: 0; margin-bottom: 0; }\n    :host /deep/ .checkbox-inline,\n    :host /deep/ .checkbox-inline + .checkbox-inline,\n    :host /deep/ .checkbox-inline + .radio-inline,\n    :host /deep/ .radio-inline,\n    :host /deep/ .radio-inline + .radio-inline,\n    :host /deep/ .radio-inline + .checkbox-inline { margin-left: 0; margin-right: 10px; }\n    :host /deep/ .checkbox-inline:last-child,\n    :host /deep/ .radio-inline:last-child { margin-right: 0; }\n    :host /deep/ .ng-invalid.ng-touched { border: 1px solid #f44336; }\n  `],\n})\nexport class Bootstrap4FrameworkComponent implements OnInit, OnChanges {\n  frameworkInitialized = false;\n  widgetOptions: any; // Options passed to child widget\n  widgetLayoutNode: any; // layoutNode passed to child widget\n  options: any; // Options used in this framework\n  formControl: any = null;\n  debugOutput: any = '';\n  debug: any = '';\n  parentArray: any = null;\n  isOrderable = false;\n  @Input() layoutNode: any;\n  @Input() layoutIndex: number[];\n  @Input() dataIndex: number[];\n\n  constructor(\n    public changeDetector: ChangeDetectorRef,\n    public jsf: JsonSchemaFormService\n  ) { }\n\n  get showRemoveButton(): boolean {\n    if (!this.options.removable || this.options.readonly ||\n      this.layoutNode.type === '$ref'\n    ) { return false; }\n    if (this.layoutNode.recursiveReference) { return true; }\n    if (!this.layoutNode.arrayItem || !this.parentArray) { return false; }\n    // If array length <= minItems, don't allow removing any items\n    return this.parentArray.items.length - 1 <= this.parentArray.options.minItems ? false :\n      // For removable list items, allow removing any item\n      this.layoutNode.arrayItemType === 'list' ? true :\n        // For removable tuple items, only allow removing last item in list\n        this.layoutIndex[this.layoutIndex.length - 1] === this.parentArray.items.length - 2;\n  }\n\n  ngOnInit() {\n    this.initializeFramework();\n    if (this.layoutNode.arrayItem && this.layoutNode.type !== '$ref') {\n      this.parentArray = this.jsf.getParentNode(this);\n      if (this.parentArray) {\n        this.isOrderable = this.layoutNode.arrayItemType === 'list' &&\n          !this.options.readonly && this.parentArray.options.orderable;\n      }\n    }\n  }\n\n  ngOnChanges() {\n    if (!this.frameworkInitialized) { this.initializeFramework(); }\n  }\n\n  initializeFramework() {\n    if (this.layoutNode) {\n      this.options = _.cloneDeep(this.layoutNode.options);\n      this.widgetLayoutNode = {\n        ...this.layoutNode,\n        options: _.cloneDeep(this.layoutNode.options)\n      };\n      this.widgetOptions = this.widgetLayoutNode.options;\n      this.formControl = this.jsf.getFormControl(this);\n\n      this.options.isInputWidget = inArray(this.layoutNode.type, [\n        'button', 'checkbox', 'checkboxes-inline', 'checkboxes', 'color',\n        'date', 'datetime-local', 'datetime', 'email', 'file', 'hidden',\n        'image', 'integer', 'month', 'number', 'password', 'radio',\n        'radiobuttons', 'radios-inline', 'radios', 'range', 'reset', 'search',\n        'select', 'submit', 'tel', 'text', 'textarea', 'time', 'url', 'week'\n      ]);\n\n      this.options.title = this.setTitle();\n\n      this.options.htmlClass =\n        addClasses(this.options.htmlClass, 'schema-form-' + this.layoutNode.type);\n      this.options.htmlClass =\n        this.layoutNode.type === 'array' ?\n          addClasses(this.options.htmlClass, 'list-group') :\n          this.layoutNode.arrayItem && this.layoutNode.type !== '$ref' ?\n            addClasses(this.options.htmlClass, 'list-group-item') :\n            addClasses(this.options.htmlClass, 'form-group');\n      this.widgetOptions.htmlClass = '';\n      this.options.labelHtmlClass =\n        addClasses(this.options.labelHtmlClass, 'control-label');\n      this.widgetOptions.activeClass =\n        addClasses(this.widgetOptions.activeClass, 'active');\n      this.options.fieldAddonLeft =\n        this.options.fieldAddonLeft || this.options.prepend;\n      this.options.fieldAddonRight =\n        this.options.fieldAddonRight || this.options.append;\n\n      // Add asterisk to titles if required\n      if (this.options.title && this.layoutNode.type !== 'tab' &&\n        !this.options.notitle && this.options.required  &&\n        !this.options.title.includes('*')\n      ) {\n        this.options.title += ' <strong class=\"text-danger\">*</strong>';\n      }\n      // Set miscelaneous styles and settings for each control type\n      switch (this.layoutNode.type) {\n        // Checkbox controls\n        case 'checkbox': case 'checkboxes':\n        this.widgetOptions.htmlClass = addClasses(\n          this.widgetOptions.htmlClass, 'checkbox');\n        break;\n        case 'checkboxes-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'checkbox');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'checkbox-inline');\n          break;\n        // Radio controls\n        case 'radio': case 'radios':\n        this.widgetOptions.htmlClass = addClasses(\n          this.widgetOptions.htmlClass, 'radio');\n        break;\n        case 'radios-inline':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'radio');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'radio-inline');\n          break;\n        // Button sets - checkboxbuttons and radiobuttons\n        case 'checkboxbuttons': case 'radiobuttons':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'btn-group');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, 'btn');\n          this.widgetOptions.itemLabelHtmlClass = addClasses(\n            this.widgetOptions.itemLabelHtmlClass, this.options.style || 'btn-default');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'sr-only');\n        break;\n        // Single button controls\n        case 'button': case 'submit':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-info');\n        break;\n        // Containers - arrays and fieldsets\n        case 'array': case 'fieldset': case 'section': case 'conditional':\n        case 'advancedfieldset': case 'authfieldset':\n        case 'selectfieldset': case 'optionfieldset':\n          this.options.messageLocation = 'top';\n        break;\n        case 'tabarray': case 'tabs':\n          this.widgetOptions.htmlClass = addClasses(\n            this.widgetOptions.htmlClass, 'tab-content');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'tab-pane');\n          this.widgetOptions.labelHtmlClass = addClasses(\n            this.widgetOptions.labelHtmlClass, 'nav nav-tabs');\n        break;\n        // 'Add' buttons - references\n        case '$ref':\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'btn pull-right');\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, this.options.style || 'btn-default');\n          this.options.icon = 'glyphicon glyphicon-plus';\n        break;\n        // Default - including regular inputs\n        default:\n          this.widgetOptions.fieldHtmlClass = addClasses(\n            this.widgetOptions.fieldHtmlClass, 'form-control');\n      }\n\n      if (this.formControl) {\n        this.updateHelpBlock(this.formControl.status);\n        this.formControl.statusChanges.subscribe(status => this.updateHelpBlock(status));\n\n        if (this.options.debug) {\n          let vars: any[] = [];\n          this.debugOutput = _.map(vars, thisVar => JSON.stringify(thisVar, null, 2)).join('\\n');\n        }\n      }\n      this.frameworkInitialized = true;\n    }\n\n  }\n\n  updateHelpBlock(status) {\n    this.options.helpBlock = status === 'INVALID' &&\n      this.options.enableErrorState && this.formControl.errors &&\n      (this.formControl.dirty || this.options.feedbackOnRender) ?\n        this.jsf.formatErrors(this.formControl.errors, this.options.validationMessages) :\n        this.options.description || this.options.help || null;\n  }\n\n  setTitle(): string {\n    switch (this.layoutNode.type) {\n      case 'button': case 'checkbox': case 'section': case 'help': case 'msg':\n      case 'submit': case 'message': case 'tabarray': case 'tabs': case '$ref':\n        return null;\n      case 'advancedfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Advanced options';\n        return null;\n      case 'authfieldset':\n        this.widgetOptions.expandable = true;\n        this.widgetOptions.title = 'Authentication settings';\n        return null;\n      case 'fieldset':\n        this.widgetOptions.title = this.options.title;\n        return null;\n      default:\n        this.widgetOptions.title = null;\n        return this.jsf.setItemTitle(this);\n    }\n  }\n\n  removeItem() {\n    this.jsf.removeItem(this);\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Framework } from '../framework';\n\n// Bootstrap 4 Framework\n// https://github.com/ng-bootstrap/ng-bootstrap\nimport { Bootstrap4FrameworkComponent } from './bootstrap-4-framework.component';\n\n\n@Injectable()\nexport class Bootstrap4Framework extends Framework {\n  name = 'bootstrap-4';\n\n  framework = Bootstrap4FrameworkComponent;\n\n  stylesheets = [\n    '//maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css'\n  ];\n\n  scripts = [\n    '//code.jquery.com/jquery-3.2.1.slim.min.js',\n    '//cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js',\n    '//maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js',\n  ];\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WidgetLibraryModule } from '../../widget-library/widget-library.module';\nimport { Framework } from '../framework';\nimport { Bootstrap4FrameworkComponent } from './bootstrap-4-framework.component';\nimport { Bootstrap4Framework } from './bootstrap-4.framework';\nimport { WidgetLibraryService } from '../../widget-library/widget-library.service';\nimport { JsonSchemaFormModule } from '../../json-schema-form.module';\nimport { JsonSchemaFormService } from '../../json-schema-form.service';\nimport { FrameworkLibraryService } from '../framework-library.service';\n\n@NgModule({\n  imports: [JsonSchemaFormModule, CommonModule, WidgetLibraryModule],\n  declarations: [Bootstrap4FrameworkComponent],\n  exports: [JsonSchemaFormModule, Bootstrap4FrameworkComponent],\n  providers: [JsonSchemaFormService, FrameworkLibraryService, WidgetLibraryService,\n    { provide: Framework, useClass: Bootstrap4Framework, multi: true }\n  ],\n  entryComponents: [Bootstrap4FrameworkComponent]\n})\nexport class Bootstrap4FrameworkModule { }\n"]}